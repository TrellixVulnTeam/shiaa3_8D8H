// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: shiaa3/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// this line is used by starport scaffolding # proto/tx/message
type MsgCreateWinners struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AddressString string `protobuf:"bytes,2,opt,name=AddressString,proto3" json:"AddressString,omitempty"`
	PoolNo        string `protobuf:"bytes,3,opt,name=PoolNo,proto3" json:"PoolNo,omitempty"`
	Winnings      string `protobuf:"bytes,4,opt,name=Winnings,proto3" json:"Winnings,omitempty"`
}

func (m *MsgCreateWinners) Reset()         { *m = MsgCreateWinners{} }
func (m *MsgCreateWinners) String() string { return proto.CompactTextString(m) }
func (*MsgCreateWinners) ProtoMessage()    {}
func (*MsgCreateWinners) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{0}
}
func (m *MsgCreateWinners) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateWinners) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateWinners.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateWinners) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateWinners.Merge(m, src)
}
func (m *MsgCreateWinners) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateWinners) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateWinners.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateWinners proto.InternalMessageInfo

func (m *MsgCreateWinners) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateWinners) GetAddressString() string {
	if m != nil {
		return m.AddressString
	}
	return ""
}

func (m *MsgCreateWinners) GetPoolNo() string {
	if m != nil {
		return m.PoolNo
	}
	return ""
}

func (m *MsgCreateWinners) GetWinnings() string {
	if m != nil {
		return m.Winnings
	}
	return ""
}

type MsgCreateWinnersResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateWinnersResponse) Reset()         { *m = MsgCreateWinnersResponse{} }
func (m *MsgCreateWinnersResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateWinnersResponse) ProtoMessage()    {}
func (*MsgCreateWinnersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{1}
}
func (m *MsgCreateWinnersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateWinnersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateWinnersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateWinnersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateWinnersResponse.Merge(m, src)
}
func (m *MsgCreateWinnersResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateWinnersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateWinnersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateWinnersResponse proto.InternalMessageInfo

func (m *MsgCreateWinnersResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateWinners struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id            uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	AddressString string `protobuf:"bytes,3,opt,name=AddressString,proto3" json:"AddressString,omitempty"`
	PoolNo        string `protobuf:"bytes,4,opt,name=PoolNo,proto3" json:"PoolNo,omitempty"`
	Winnings      string `protobuf:"bytes,5,opt,name=Winnings,proto3" json:"Winnings,omitempty"`
}

func (m *MsgUpdateWinners) Reset()         { *m = MsgUpdateWinners{} }
func (m *MsgUpdateWinners) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateWinners) ProtoMessage()    {}
func (*MsgUpdateWinners) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{2}
}
func (m *MsgUpdateWinners) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateWinners) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateWinners.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateWinners) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateWinners.Merge(m, src)
}
func (m *MsgUpdateWinners) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateWinners) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateWinners.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateWinners proto.InternalMessageInfo

func (m *MsgUpdateWinners) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateWinners) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateWinners) GetAddressString() string {
	if m != nil {
		return m.AddressString
	}
	return ""
}

func (m *MsgUpdateWinners) GetPoolNo() string {
	if m != nil {
		return m.PoolNo
	}
	return ""
}

func (m *MsgUpdateWinners) GetWinnings() string {
	if m != nil {
		return m.Winnings
	}
	return ""
}

type MsgUpdateWinnersResponse struct {
}

func (m *MsgUpdateWinnersResponse) Reset()         { *m = MsgUpdateWinnersResponse{} }
func (m *MsgUpdateWinnersResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateWinnersResponse) ProtoMessage()    {}
func (*MsgUpdateWinnersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{3}
}
func (m *MsgUpdateWinnersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateWinnersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateWinnersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateWinnersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateWinnersResponse.Merge(m, src)
}
func (m *MsgUpdateWinnersResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateWinnersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateWinnersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateWinnersResponse proto.InternalMessageInfo

type MsgDeleteWinners struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteWinners) Reset()         { *m = MsgDeleteWinners{} }
func (m *MsgDeleteWinners) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteWinners) ProtoMessage()    {}
func (*MsgDeleteWinners) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{4}
}
func (m *MsgDeleteWinners) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteWinners) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteWinners.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteWinners) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteWinners.Merge(m, src)
}
func (m *MsgDeleteWinners) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteWinners) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteWinners.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteWinners proto.InternalMessageInfo

func (m *MsgDeleteWinners) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteWinners) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteWinnersResponse struct {
}

func (m *MsgDeleteWinnersResponse) Reset()         { *m = MsgDeleteWinnersResponse{} }
func (m *MsgDeleteWinnersResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteWinnersResponse) ProtoMessage()    {}
func (*MsgDeleteWinnersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{5}
}
func (m *MsgDeleteWinnersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteWinnersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteWinnersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteWinnersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteWinnersResponse.Merge(m, src)
}
func (m *MsgDeleteWinnersResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteWinnersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteWinnersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteWinnersResponse proto.InternalMessageInfo

type MsgCreateMembers struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgCreateMembers) Reset()         { *m = MsgCreateMembers{} }
func (m *MsgCreateMembers) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMembers) ProtoMessage()    {}
func (*MsgCreateMembers) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{6}
}
func (m *MsgCreateMembers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMembers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMembers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMembers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMembers.Merge(m, src)
}
func (m *MsgCreateMembers) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMembers) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMembers.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMembers proto.InternalMessageInfo

func (m *MsgCreateMembers) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateMembers) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgCreateMembersResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateMembersResponse) Reset()         { *m = MsgCreateMembersResponse{} }
func (m *MsgCreateMembersResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMembersResponse) ProtoMessage()    {}
func (*MsgCreateMembersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{7}
}
func (m *MsgCreateMembersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMembersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMembersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMembersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMembersResponse.Merge(m, src)
}
func (m *MsgCreateMembersResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMembersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMembersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMembersResponse proto.InternalMessageInfo

func (m *MsgCreateMembersResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateMembers struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgUpdateMembers) Reset()         { *m = MsgUpdateMembers{} }
func (m *MsgUpdateMembers) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMembers) ProtoMessage()    {}
func (*MsgUpdateMembers) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{8}
}
func (m *MsgUpdateMembers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMembers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMembers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMembers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMembers.Merge(m, src)
}
func (m *MsgUpdateMembers) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMembers) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMembers.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMembers proto.InternalMessageInfo

func (m *MsgUpdateMembers) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateMembers) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateMembers) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgUpdateMembersResponse struct {
}

func (m *MsgUpdateMembersResponse) Reset()         { *m = MsgUpdateMembersResponse{} }
func (m *MsgUpdateMembersResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMembersResponse) ProtoMessage()    {}
func (*MsgUpdateMembersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{9}
}
func (m *MsgUpdateMembersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMembersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMembersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMembersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMembersResponse.Merge(m, src)
}
func (m *MsgUpdateMembersResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMembersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMembersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMembersResponse proto.InternalMessageInfo

type MsgDeleteMembers struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteMembers) Reset()         { *m = MsgDeleteMembers{} }
func (m *MsgDeleteMembers) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteMembers) ProtoMessage()    {}
func (*MsgDeleteMembers) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{10}
}
func (m *MsgDeleteMembers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteMembers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteMembers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteMembers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteMembers.Merge(m, src)
}
func (m *MsgDeleteMembers) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteMembers) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteMembers.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteMembers proto.InternalMessageInfo

func (m *MsgDeleteMembers) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteMembers) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteMembersResponse struct {
}

func (m *MsgDeleteMembersResponse) Reset()         { *m = MsgDeleteMembersResponse{} }
func (m *MsgDeleteMembersResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteMembersResponse) ProtoMessage()    {}
func (*MsgDeleteMembersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{11}
}
func (m *MsgDeleteMembersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteMembersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteMembersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteMembersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteMembersResponse.Merge(m, src)
}
func (m *MsgDeleteMembersResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteMembersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteMembersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteMembersResponse proto.InternalMessageInfo

type MsgCreatePool4Ticket struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AddressString string `protobuf:"bytes,2,opt,name=AddressString,proto3" json:"AddressString,omitempty"`
	LambdaValue   string `protobuf:"bytes,3,opt,name=LambdaValue,proto3" json:"LambdaValue,omitempty"`
}

func (m *MsgCreatePool4Ticket) Reset()         { *m = MsgCreatePool4Ticket{} }
func (m *MsgCreatePool4Ticket) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePool4Ticket) ProtoMessage()    {}
func (*MsgCreatePool4Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{12}
}
func (m *MsgCreatePool4Ticket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePool4Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePool4Ticket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePool4Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePool4Ticket.Merge(m, src)
}
func (m *MsgCreatePool4Ticket) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePool4Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePool4Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePool4Ticket proto.InternalMessageInfo

func (m *MsgCreatePool4Ticket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreatePool4Ticket) GetAddressString() string {
	if m != nil {
		return m.AddressString
	}
	return ""
}

func (m *MsgCreatePool4Ticket) GetLambdaValue() string {
	if m != nil {
		return m.LambdaValue
	}
	return ""
}

type MsgCreatePool4TicketResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreatePool4TicketResponse) Reset()         { *m = MsgCreatePool4TicketResponse{} }
func (m *MsgCreatePool4TicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePool4TicketResponse) ProtoMessage()    {}
func (*MsgCreatePool4TicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{13}
}
func (m *MsgCreatePool4TicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePool4TicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePool4TicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePool4TicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePool4TicketResponse.Merge(m, src)
}
func (m *MsgCreatePool4TicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePool4TicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePool4TicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePool4TicketResponse proto.InternalMessageInfo

func (m *MsgCreatePool4TicketResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdatePool4Ticket struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id            uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	AddressString string `protobuf:"bytes,3,opt,name=AddressString,proto3" json:"AddressString,omitempty"`
	LambdaValue   string `protobuf:"bytes,4,opt,name=LambdaValue,proto3" json:"LambdaValue,omitempty"`
}

func (m *MsgUpdatePool4Ticket) Reset()         { *m = MsgUpdatePool4Ticket{} }
func (m *MsgUpdatePool4Ticket) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePool4Ticket) ProtoMessage()    {}
func (*MsgUpdatePool4Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{14}
}
func (m *MsgUpdatePool4Ticket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePool4Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePool4Ticket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePool4Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePool4Ticket.Merge(m, src)
}
func (m *MsgUpdatePool4Ticket) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePool4Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePool4Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePool4Ticket proto.InternalMessageInfo

func (m *MsgUpdatePool4Ticket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatePool4Ticket) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdatePool4Ticket) GetAddressString() string {
	if m != nil {
		return m.AddressString
	}
	return ""
}

func (m *MsgUpdatePool4Ticket) GetLambdaValue() string {
	if m != nil {
		return m.LambdaValue
	}
	return ""
}

type MsgUpdatePool4TicketResponse struct {
}

func (m *MsgUpdatePool4TicketResponse) Reset()         { *m = MsgUpdatePool4TicketResponse{} }
func (m *MsgUpdatePool4TicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePool4TicketResponse) ProtoMessage()    {}
func (*MsgUpdatePool4TicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{15}
}
func (m *MsgUpdatePool4TicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePool4TicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePool4TicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePool4TicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePool4TicketResponse.Merge(m, src)
}
func (m *MsgUpdatePool4TicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePool4TicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePool4TicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePool4TicketResponse proto.InternalMessageInfo

type MsgDeletePool4Ticket struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeletePool4Ticket) Reset()         { *m = MsgDeletePool4Ticket{} }
func (m *MsgDeletePool4Ticket) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePool4Ticket) ProtoMessage()    {}
func (*MsgDeletePool4Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{16}
}
func (m *MsgDeletePool4Ticket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePool4Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePool4Ticket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePool4Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePool4Ticket.Merge(m, src)
}
func (m *MsgDeletePool4Ticket) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePool4Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePool4Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePool4Ticket proto.InternalMessageInfo

func (m *MsgDeletePool4Ticket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeletePool4Ticket) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeletePool4TicketResponse struct {
}

func (m *MsgDeletePool4TicketResponse) Reset()         { *m = MsgDeletePool4TicketResponse{} }
func (m *MsgDeletePool4TicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePool4TicketResponse) ProtoMessage()    {}
func (*MsgDeletePool4TicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{17}
}
func (m *MsgDeletePool4TicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePool4TicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePool4TicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePool4TicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePool4TicketResponse.Merge(m, src)
}
func (m *MsgDeletePool4TicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePool4TicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePool4TicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePool4TicketResponse proto.InternalMessageInfo

type MsgCreatePool3Ticket struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AddressString string `protobuf:"bytes,2,opt,name=AddressString,proto3" json:"AddressString,omitempty"`
	LambdaValue   string `protobuf:"bytes,3,opt,name=LambdaValue,proto3" json:"LambdaValue,omitempty"`
}

func (m *MsgCreatePool3Ticket) Reset()         { *m = MsgCreatePool3Ticket{} }
func (m *MsgCreatePool3Ticket) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePool3Ticket) ProtoMessage()    {}
func (*MsgCreatePool3Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{18}
}
func (m *MsgCreatePool3Ticket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePool3Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePool3Ticket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePool3Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePool3Ticket.Merge(m, src)
}
func (m *MsgCreatePool3Ticket) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePool3Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePool3Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePool3Ticket proto.InternalMessageInfo

func (m *MsgCreatePool3Ticket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreatePool3Ticket) GetAddressString() string {
	if m != nil {
		return m.AddressString
	}
	return ""
}

func (m *MsgCreatePool3Ticket) GetLambdaValue() string {
	if m != nil {
		return m.LambdaValue
	}
	return ""
}

type MsgCreatePool3TicketResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreatePool3TicketResponse) Reset()         { *m = MsgCreatePool3TicketResponse{} }
func (m *MsgCreatePool3TicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePool3TicketResponse) ProtoMessage()    {}
func (*MsgCreatePool3TicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{19}
}
func (m *MsgCreatePool3TicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePool3TicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePool3TicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePool3TicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePool3TicketResponse.Merge(m, src)
}
func (m *MsgCreatePool3TicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePool3TicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePool3TicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePool3TicketResponse proto.InternalMessageInfo

func (m *MsgCreatePool3TicketResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdatePool3Ticket struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id            uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	AddressString string `protobuf:"bytes,3,opt,name=AddressString,proto3" json:"AddressString,omitempty"`
	LambdaValue   string `protobuf:"bytes,4,opt,name=LambdaValue,proto3" json:"LambdaValue,omitempty"`
}

func (m *MsgUpdatePool3Ticket) Reset()         { *m = MsgUpdatePool3Ticket{} }
func (m *MsgUpdatePool3Ticket) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePool3Ticket) ProtoMessage()    {}
func (*MsgUpdatePool3Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{20}
}
func (m *MsgUpdatePool3Ticket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePool3Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePool3Ticket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePool3Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePool3Ticket.Merge(m, src)
}
func (m *MsgUpdatePool3Ticket) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePool3Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePool3Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePool3Ticket proto.InternalMessageInfo

func (m *MsgUpdatePool3Ticket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatePool3Ticket) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdatePool3Ticket) GetAddressString() string {
	if m != nil {
		return m.AddressString
	}
	return ""
}

func (m *MsgUpdatePool3Ticket) GetLambdaValue() string {
	if m != nil {
		return m.LambdaValue
	}
	return ""
}

type MsgUpdatePool3TicketResponse struct {
}

func (m *MsgUpdatePool3TicketResponse) Reset()         { *m = MsgUpdatePool3TicketResponse{} }
func (m *MsgUpdatePool3TicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePool3TicketResponse) ProtoMessage()    {}
func (*MsgUpdatePool3TicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{21}
}
func (m *MsgUpdatePool3TicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePool3TicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePool3TicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePool3TicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePool3TicketResponse.Merge(m, src)
}
func (m *MsgUpdatePool3TicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePool3TicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePool3TicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePool3TicketResponse proto.InternalMessageInfo

type MsgDeletePool3Ticket struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeletePool3Ticket) Reset()         { *m = MsgDeletePool3Ticket{} }
func (m *MsgDeletePool3Ticket) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePool3Ticket) ProtoMessage()    {}
func (*MsgDeletePool3Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{22}
}
func (m *MsgDeletePool3Ticket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePool3Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePool3Ticket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePool3Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePool3Ticket.Merge(m, src)
}
func (m *MsgDeletePool3Ticket) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePool3Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePool3Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePool3Ticket proto.InternalMessageInfo

func (m *MsgDeletePool3Ticket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeletePool3Ticket) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeletePool3TicketResponse struct {
}

func (m *MsgDeletePool3TicketResponse) Reset()         { *m = MsgDeletePool3TicketResponse{} }
func (m *MsgDeletePool3TicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePool3TicketResponse) ProtoMessage()    {}
func (*MsgDeletePool3TicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{23}
}
func (m *MsgDeletePool3TicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePool3TicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePool3TicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePool3TicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePool3TicketResponse.Merge(m, src)
}
func (m *MsgDeletePool3TicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePool3TicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePool3TicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePool3TicketResponse proto.InternalMessageInfo

type MsgCreatePool2Ticket struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AddressString string `protobuf:"bytes,2,opt,name=AddressString,proto3" json:"AddressString,omitempty"`
	LambdaValue   string `protobuf:"bytes,3,opt,name=LambdaValue,proto3" json:"LambdaValue,omitempty"`
}

func (m *MsgCreatePool2Ticket) Reset()         { *m = MsgCreatePool2Ticket{} }
func (m *MsgCreatePool2Ticket) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePool2Ticket) ProtoMessage()    {}
func (*MsgCreatePool2Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{24}
}
func (m *MsgCreatePool2Ticket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePool2Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePool2Ticket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePool2Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePool2Ticket.Merge(m, src)
}
func (m *MsgCreatePool2Ticket) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePool2Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePool2Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePool2Ticket proto.InternalMessageInfo

func (m *MsgCreatePool2Ticket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreatePool2Ticket) GetAddressString() string {
	if m != nil {
		return m.AddressString
	}
	return ""
}

func (m *MsgCreatePool2Ticket) GetLambdaValue() string {
	if m != nil {
		return m.LambdaValue
	}
	return ""
}

type MsgCreatePool2TicketResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreatePool2TicketResponse) Reset()         { *m = MsgCreatePool2TicketResponse{} }
func (m *MsgCreatePool2TicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePool2TicketResponse) ProtoMessage()    {}
func (*MsgCreatePool2TicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{25}
}
func (m *MsgCreatePool2TicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePool2TicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePool2TicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePool2TicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePool2TicketResponse.Merge(m, src)
}
func (m *MsgCreatePool2TicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePool2TicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePool2TicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePool2TicketResponse proto.InternalMessageInfo

func (m *MsgCreatePool2TicketResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdatePool2Ticket struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id            uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	AddressString string `protobuf:"bytes,3,opt,name=AddressString,proto3" json:"AddressString,omitempty"`
	LambdaValue   string `protobuf:"bytes,4,opt,name=LambdaValue,proto3" json:"LambdaValue,omitempty"`
}

func (m *MsgUpdatePool2Ticket) Reset()         { *m = MsgUpdatePool2Ticket{} }
func (m *MsgUpdatePool2Ticket) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePool2Ticket) ProtoMessage()    {}
func (*MsgUpdatePool2Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{26}
}
func (m *MsgUpdatePool2Ticket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePool2Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePool2Ticket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePool2Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePool2Ticket.Merge(m, src)
}
func (m *MsgUpdatePool2Ticket) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePool2Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePool2Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePool2Ticket proto.InternalMessageInfo

func (m *MsgUpdatePool2Ticket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatePool2Ticket) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdatePool2Ticket) GetAddressString() string {
	if m != nil {
		return m.AddressString
	}
	return ""
}

func (m *MsgUpdatePool2Ticket) GetLambdaValue() string {
	if m != nil {
		return m.LambdaValue
	}
	return ""
}

type MsgUpdatePool2TicketResponse struct {
}

func (m *MsgUpdatePool2TicketResponse) Reset()         { *m = MsgUpdatePool2TicketResponse{} }
func (m *MsgUpdatePool2TicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePool2TicketResponse) ProtoMessage()    {}
func (*MsgUpdatePool2TicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{27}
}
func (m *MsgUpdatePool2TicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePool2TicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePool2TicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePool2TicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePool2TicketResponse.Merge(m, src)
}
func (m *MsgUpdatePool2TicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePool2TicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePool2TicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePool2TicketResponse proto.InternalMessageInfo

type MsgDeletePool2Ticket struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeletePool2Ticket) Reset()         { *m = MsgDeletePool2Ticket{} }
func (m *MsgDeletePool2Ticket) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePool2Ticket) ProtoMessage()    {}
func (*MsgDeletePool2Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{28}
}
func (m *MsgDeletePool2Ticket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePool2Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePool2Ticket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePool2Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePool2Ticket.Merge(m, src)
}
func (m *MsgDeletePool2Ticket) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePool2Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePool2Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePool2Ticket proto.InternalMessageInfo

func (m *MsgDeletePool2Ticket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeletePool2Ticket) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeletePool2TicketResponse struct {
}

func (m *MsgDeletePool2TicketResponse) Reset()         { *m = MsgDeletePool2TicketResponse{} }
func (m *MsgDeletePool2TicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePool2TicketResponse) ProtoMessage()    {}
func (*MsgDeletePool2TicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{29}
}
func (m *MsgDeletePool2TicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePool2TicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePool2TicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePool2TicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePool2TicketResponse.Merge(m, src)
}
func (m *MsgDeletePool2TicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePool2TicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePool2TicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePool2TicketResponse proto.InternalMessageInfo

type MsgCreatePool1Ticket struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AddressString string `protobuf:"bytes,2,opt,name=AddressString,proto3" json:"AddressString,omitempty"`
	LambdaValue   string `protobuf:"bytes,3,opt,name=LambdaValue,proto3" json:"LambdaValue,omitempty"`
}

func (m *MsgCreatePool1Ticket) Reset()         { *m = MsgCreatePool1Ticket{} }
func (m *MsgCreatePool1Ticket) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePool1Ticket) ProtoMessage()    {}
func (*MsgCreatePool1Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{30}
}
func (m *MsgCreatePool1Ticket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePool1Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePool1Ticket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePool1Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePool1Ticket.Merge(m, src)
}
func (m *MsgCreatePool1Ticket) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePool1Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePool1Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePool1Ticket proto.InternalMessageInfo

func (m *MsgCreatePool1Ticket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreatePool1Ticket) GetAddressString() string {
	if m != nil {
		return m.AddressString
	}
	return ""
}

func (m *MsgCreatePool1Ticket) GetLambdaValue() string {
	if m != nil {
		return m.LambdaValue
	}
	return ""
}

type MsgCreatePool1TicketResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreatePool1TicketResponse) Reset()         { *m = MsgCreatePool1TicketResponse{} }
func (m *MsgCreatePool1TicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePool1TicketResponse) ProtoMessage()    {}
func (*MsgCreatePool1TicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{31}
}
func (m *MsgCreatePool1TicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePool1TicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePool1TicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePool1TicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePool1TicketResponse.Merge(m, src)
}
func (m *MsgCreatePool1TicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePool1TicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePool1TicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePool1TicketResponse proto.InternalMessageInfo

func (m *MsgCreatePool1TicketResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdatePool1Ticket struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id            uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	AddressString string `protobuf:"bytes,3,opt,name=AddressString,proto3" json:"AddressString,omitempty"`
	LambdaValue   string `protobuf:"bytes,4,opt,name=LambdaValue,proto3" json:"LambdaValue,omitempty"`
}

func (m *MsgUpdatePool1Ticket) Reset()         { *m = MsgUpdatePool1Ticket{} }
func (m *MsgUpdatePool1Ticket) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePool1Ticket) ProtoMessage()    {}
func (*MsgUpdatePool1Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{32}
}
func (m *MsgUpdatePool1Ticket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePool1Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePool1Ticket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePool1Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePool1Ticket.Merge(m, src)
}
func (m *MsgUpdatePool1Ticket) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePool1Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePool1Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePool1Ticket proto.InternalMessageInfo

func (m *MsgUpdatePool1Ticket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatePool1Ticket) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdatePool1Ticket) GetAddressString() string {
	if m != nil {
		return m.AddressString
	}
	return ""
}

func (m *MsgUpdatePool1Ticket) GetLambdaValue() string {
	if m != nil {
		return m.LambdaValue
	}
	return ""
}

type MsgUpdatePool1TicketResponse struct {
}

func (m *MsgUpdatePool1TicketResponse) Reset()         { *m = MsgUpdatePool1TicketResponse{} }
func (m *MsgUpdatePool1TicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePool1TicketResponse) ProtoMessage()    {}
func (*MsgUpdatePool1TicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{33}
}
func (m *MsgUpdatePool1TicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePool1TicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePool1TicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePool1TicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePool1TicketResponse.Merge(m, src)
}
func (m *MsgUpdatePool1TicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePool1TicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePool1TicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePool1TicketResponse proto.InternalMessageInfo

type MsgDeletePool1Ticket struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeletePool1Ticket) Reset()         { *m = MsgDeletePool1Ticket{} }
func (m *MsgDeletePool1Ticket) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePool1Ticket) ProtoMessage()    {}
func (*MsgDeletePool1Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{34}
}
func (m *MsgDeletePool1Ticket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePool1Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePool1Ticket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePool1Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePool1Ticket.Merge(m, src)
}
func (m *MsgDeletePool1Ticket) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePool1Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePool1Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePool1Ticket proto.InternalMessageInfo

func (m *MsgDeletePool1Ticket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeletePool1Ticket) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeletePool1TicketResponse struct {
}

func (m *MsgDeletePool1TicketResponse) Reset()         { *m = MsgDeletePool1TicketResponse{} }
func (m *MsgDeletePool1TicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePool1TicketResponse) ProtoMessage()    {}
func (*MsgDeletePool1TicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{35}
}
func (m *MsgDeletePool1TicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePool1TicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePool1TicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePool1TicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePool1TicketResponse.Merge(m, src)
}
func (m *MsgDeletePool1TicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePool1TicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePool1TicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePool1TicketResponse proto.InternalMessageInfo

type MsgCreatePool0Ticket struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AddressString string `protobuf:"bytes,2,opt,name=AddressString,proto3" json:"AddressString,omitempty"`
	LambdaValue   string `protobuf:"bytes,3,opt,name=LambdaValue,proto3" json:"LambdaValue,omitempty"`
}

func (m *MsgCreatePool0Ticket) Reset()         { *m = MsgCreatePool0Ticket{} }
func (m *MsgCreatePool0Ticket) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePool0Ticket) ProtoMessage()    {}
func (*MsgCreatePool0Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{36}
}
func (m *MsgCreatePool0Ticket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePool0Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePool0Ticket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePool0Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePool0Ticket.Merge(m, src)
}
func (m *MsgCreatePool0Ticket) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePool0Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePool0Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePool0Ticket proto.InternalMessageInfo

func (m *MsgCreatePool0Ticket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreatePool0Ticket) GetAddressString() string {
	if m != nil {
		return m.AddressString
	}
	return ""
}

func (m *MsgCreatePool0Ticket) GetLambdaValue() string {
	if m != nil {
		return m.LambdaValue
	}
	return ""
}

type MsgCreatePool0TicketResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreatePool0TicketResponse) Reset()         { *m = MsgCreatePool0TicketResponse{} }
func (m *MsgCreatePool0TicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePool0TicketResponse) ProtoMessage()    {}
func (*MsgCreatePool0TicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{37}
}
func (m *MsgCreatePool0TicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePool0TicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePool0TicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePool0TicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePool0TicketResponse.Merge(m, src)
}
func (m *MsgCreatePool0TicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePool0TicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePool0TicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePool0TicketResponse proto.InternalMessageInfo

func (m *MsgCreatePool0TicketResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdatePool0Ticket struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id            uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	AddressString string `protobuf:"bytes,3,opt,name=AddressString,proto3" json:"AddressString,omitempty"`
	LambdaValue   string `protobuf:"bytes,4,opt,name=LambdaValue,proto3" json:"LambdaValue,omitempty"`
}

func (m *MsgUpdatePool0Ticket) Reset()         { *m = MsgUpdatePool0Ticket{} }
func (m *MsgUpdatePool0Ticket) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePool0Ticket) ProtoMessage()    {}
func (*MsgUpdatePool0Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{38}
}
func (m *MsgUpdatePool0Ticket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePool0Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePool0Ticket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePool0Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePool0Ticket.Merge(m, src)
}
func (m *MsgUpdatePool0Ticket) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePool0Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePool0Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePool0Ticket proto.InternalMessageInfo

func (m *MsgUpdatePool0Ticket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatePool0Ticket) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdatePool0Ticket) GetAddressString() string {
	if m != nil {
		return m.AddressString
	}
	return ""
}

func (m *MsgUpdatePool0Ticket) GetLambdaValue() string {
	if m != nil {
		return m.LambdaValue
	}
	return ""
}

type MsgUpdatePool0TicketResponse struct {
}

func (m *MsgUpdatePool0TicketResponse) Reset()         { *m = MsgUpdatePool0TicketResponse{} }
func (m *MsgUpdatePool0TicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePool0TicketResponse) ProtoMessage()    {}
func (*MsgUpdatePool0TicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{39}
}
func (m *MsgUpdatePool0TicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePool0TicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePool0TicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePool0TicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePool0TicketResponse.Merge(m, src)
}
func (m *MsgUpdatePool0TicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePool0TicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePool0TicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePool0TicketResponse proto.InternalMessageInfo

type MsgDeletePool0Ticket struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeletePool0Ticket) Reset()         { *m = MsgDeletePool0Ticket{} }
func (m *MsgDeletePool0Ticket) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePool0Ticket) ProtoMessage()    {}
func (*MsgDeletePool0Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{40}
}
func (m *MsgDeletePool0Ticket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePool0Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePool0Ticket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePool0Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePool0Ticket.Merge(m, src)
}
func (m *MsgDeletePool0Ticket) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePool0Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePool0Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePool0Ticket proto.InternalMessageInfo

func (m *MsgDeletePool0Ticket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeletePool0Ticket) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeletePool0TicketResponse struct {
}

func (m *MsgDeletePool0TicketResponse) Reset()         { *m = MsgDeletePool0TicketResponse{} }
func (m *MsgDeletePool0TicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePool0TicketResponse) ProtoMessage()    {}
func (*MsgDeletePool0TicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{41}
}
func (m *MsgDeletePool0TicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePool0TicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePool0TicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePool0TicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePool0TicketResponse.Merge(m, src)
}
func (m *MsgDeletePool0TicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePool0TicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePool0TicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePool0TicketResponse proto.InternalMessageInfo

type MsgCreateJoinPoolAndStakeAsset struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PoolNo      string `protobuf:"bytes,2,opt,name=PoolNo,proto3" json:"PoolNo,omitempty"`
	AssetSerial string `protobuf:"bytes,3,opt,name=AssetSerial,proto3" json:"AssetSerial,omitempty"`
}

func (m *MsgCreateJoinPoolAndStakeAsset) Reset()         { *m = MsgCreateJoinPoolAndStakeAsset{} }
func (m *MsgCreateJoinPoolAndStakeAsset) String() string { return proto.CompactTextString(m) }
func (*MsgCreateJoinPoolAndStakeAsset) ProtoMessage()    {}
func (*MsgCreateJoinPoolAndStakeAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{42}
}
func (m *MsgCreateJoinPoolAndStakeAsset) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateJoinPoolAndStakeAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateJoinPoolAndStakeAsset.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateJoinPoolAndStakeAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateJoinPoolAndStakeAsset.Merge(m, src)
}
func (m *MsgCreateJoinPoolAndStakeAsset) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateJoinPoolAndStakeAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateJoinPoolAndStakeAsset.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateJoinPoolAndStakeAsset proto.InternalMessageInfo

func (m *MsgCreateJoinPoolAndStakeAsset) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateJoinPoolAndStakeAsset) GetPoolNo() string {
	if m != nil {
		return m.PoolNo
	}
	return ""
}

func (m *MsgCreateJoinPoolAndStakeAsset) GetAssetSerial() string {
	if m != nil {
		return m.AssetSerial
	}
	return ""
}

type MsgCreateJoinPoolAndStakeAssetResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateJoinPoolAndStakeAssetResponse) Reset() {
	*m = MsgCreateJoinPoolAndStakeAssetResponse{}
}
func (m *MsgCreateJoinPoolAndStakeAssetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateJoinPoolAndStakeAssetResponse) ProtoMessage()    {}
func (*MsgCreateJoinPoolAndStakeAssetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{43}
}
func (m *MsgCreateJoinPoolAndStakeAssetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateJoinPoolAndStakeAssetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateJoinPoolAndStakeAssetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateJoinPoolAndStakeAssetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateJoinPoolAndStakeAssetResponse.Merge(m, src)
}
func (m *MsgCreateJoinPoolAndStakeAssetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateJoinPoolAndStakeAssetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateJoinPoolAndStakeAssetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateJoinPoolAndStakeAssetResponse proto.InternalMessageInfo

func (m *MsgCreateJoinPoolAndStakeAssetResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateJoinPoolAndStakeAsset struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id          uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	PoolNo      string `protobuf:"bytes,3,opt,name=PoolNo,proto3" json:"PoolNo,omitempty"`
	AssetSerial string `protobuf:"bytes,4,opt,name=AssetSerial,proto3" json:"AssetSerial,omitempty"`
}

func (m *MsgUpdateJoinPoolAndStakeAsset) Reset()         { *m = MsgUpdateJoinPoolAndStakeAsset{} }
func (m *MsgUpdateJoinPoolAndStakeAsset) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateJoinPoolAndStakeAsset) ProtoMessage()    {}
func (*MsgUpdateJoinPoolAndStakeAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{44}
}
func (m *MsgUpdateJoinPoolAndStakeAsset) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateJoinPoolAndStakeAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateJoinPoolAndStakeAsset.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateJoinPoolAndStakeAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateJoinPoolAndStakeAsset.Merge(m, src)
}
func (m *MsgUpdateJoinPoolAndStakeAsset) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateJoinPoolAndStakeAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateJoinPoolAndStakeAsset.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateJoinPoolAndStakeAsset proto.InternalMessageInfo

func (m *MsgUpdateJoinPoolAndStakeAsset) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateJoinPoolAndStakeAsset) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateJoinPoolAndStakeAsset) GetPoolNo() string {
	if m != nil {
		return m.PoolNo
	}
	return ""
}

func (m *MsgUpdateJoinPoolAndStakeAsset) GetAssetSerial() string {
	if m != nil {
		return m.AssetSerial
	}
	return ""
}

type MsgUpdateJoinPoolAndStakeAssetResponse struct {
}

func (m *MsgUpdateJoinPoolAndStakeAssetResponse) Reset() {
	*m = MsgUpdateJoinPoolAndStakeAssetResponse{}
}
func (m *MsgUpdateJoinPoolAndStakeAssetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateJoinPoolAndStakeAssetResponse) ProtoMessage()    {}
func (*MsgUpdateJoinPoolAndStakeAssetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{45}
}
func (m *MsgUpdateJoinPoolAndStakeAssetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateJoinPoolAndStakeAssetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateJoinPoolAndStakeAssetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateJoinPoolAndStakeAssetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateJoinPoolAndStakeAssetResponse.Merge(m, src)
}
func (m *MsgUpdateJoinPoolAndStakeAssetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateJoinPoolAndStakeAssetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateJoinPoolAndStakeAssetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateJoinPoolAndStakeAssetResponse proto.InternalMessageInfo

type MsgDeleteJoinPoolAndStakeAsset struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteJoinPoolAndStakeAsset) Reset()         { *m = MsgDeleteJoinPoolAndStakeAsset{} }
func (m *MsgDeleteJoinPoolAndStakeAsset) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteJoinPoolAndStakeAsset) ProtoMessage()    {}
func (*MsgDeleteJoinPoolAndStakeAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{46}
}
func (m *MsgDeleteJoinPoolAndStakeAsset) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteJoinPoolAndStakeAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteJoinPoolAndStakeAsset.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteJoinPoolAndStakeAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteJoinPoolAndStakeAsset.Merge(m, src)
}
func (m *MsgDeleteJoinPoolAndStakeAsset) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteJoinPoolAndStakeAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteJoinPoolAndStakeAsset.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteJoinPoolAndStakeAsset proto.InternalMessageInfo

func (m *MsgDeleteJoinPoolAndStakeAsset) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteJoinPoolAndStakeAsset) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteJoinPoolAndStakeAssetResponse struct {
}

func (m *MsgDeleteJoinPoolAndStakeAssetResponse) Reset() {
	*m = MsgDeleteJoinPoolAndStakeAssetResponse{}
}
func (m *MsgDeleteJoinPoolAndStakeAssetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteJoinPoolAndStakeAssetResponse) ProtoMessage()    {}
func (*MsgDeleteJoinPoolAndStakeAssetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73aa2ce1ad6183eb, []int{47}
}
func (m *MsgDeleteJoinPoolAndStakeAssetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteJoinPoolAndStakeAssetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteJoinPoolAndStakeAssetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteJoinPoolAndStakeAssetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteJoinPoolAndStakeAssetResponse.Merge(m, src)
}
func (m *MsgDeleteJoinPoolAndStakeAssetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteJoinPoolAndStakeAssetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteJoinPoolAndStakeAssetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteJoinPoolAndStakeAssetResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateWinners)(nil), "sap200.shiaa3.shiaa3.MsgCreateWinners")
	proto.RegisterType((*MsgCreateWinnersResponse)(nil), "sap200.shiaa3.shiaa3.MsgCreateWinnersResponse")
	proto.RegisterType((*MsgUpdateWinners)(nil), "sap200.shiaa3.shiaa3.MsgUpdateWinners")
	proto.RegisterType((*MsgUpdateWinnersResponse)(nil), "sap200.shiaa3.shiaa3.MsgUpdateWinnersResponse")
	proto.RegisterType((*MsgDeleteWinners)(nil), "sap200.shiaa3.shiaa3.MsgDeleteWinners")
	proto.RegisterType((*MsgDeleteWinnersResponse)(nil), "sap200.shiaa3.shiaa3.MsgDeleteWinnersResponse")
	proto.RegisterType((*MsgCreateMembers)(nil), "sap200.shiaa3.shiaa3.MsgCreateMembers")
	proto.RegisterType((*MsgCreateMembersResponse)(nil), "sap200.shiaa3.shiaa3.MsgCreateMembersResponse")
	proto.RegisterType((*MsgUpdateMembers)(nil), "sap200.shiaa3.shiaa3.MsgUpdateMembers")
	proto.RegisterType((*MsgUpdateMembersResponse)(nil), "sap200.shiaa3.shiaa3.MsgUpdateMembersResponse")
	proto.RegisterType((*MsgDeleteMembers)(nil), "sap200.shiaa3.shiaa3.MsgDeleteMembers")
	proto.RegisterType((*MsgDeleteMembersResponse)(nil), "sap200.shiaa3.shiaa3.MsgDeleteMembersResponse")
	proto.RegisterType((*MsgCreatePool4Ticket)(nil), "sap200.shiaa3.shiaa3.MsgCreatePool4Ticket")
	proto.RegisterType((*MsgCreatePool4TicketResponse)(nil), "sap200.shiaa3.shiaa3.MsgCreatePool4TicketResponse")
	proto.RegisterType((*MsgUpdatePool4Ticket)(nil), "sap200.shiaa3.shiaa3.MsgUpdatePool4Ticket")
	proto.RegisterType((*MsgUpdatePool4TicketResponse)(nil), "sap200.shiaa3.shiaa3.MsgUpdatePool4TicketResponse")
	proto.RegisterType((*MsgDeletePool4Ticket)(nil), "sap200.shiaa3.shiaa3.MsgDeletePool4Ticket")
	proto.RegisterType((*MsgDeletePool4TicketResponse)(nil), "sap200.shiaa3.shiaa3.MsgDeletePool4TicketResponse")
	proto.RegisterType((*MsgCreatePool3Ticket)(nil), "sap200.shiaa3.shiaa3.MsgCreatePool3Ticket")
	proto.RegisterType((*MsgCreatePool3TicketResponse)(nil), "sap200.shiaa3.shiaa3.MsgCreatePool3TicketResponse")
	proto.RegisterType((*MsgUpdatePool3Ticket)(nil), "sap200.shiaa3.shiaa3.MsgUpdatePool3Ticket")
	proto.RegisterType((*MsgUpdatePool3TicketResponse)(nil), "sap200.shiaa3.shiaa3.MsgUpdatePool3TicketResponse")
	proto.RegisterType((*MsgDeletePool3Ticket)(nil), "sap200.shiaa3.shiaa3.MsgDeletePool3Ticket")
	proto.RegisterType((*MsgDeletePool3TicketResponse)(nil), "sap200.shiaa3.shiaa3.MsgDeletePool3TicketResponse")
	proto.RegisterType((*MsgCreatePool2Ticket)(nil), "sap200.shiaa3.shiaa3.MsgCreatePool2Ticket")
	proto.RegisterType((*MsgCreatePool2TicketResponse)(nil), "sap200.shiaa3.shiaa3.MsgCreatePool2TicketResponse")
	proto.RegisterType((*MsgUpdatePool2Ticket)(nil), "sap200.shiaa3.shiaa3.MsgUpdatePool2Ticket")
	proto.RegisterType((*MsgUpdatePool2TicketResponse)(nil), "sap200.shiaa3.shiaa3.MsgUpdatePool2TicketResponse")
	proto.RegisterType((*MsgDeletePool2Ticket)(nil), "sap200.shiaa3.shiaa3.MsgDeletePool2Ticket")
	proto.RegisterType((*MsgDeletePool2TicketResponse)(nil), "sap200.shiaa3.shiaa3.MsgDeletePool2TicketResponse")
	proto.RegisterType((*MsgCreatePool1Ticket)(nil), "sap200.shiaa3.shiaa3.MsgCreatePool1Ticket")
	proto.RegisterType((*MsgCreatePool1TicketResponse)(nil), "sap200.shiaa3.shiaa3.MsgCreatePool1TicketResponse")
	proto.RegisterType((*MsgUpdatePool1Ticket)(nil), "sap200.shiaa3.shiaa3.MsgUpdatePool1Ticket")
	proto.RegisterType((*MsgUpdatePool1TicketResponse)(nil), "sap200.shiaa3.shiaa3.MsgUpdatePool1TicketResponse")
	proto.RegisterType((*MsgDeletePool1Ticket)(nil), "sap200.shiaa3.shiaa3.MsgDeletePool1Ticket")
	proto.RegisterType((*MsgDeletePool1TicketResponse)(nil), "sap200.shiaa3.shiaa3.MsgDeletePool1TicketResponse")
	proto.RegisterType((*MsgCreatePool0Ticket)(nil), "sap200.shiaa3.shiaa3.MsgCreatePool0Ticket")
	proto.RegisterType((*MsgCreatePool0TicketResponse)(nil), "sap200.shiaa3.shiaa3.MsgCreatePool0TicketResponse")
	proto.RegisterType((*MsgUpdatePool0Ticket)(nil), "sap200.shiaa3.shiaa3.MsgUpdatePool0Ticket")
	proto.RegisterType((*MsgUpdatePool0TicketResponse)(nil), "sap200.shiaa3.shiaa3.MsgUpdatePool0TicketResponse")
	proto.RegisterType((*MsgDeletePool0Ticket)(nil), "sap200.shiaa3.shiaa3.MsgDeletePool0Ticket")
	proto.RegisterType((*MsgDeletePool0TicketResponse)(nil), "sap200.shiaa3.shiaa3.MsgDeletePool0TicketResponse")
	proto.RegisterType((*MsgCreateJoinPoolAndStakeAsset)(nil), "sap200.shiaa3.shiaa3.MsgCreateJoinPoolAndStakeAsset")
	proto.RegisterType((*MsgCreateJoinPoolAndStakeAssetResponse)(nil), "sap200.shiaa3.shiaa3.MsgCreateJoinPoolAndStakeAssetResponse")
	proto.RegisterType((*MsgUpdateJoinPoolAndStakeAsset)(nil), "sap200.shiaa3.shiaa3.MsgUpdateJoinPoolAndStakeAsset")
	proto.RegisterType((*MsgUpdateJoinPoolAndStakeAssetResponse)(nil), "sap200.shiaa3.shiaa3.MsgUpdateJoinPoolAndStakeAssetResponse")
	proto.RegisterType((*MsgDeleteJoinPoolAndStakeAsset)(nil), "sap200.shiaa3.shiaa3.MsgDeleteJoinPoolAndStakeAsset")
	proto.RegisterType((*MsgDeleteJoinPoolAndStakeAssetResponse)(nil), "sap200.shiaa3.shiaa3.MsgDeleteJoinPoolAndStakeAssetResponse")
}

func init() { proto.RegisterFile("shiaa3/tx.proto", fileDescriptor_73aa2ce1ad6183eb) }

var fileDescriptor_73aa2ce1ad6183eb = []byte{
	// 876 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x99, 0xcb, 0x6f, 0xd3, 0x4a,
	0x14, 0xc6, 0xeb, 0x24, 0xb7, 0xbd, 0x77, 0xaa, 0x5e, 0xc0, 0xaa, 0xaa, 0x28, 0x20, 0xab, 0x8a,
	0x50, 0xa9, 0xb2, 0x48, 0xe7, 0x91, 0x05, 0x8b, 0x2e, 0x08, 0x20, 0x16, 0x15, 0x45, 0xa8, 0x85,
	0x22, 0xb1, 0x73, 0x1a, 0x2b, 0xb5, 0x9a, 0xc6, 0x51, 0xc6, 0x95, 0xca, 0x1e, 0x21, 0x96, 0xc0,
	0x82, 0xbf, 0x89, 0x65, 0x97, 0x2c, 0x51, 0xfb, 0x8f, 0xa0, 0x8c, 0x1f, 0xf5, 0xf8, 0x31, 0xe3,
	0x93, 0x2c, 0x92, 0x55, 0xeb, 0xf1, 0x99, 0xf9, 0xbe, 0xf3, 0xfb, 0x5a, 0x69, 0x8e, 0x8c, 0xee,
	0xf1, 0x33, 0xd7, 0xb6, 0xd9, 0x9e, 0x7f, 0xd5, 0x1e, 0x4f, 0x3c, 0xdf, 0x33, 0x37, 0xb9, 0x3d,
	0xa6, 0x18, 0xb7, 0x83, 0xf5, 0xf0, 0x47, 0xf3, 0x8b, 0x81, 0xee, 0x1f, 0xf2, 0xc1, 0x8b, 0x89,
	0x63, 0xfb, 0xce, 0x07, 0x77, 0x34, 0x72, 0x26, 0xdc, 0xac, 0xa3, 0xb5, 0xd3, 0xe9, 0x82, 0x37,
	0xa9, 0x1b, 0xdb, 0xc6, 0xee, 0x7f, 0x47, 0xd1, 0xa3, 0xf9, 0x18, 0x6d, 0x74, 0xfb, 0xfd, 0x89,
	0xc3, 0xf9, 0xb1, 0x3f, 0x71, 0x47, 0x83, 0x7a, 0x45, 0xbc, 0x97, 0x17, 0xcd, 0x2d, 0xb4, 0xfa,
	0xd6, 0xf3, 0x86, 0x6f, 0xbc, 0x7a, 0x55, 0xbc, 0x0e, 0x9f, 0xcc, 0x06, 0xfa, 0x77, 0x2a, 0xe1,
	0x8e, 0x06, 0xbc, 0x5e, 0x13, 0x6f, 0xe2, 0xe7, 0x66, 0x0b, 0xd5, 0xd3, 0x3e, 0x8e, 0x1c, 0x3e,
	0xf6, 0x46, 0xdc, 0x31, 0xff, 0x47, 0x15, 0xb7, 0x2f, 0xac, 0xd4, 0x8e, 0x2a, 0x6e, 0xbf, 0xf9,
	0x33, 0x30, 0xfd, 0x7e, 0xdc, 0x2f, 0x65, 0x3a, 0xd8, 0x5e, 0x89, 0xb6, 0x67, 0x9b, 0xa8, 0xaa,
	0x9b, 0xa8, 0x15, 0x36, 0xf1, 0x4f, 0xaa, 0x89, 0x86, 0x68, 0x42, 0xf2, 0x15, 0x35, 0xd1, 0xdc,
	0x17, 0x9e, 0x5f, 0x3a, 0x43, 0x67, 0x06, 0xcf, 0xe1, 0xc9, 0xd2, 0xee, 0xf8, 0xe4, 0x57, 0x89,
	0x08, 0x0f, 0x9d, 0x8b, 0x9e, 0xfa, 0xe4, 0x3a, 0x5a, 0xb3, 0x83, 0x46, 0xc3, 0xf0, 0xa2, 0x47,
	0x29, 0x82, 0xf0, 0x9c, 0xc2, 0x08, 0x4e, 0x12, 0x09, 0xe8, 0x35, 0xd3, 0x09, 0x24, 0x3c, 0x54,
	0x65, 0x0f, 0x49, 0x82, 0x29, 0x0f, 0x12, 0x41, 0xb0, 0xa6, 0x44, 0x30, 0x7d, 0xf2, 0x15, 0xda,
	0x8c, 0x3b, 0x9f, 0xc6, 0xdc, 0x79, 0xe7, 0x9e, 0x9e, 0x3b, 0xfe, 0xdc, 0xff, 0x08, 0xdb, 0x68,
	0xfd, 0xb5, 0x7d, 0xd1, 0xeb, 0xdb, 0x27, 0xf6, 0xf0, 0xd2, 0x09, 0x7b, 0x4d, 0x2e, 0x35, 0xdb,
	0xe8, 0x51, 0x9e, 0x72, 0x21, 0xf7, 0xaf, 0x86, 0xb0, 0x1a, 0x00, 0x2a, 0x67, 0x75, 0xb6, 0x3f,
	0xff, 0x94, 0xf5, 0x5a, 0xd6, 0xba, 0x25, 0xac, 0x67, 0x9c, 0xc4, 0x50, 0x9f, 0x09, 0xa7, 0x01,
	0xf0, 0x99, 0x9c, 0x86, 0x0a, 0x99, 0x13, 0x0a, 0x63, 0x63, 0x0b, 0x8b, 0x8d, 0x41, 0x63, 0x63,
	0x4b, 0x13, 0x1b, 0xd3, 0xc4, 0xc6, 0xe6, 0x8e, 0x8d, 0x69, 0x62, 0xa3, 0x0b, 0x8b, 0x8d, 0x42,
	0x63, 0xa3, 0x4b, 0x13, 0x1b, 0xd5, 0xc4, 0x46, 0xe7, 0x8e, 0x8d, 0x6a, 0x62, 0x23, 0x0b, 0x8b,
	0x8d, 0x40, 0x63, 0x23, 0x4b, 0x13, 0x1b, 0xd1, 0xc4, 0x46, 0xe6, 0x8e, 0x8d, 0x68, 0x62, 0xc3,
	0x0b, 0x8b, 0x0d, 0x43, 0x63, 0xc3, 0x4b, 0x13, 0x1b, 0xd6, 0xc4, 0x86, 0xe7, 0x8e, 0x2d, 0xad,
	0xe0, 0x23, 0x2b, 0x86, 0x77, 0xe0, 0xb9, 0xa3, 0x69, 0x4d, 0x77, 0xd4, 0x3f, 0xf6, 0xed, 0x73,
	0xa7, 0xcb, 0xb9, 0x52, 0xeb, 0xee, 0xea, 0x5a, 0x91, 0xae, 0xae, 0xdb, 0x68, 0x5d, 0x6c, 0x3d,
	0x76, 0x26, 0xae, 0x3d, 0x8c, 0x22, 0x4b, 0x2c, 0x35, 0x9f, 0xa2, 0x1d, 0xb5, 0x6a, 0x61, 0x78,
	0x9f, 0x0d, 0x61, 0x38, 0x40, 0x06, 0x35, 0x9c, 0x8e, 0xb1, 0x68, 0x80, 0x48, 0x35, 0x50, 0xcb,
	0x36, 0xb0, 0x2b, 0x1a, 0x50, 0xb8, 0x88, 0x01, 0x1f, 0x08, 0xbf, 0x41, 0x00, 0x73, 0xfa, 0x0d,
	0x55, 0x15, 0x67, 0x45, 0xaa, 0xf4, 0xc7, 0x16, 0xaa, 0x1e, 0xf2, 0x81, 0x39, 0x40, 0x1b, 0xf2,
	0xcc, 0xb5, 0xd3, 0xce, 0x9b, 0xcf, 0xda, 0xe9, 0x99, 0xa8, 0xd1, 0x2e, 0x57, 0x17, 0xe7, 0x34,
	0x40, 0x1b, 0xf2, 0x9c, 0x54, 0x2c, 0x24, 0xd5, 0x29, 0x84, 0x72, 0xe7, 0x9b, 0xa9, 0x90, 0x3c,
	0xdc, 0x14, 0x0b, 0x49, 0x75, 0x0a, 0xa1, 0xdc, 0x71, 0xe7, 0x0e, 0x5d, 0x34, 0x03, 0xe8, 0xd0,
	0x85, 0x75, 0x5a, 0x74, 0xe9, 0x99, 0x27, 0x46, 0xa7, 0x17, 0x92, 0xea, 0xb4, 0xe8, 0x72, 0x84,
	0xe4, 0xa9, 0x46, 0x87, 0x4e, 0x2f, 0x94, 0x3b, 0xe7, 0x98, 0x1c, 0x3d, 0xc8, 0x0e, 0x39, 0x2d,
	0x0d, 0x96, 0x44, 0x6d, 0x83, 0x96, 0xaf, 0x4d, 0x8a, 0x66, 0xc7, 0x95, 0x96, 0x06, 0x51, 0x39,
	0xd1, 0xc2, 0xe1, 0x63, 0x2a, 0x9a, 0x9d, 0x3c, 0x5a, 0x1a, 0x5c, 0xe5, 0x44, 0x0b, 0xe7, 0x11,
	0x19, 0x2f, 0x03, 0xe0, 0x65, 0x00, 0xbc, 0x4c, 0x85, 0x97, 0x01, 0xf0, 0x32, 0x00, 0x5e, 0xa6,
	0xc2, 0xcb, 0x00, 0x78, 0x19, 0x00, 0x2f, 0x53, 0xe1, 0xa5, 0x00, 0xbc, 0x14, 0x80, 0x97, 0xaa,
	0xf0, 0x52, 0x00, 0x5e, 0x0a, 0xc0, 0x4b, 0x55, 0x78, 0x29, 0x00, 0x2f, 0x05, 0xe0, 0xa5, 0x2a,
	0xbc, 0x04, 0x80, 0x97, 0x00, 0xf0, 0x12, 0x15, 0x5e, 0x02, 0xc0, 0x4b, 0x00, 0x78, 0x89, 0x0a,
	0x2f, 0x01, 0xe0, 0x25, 0x00, 0xbc, 0x44, 0x85, 0x17, 0x03, 0xf0, 0x62, 0x00, 0x5e, 0xac, 0xc2,
	0x8b, 0x01, 0x78, 0x31, 0x00, 0x2f, 0x56, 0xe1, 0xc5, 0x00, 0xbc, 0x18, 0x80, 0x37, 0x2d, 0xfa,
	0xdd, 0x40, 0x0f, 0x55, 0xb7, 0xe5, 0x8e, 0x86, 0x5e, 0xee, 0xae, 0xc6, 0xfe, 0x2c, 0xbb, 0x24,
	0x4f, 0xaa, 0x0b, 0x71, 0x47, 0x03, 0x17, 0xea, 0xa9, 0xc4, 0xb5, 0x57, 0x78, 0x52, 0x5d, 0x7a,
	0x3b, 0x1a, 0xf6, 0x50, 0x4f, 0x25, 0x2e, 0xc5, 0xcf, 0xbb, 0xbf, 0x6e, 0x2c, 0xe3, 0xfa, 0xc6,
	0x32, 0xfe, 0xdc, 0x58, 0xc6, 0xb7, 0x5b, 0x6b, 0xe5, 0xfa, 0xd6, 0x5a, 0xf9, 0x7d, 0x6b, 0xad,
	0x7c, 0x7c, 0x32, 0x70, 0xfd, 0xb3, 0xcb, 0x5e, 0xfb, 0xd4, 0xbb, 0xd8, 0x0b, 0x14, 0xf6, 0xc2,
	0xef, 0x1a, 0x57, 0xd1, 0x2f, 0xfe, 0xa7, 0xb1, 0xc3, 0x7b, 0xab, 0xe2, 0x23, 0x07, 0xfb, 0x1b,
	0x00, 0x00, 0xff, 0xff, 0x7d, 0x68, 0x4a, 0x8d, 0xf7, 0x18, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	CreateWinners(ctx context.Context, in *MsgCreateWinners, opts ...grpc.CallOption) (*MsgCreateWinnersResponse, error)
	UpdateWinners(ctx context.Context, in *MsgUpdateWinners, opts ...grpc.CallOption) (*MsgUpdateWinnersResponse, error)
	DeleteWinners(ctx context.Context, in *MsgDeleteWinners, opts ...grpc.CallOption) (*MsgDeleteWinnersResponse, error)
	CreateMembers(ctx context.Context, in *MsgCreateMembers, opts ...grpc.CallOption) (*MsgCreateMembersResponse, error)
	UpdateMembers(ctx context.Context, in *MsgUpdateMembers, opts ...grpc.CallOption) (*MsgUpdateMembersResponse, error)
	DeleteMembers(ctx context.Context, in *MsgDeleteMembers, opts ...grpc.CallOption) (*MsgDeleteMembersResponse, error)
	CreatePool4Ticket(ctx context.Context, in *MsgCreatePool4Ticket, opts ...grpc.CallOption) (*MsgCreatePool4TicketResponse, error)
	UpdatePool4Ticket(ctx context.Context, in *MsgUpdatePool4Ticket, opts ...grpc.CallOption) (*MsgUpdatePool4TicketResponse, error)
	DeletePool4Ticket(ctx context.Context, in *MsgDeletePool4Ticket, opts ...grpc.CallOption) (*MsgDeletePool4TicketResponse, error)
	CreatePool3Ticket(ctx context.Context, in *MsgCreatePool3Ticket, opts ...grpc.CallOption) (*MsgCreatePool3TicketResponse, error)
	UpdatePool3Ticket(ctx context.Context, in *MsgUpdatePool3Ticket, opts ...grpc.CallOption) (*MsgUpdatePool3TicketResponse, error)
	DeletePool3Ticket(ctx context.Context, in *MsgDeletePool3Ticket, opts ...grpc.CallOption) (*MsgDeletePool3TicketResponse, error)
	CreatePool2Ticket(ctx context.Context, in *MsgCreatePool2Ticket, opts ...grpc.CallOption) (*MsgCreatePool2TicketResponse, error)
	UpdatePool2Ticket(ctx context.Context, in *MsgUpdatePool2Ticket, opts ...grpc.CallOption) (*MsgUpdatePool2TicketResponse, error)
	DeletePool2Ticket(ctx context.Context, in *MsgDeletePool2Ticket, opts ...grpc.CallOption) (*MsgDeletePool2TicketResponse, error)
	CreatePool1Ticket(ctx context.Context, in *MsgCreatePool1Ticket, opts ...grpc.CallOption) (*MsgCreatePool1TicketResponse, error)
	UpdatePool1Ticket(ctx context.Context, in *MsgUpdatePool1Ticket, opts ...grpc.CallOption) (*MsgUpdatePool1TicketResponse, error)
	DeletePool1Ticket(ctx context.Context, in *MsgDeletePool1Ticket, opts ...grpc.CallOption) (*MsgDeletePool1TicketResponse, error)
	CreatePool0Ticket(ctx context.Context, in *MsgCreatePool0Ticket, opts ...grpc.CallOption) (*MsgCreatePool0TicketResponse, error)
	UpdatePool0Ticket(ctx context.Context, in *MsgUpdatePool0Ticket, opts ...grpc.CallOption) (*MsgUpdatePool0TicketResponse, error)
	DeletePool0Ticket(ctx context.Context, in *MsgDeletePool0Ticket, opts ...grpc.CallOption) (*MsgDeletePool0TicketResponse, error)
	CreateJoinPoolAndStakeAsset(ctx context.Context, in *MsgCreateJoinPoolAndStakeAsset, opts ...grpc.CallOption) (*MsgCreateJoinPoolAndStakeAssetResponse, error)
	UpdateJoinPoolAndStakeAsset(ctx context.Context, in *MsgUpdateJoinPoolAndStakeAsset, opts ...grpc.CallOption) (*MsgUpdateJoinPoolAndStakeAssetResponse, error)
	DeleteJoinPoolAndStakeAsset(ctx context.Context, in *MsgDeleteJoinPoolAndStakeAsset, opts ...grpc.CallOption) (*MsgDeleteJoinPoolAndStakeAssetResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateWinners(ctx context.Context, in *MsgCreateWinners, opts ...grpc.CallOption) (*MsgCreateWinnersResponse, error) {
	out := new(MsgCreateWinnersResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/CreateWinners", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateWinners(ctx context.Context, in *MsgUpdateWinners, opts ...grpc.CallOption) (*MsgUpdateWinnersResponse, error) {
	out := new(MsgUpdateWinnersResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/UpdateWinners", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteWinners(ctx context.Context, in *MsgDeleteWinners, opts ...grpc.CallOption) (*MsgDeleteWinnersResponse, error) {
	out := new(MsgDeleteWinnersResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/DeleteWinners", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateMembers(ctx context.Context, in *MsgCreateMembers, opts ...grpc.CallOption) (*MsgCreateMembersResponse, error) {
	out := new(MsgCreateMembersResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/CreateMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateMembers(ctx context.Context, in *MsgUpdateMembers, opts ...grpc.CallOption) (*MsgUpdateMembersResponse, error) {
	out := new(MsgUpdateMembersResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/UpdateMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteMembers(ctx context.Context, in *MsgDeleteMembers, opts ...grpc.CallOption) (*MsgDeleteMembersResponse, error) {
	out := new(MsgDeleteMembersResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/DeleteMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreatePool4Ticket(ctx context.Context, in *MsgCreatePool4Ticket, opts ...grpc.CallOption) (*MsgCreatePool4TicketResponse, error) {
	out := new(MsgCreatePool4TicketResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/CreatePool4Ticket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdatePool4Ticket(ctx context.Context, in *MsgUpdatePool4Ticket, opts ...grpc.CallOption) (*MsgUpdatePool4TicketResponse, error) {
	out := new(MsgUpdatePool4TicketResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/UpdatePool4Ticket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeletePool4Ticket(ctx context.Context, in *MsgDeletePool4Ticket, opts ...grpc.CallOption) (*MsgDeletePool4TicketResponse, error) {
	out := new(MsgDeletePool4TicketResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/DeletePool4Ticket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreatePool3Ticket(ctx context.Context, in *MsgCreatePool3Ticket, opts ...grpc.CallOption) (*MsgCreatePool3TicketResponse, error) {
	out := new(MsgCreatePool3TicketResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/CreatePool3Ticket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdatePool3Ticket(ctx context.Context, in *MsgUpdatePool3Ticket, opts ...grpc.CallOption) (*MsgUpdatePool3TicketResponse, error) {
	out := new(MsgUpdatePool3TicketResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/UpdatePool3Ticket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeletePool3Ticket(ctx context.Context, in *MsgDeletePool3Ticket, opts ...grpc.CallOption) (*MsgDeletePool3TicketResponse, error) {
	out := new(MsgDeletePool3TicketResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/DeletePool3Ticket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreatePool2Ticket(ctx context.Context, in *MsgCreatePool2Ticket, opts ...grpc.CallOption) (*MsgCreatePool2TicketResponse, error) {
	out := new(MsgCreatePool2TicketResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/CreatePool2Ticket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdatePool2Ticket(ctx context.Context, in *MsgUpdatePool2Ticket, opts ...grpc.CallOption) (*MsgUpdatePool2TicketResponse, error) {
	out := new(MsgUpdatePool2TicketResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/UpdatePool2Ticket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeletePool2Ticket(ctx context.Context, in *MsgDeletePool2Ticket, opts ...grpc.CallOption) (*MsgDeletePool2TicketResponse, error) {
	out := new(MsgDeletePool2TicketResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/DeletePool2Ticket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreatePool1Ticket(ctx context.Context, in *MsgCreatePool1Ticket, opts ...grpc.CallOption) (*MsgCreatePool1TicketResponse, error) {
	out := new(MsgCreatePool1TicketResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/CreatePool1Ticket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdatePool1Ticket(ctx context.Context, in *MsgUpdatePool1Ticket, opts ...grpc.CallOption) (*MsgUpdatePool1TicketResponse, error) {
	out := new(MsgUpdatePool1TicketResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/UpdatePool1Ticket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeletePool1Ticket(ctx context.Context, in *MsgDeletePool1Ticket, opts ...grpc.CallOption) (*MsgDeletePool1TicketResponse, error) {
	out := new(MsgDeletePool1TicketResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/DeletePool1Ticket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreatePool0Ticket(ctx context.Context, in *MsgCreatePool0Ticket, opts ...grpc.CallOption) (*MsgCreatePool0TicketResponse, error) {
	out := new(MsgCreatePool0TicketResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/CreatePool0Ticket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdatePool0Ticket(ctx context.Context, in *MsgUpdatePool0Ticket, opts ...grpc.CallOption) (*MsgUpdatePool0TicketResponse, error) {
	out := new(MsgUpdatePool0TicketResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/UpdatePool0Ticket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeletePool0Ticket(ctx context.Context, in *MsgDeletePool0Ticket, opts ...grpc.CallOption) (*MsgDeletePool0TicketResponse, error) {
	out := new(MsgDeletePool0TicketResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/DeletePool0Ticket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateJoinPoolAndStakeAsset(ctx context.Context, in *MsgCreateJoinPoolAndStakeAsset, opts ...grpc.CallOption) (*MsgCreateJoinPoolAndStakeAssetResponse, error) {
	out := new(MsgCreateJoinPoolAndStakeAssetResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/CreateJoinPoolAndStakeAsset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateJoinPoolAndStakeAsset(ctx context.Context, in *MsgUpdateJoinPoolAndStakeAsset, opts ...grpc.CallOption) (*MsgUpdateJoinPoolAndStakeAssetResponse, error) {
	out := new(MsgUpdateJoinPoolAndStakeAssetResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/UpdateJoinPoolAndStakeAsset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteJoinPoolAndStakeAsset(ctx context.Context, in *MsgDeleteJoinPoolAndStakeAsset, opts ...grpc.CallOption) (*MsgDeleteJoinPoolAndStakeAssetResponse, error) {
	out := new(MsgDeleteJoinPoolAndStakeAssetResponse)
	err := c.cc.Invoke(ctx, "/sap200.shiaa3.shiaa3.Msg/DeleteJoinPoolAndStakeAsset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	CreateWinners(context.Context, *MsgCreateWinners) (*MsgCreateWinnersResponse, error)
	UpdateWinners(context.Context, *MsgUpdateWinners) (*MsgUpdateWinnersResponse, error)
	DeleteWinners(context.Context, *MsgDeleteWinners) (*MsgDeleteWinnersResponse, error)
	CreateMembers(context.Context, *MsgCreateMembers) (*MsgCreateMembersResponse, error)
	UpdateMembers(context.Context, *MsgUpdateMembers) (*MsgUpdateMembersResponse, error)
	DeleteMembers(context.Context, *MsgDeleteMembers) (*MsgDeleteMembersResponse, error)
	CreatePool4Ticket(context.Context, *MsgCreatePool4Ticket) (*MsgCreatePool4TicketResponse, error)
	UpdatePool4Ticket(context.Context, *MsgUpdatePool4Ticket) (*MsgUpdatePool4TicketResponse, error)
	DeletePool4Ticket(context.Context, *MsgDeletePool4Ticket) (*MsgDeletePool4TicketResponse, error)
	CreatePool3Ticket(context.Context, *MsgCreatePool3Ticket) (*MsgCreatePool3TicketResponse, error)
	UpdatePool3Ticket(context.Context, *MsgUpdatePool3Ticket) (*MsgUpdatePool3TicketResponse, error)
	DeletePool3Ticket(context.Context, *MsgDeletePool3Ticket) (*MsgDeletePool3TicketResponse, error)
	CreatePool2Ticket(context.Context, *MsgCreatePool2Ticket) (*MsgCreatePool2TicketResponse, error)
	UpdatePool2Ticket(context.Context, *MsgUpdatePool2Ticket) (*MsgUpdatePool2TicketResponse, error)
	DeletePool2Ticket(context.Context, *MsgDeletePool2Ticket) (*MsgDeletePool2TicketResponse, error)
	CreatePool1Ticket(context.Context, *MsgCreatePool1Ticket) (*MsgCreatePool1TicketResponse, error)
	UpdatePool1Ticket(context.Context, *MsgUpdatePool1Ticket) (*MsgUpdatePool1TicketResponse, error)
	DeletePool1Ticket(context.Context, *MsgDeletePool1Ticket) (*MsgDeletePool1TicketResponse, error)
	CreatePool0Ticket(context.Context, *MsgCreatePool0Ticket) (*MsgCreatePool0TicketResponse, error)
	UpdatePool0Ticket(context.Context, *MsgUpdatePool0Ticket) (*MsgUpdatePool0TicketResponse, error)
	DeletePool0Ticket(context.Context, *MsgDeletePool0Ticket) (*MsgDeletePool0TicketResponse, error)
	CreateJoinPoolAndStakeAsset(context.Context, *MsgCreateJoinPoolAndStakeAsset) (*MsgCreateJoinPoolAndStakeAssetResponse, error)
	UpdateJoinPoolAndStakeAsset(context.Context, *MsgUpdateJoinPoolAndStakeAsset) (*MsgUpdateJoinPoolAndStakeAssetResponse, error)
	DeleteJoinPoolAndStakeAsset(context.Context, *MsgDeleteJoinPoolAndStakeAsset) (*MsgDeleteJoinPoolAndStakeAssetResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateWinners(ctx context.Context, req *MsgCreateWinners) (*MsgCreateWinnersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWinners not implemented")
}
func (*UnimplementedMsgServer) UpdateWinners(ctx context.Context, req *MsgUpdateWinners) (*MsgUpdateWinnersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWinners not implemented")
}
func (*UnimplementedMsgServer) DeleteWinners(ctx context.Context, req *MsgDeleteWinners) (*MsgDeleteWinnersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWinners not implemented")
}
func (*UnimplementedMsgServer) CreateMembers(ctx context.Context, req *MsgCreateMembers) (*MsgCreateMembersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMembers not implemented")
}
func (*UnimplementedMsgServer) UpdateMembers(ctx context.Context, req *MsgUpdateMembers) (*MsgUpdateMembersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMembers not implemented")
}
func (*UnimplementedMsgServer) DeleteMembers(ctx context.Context, req *MsgDeleteMembers) (*MsgDeleteMembersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMembers not implemented")
}
func (*UnimplementedMsgServer) CreatePool4Ticket(ctx context.Context, req *MsgCreatePool4Ticket) (*MsgCreatePool4TicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePool4Ticket not implemented")
}
func (*UnimplementedMsgServer) UpdatePool4Ticket(ctx context.Context, req *MsgUpdatePool4Ticket) (*MsgUpdatePool4TicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePool4Ticket not implemented")
}
func (*UnimplementedMsgServer) DeletePool4Ticket(ctx context.Context, req *MsgDeletePool4Ticket) (*MsgDeletePool4TicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePool4Ticket not implemented")
}
func (*UnimplementedMsgServer) CreatePool3Ticket(ctx context.Context, req *MsgCreatePool3Ticket) (*MsgCreatePool3TicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePool3Ticket not implemented")
}
func (*UnimplementedMsgServer) UpdatePool3Ticket(ctx context.Context, req *MsgUpdatePool3Ticket) (*MsgUpdatePool3TicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePool3Ticket not implemented")
}
func (*UnimplementedMsgServer) DeletePool3Ticket(ctx context.Context, req *MsgDeletePool3Ticket) (*MsgDeletePool3TicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePool3Ticket not implemented")
}
func (*UnimplementedMsgServer) CreatePool2Ticket(ctx context.Context, req *MsgCreatePool2Ticket) (*MsgCreatePool2TicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePool2Ticket not implemented")
}
func (*UnimplementedMsgServer) UpdatePool2Ticket(ctx context.Context, req *MsgUpdatePool2Ticket) (*MsgUpdatePool2TicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePool2Ticket not implemented")
}
func (*UnimplementedMsgServer) DeletePool2Ticket(ctx context.Context, req *MsgDeletePool2Ticket) (*MsgDeletePool2TicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePool2Ticket not implemented")
}
func (*UnimplementedMsgServer) CreatePool1Ticket(ctx context.Context, req *MsgCreatePool1Ticket) (*MsgCreatePool1TicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePool1Ticket not implemented")
}
func (*UnimplementedMsgServer) UpdatePool1Ticket(ctx context.Context, req *MsgUpdatePool1Ticket) (*MsgUpdatePool1TicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePool1Ticket not implemented")
}
func (*UnimplementedMsgServer) DeletePool1Ticket(ctx context.Context, req *MsgDeletePool1Ticket) (*MsgDeletePool1TicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePool1Ticket not implemented")
}
func (*UnimplementedMsgServer) CreatePool0Ticket(ctx context.Context, req *MsgCreatePool0Ticket) (*MsgCreatePool0TicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePool0Ticket not implemented")
}
func (*UnimplementedMsgServer) UpdatePool0Ticket(ctx context.Context, req *MsgUpdatePool0Ticket) (*MsgUpdatePool0TicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePool0Ticket not implemented")
}
func (*UnimplementedMsgServer) DeletePool0Ticket(ctx context.Context, req *MsgDeletePool0Ticket) (*MsgDeletePool0TicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePool0Ticket not implemented")
}
func (*UnimplementedMsgServer) CreateJoinPoolAndStakeAsset(ctx context.Context, req *MsgCreateJoinPoolAndStakeAsset) (*MsgCreateJoinPoolAndStakeAssetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJoinPoolAndStakeAsset not implemented")
}
func (*UnimplementedMsgServer) UpdateJoinPoolAndStakeAsset(ctx context.Context, req *MsgUpdateJoinPoolAndStakeAsset) (*MsgUpdateJoinPoolAndStakeAssetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateJoinPoolAndStakeAsset not implemented")
}
func (*UnimplementedMsgServer) DeleteJoinPoolAndStakeAsset(ctx context.Context, req *MsgDeleteJoinPoolAndStakeAsset) (*MsgDeleteJoinPoolAndStakeAssetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteJoinPoolAndStakeAsset not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateWinners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateWinners)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateWinners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/CreateWinners",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateWinners(ctx, req.(*MsgCreateWinners))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateWinners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateWinners)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateWinners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/UpdateWinners",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateWinners(ctx, req.(*MsgUpdateWinners))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteWinners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteWinners)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteWinners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/DeleteWinners",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteWinners(ctx, req.(*MsgDeleteWinners))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateMembers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/CreateMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateMembers(ctx, req.(*MsgCreateMembers))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateMembers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/UpdateMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateMembers(ctx, req.(*MsgUpdateMembers))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteMembers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/DeleteMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteMembers(ctx, req.(*MsgDeleteMembers))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreatePool4Ticket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePool4Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePool4Ticket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/CreatePool4Ticket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePool4Ticket(ctx, req.(*MsgCreatePool4Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdatePool4Ticket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePool4Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdatePool4Ticket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/UpdatePool4Ticket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdatePool4Ticket(ctx, req.(*MsgUpdatePool4Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeletePool4Ticket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeletePool4Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeletePool4Ticket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/DeletePool4Ticket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeletePool4Ticket(ctx, req.(*MsgDeletePool4Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreatePool3Ticket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePool3Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePool3Ticket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/CreatePool3Ticket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePool3Ticket(ctx, req.(*MsgCreatePool3Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdatePool3Ticket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePool3Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdatePool3Ticket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/UpdatePool3Ticket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdatePool3Ticket(ctx, req.(*MsgUpdatePool3Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeletePool3Ticket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeletePool3Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeletePool3Ticket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/DeletePool3Ticket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeletePool3Ticket(ctx, req.(*MsgDeletePool3Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreatePool2Ticket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePool2Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePool2Ticket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/CreatePool2Ticket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePool2Ticket(ctx, req.(*MsgCreatePool2Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdatePool2Ticket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePool2Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdatePool2Ticket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/UpdatePool2Ticket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdatePool2Ticket(ctx, req.(*MsgUpdatePool2Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeletePool2Ticket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeletePool2Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeletePool2Ticket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/DeletePool2Ticket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeletePool2Ticket(ctx, req.(*MsgDeletePool2Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreatePool1Ticket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePool1Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePool1Ticket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/CreatePool1Ticket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePool1Ticket(ctx, req.(*MsgCreatePool1Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdatePool1Ticket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePool1Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdatePool1Ticket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/UpdatePool1Ticket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdatePool1Ticket(ctx, req.(*MsgUpdatePool1Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeletePool1Ticket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeletePool1Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeletePool1Ticket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/DeletePool1Ticket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeletePool1Ticket(ctx, req.(*MsgDeletePool1Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreatePool0Ticket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePool0Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePool0Ticket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/CreatePool0Ticket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePool0Ticket(ctx, req.(*MsgCreatePool0Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdatePool0Ticket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePool0Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdatePool0Ticket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/UpdatePool0Ticket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdatePool0Ticket(ctx, req.(*MsgUpdatePool0Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeletePool0Ticket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeletePool0Ticket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeletePool0Ticket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/DeletePool0Ticket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeletePool0Ticket(ctx, req.(*MsgDeletePool0Ticket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateJoinPoolAndStakeAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateJoinPoolAndStakeAsset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateJoinPoolAndStakeAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/CreateJoinPoolAndStakeAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateJoinPoolAndStakeAsset(ctx, req.(*MsgCreateJoinPoolAndStakeAsset))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateJoinPoolAndStakeAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateJoinPoolAndStakeAsset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateJoinPoolAndStakeAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/UpdateJoinPoolAndStakeAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateJoinPoolAndStakeAsset(ctx, req.(*MsgUpdateJoinPoolAndStakeAsset))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteJoinPoolAndStakeAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteJoinPoolAndStakeAsset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteJoinPoolAndStakeAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sap200.shiaa3.shiaa3.Msg/DeleteJoinPoolAndStakeAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteJoinPoolAndStakeAsset(ctx, req.(*MsgDeleteJoinPoolAndStakeAsset))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sap200.shiaa3.shiaa3.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWinners",
			Handler:    _Msg_CreateWinners_Handler,
		},
		{
			MethodName: "UpdateWinners",
			Handler:    _Msg_UpdateWinners_Handler,
		},
		{
			MethodName: "DeleteWinners",
			Handler:    _Msg_DeleteWinners_Handler,
		},
		{
			MethodName: "CreateMembers",
			Handler:    _Msg_CreateMembers_Handler,
		},
		{
			MethodName: "UpdateMembers",
			Handler:    _Msg_UpdateMembers_Handler,
		},
		{
			MethodName: "DeleteMembers",
			Handler:    _Msg_DeleteMembers_Handler,
		},
		{
			MethodName: "CreatePool4Ticket",
			Handler:    _Msg_CreatePool4Ticket_Handler,
		},
		{
			MethodName: "UpdatePool4Ticket",
			Handler:    _Msg_UpdatePool4Ticket_Handler,
		},
		{
			MethodName: "DeletePool4Ticket",
			Handler:    _Msg_DeletePool4Ticket_Handler,
		},
		{
			MethodName: "CreatePool3Ticket",
			Handler:    _Msg_CreatePool3Ticket_Handler,
		},
		{
			MethodName: "UpdatePool3Ticket",
			Handler:    _Msg_UpdatePool3Ticket_Handler,
		},
		{
			MethodName: "DeletePool3Ticket",
			Handler:    _Msg_DeletePool3Ticket_Handler,
		},
		{
			MethodName: "CreatePool2Ticket",
			Handler:    _Msg_CreatePool2Ticket_Handler,
		},
		{
			MethodName: "UpdatePool2Ticket",
			Handler:    _Msg_UpdatePool2Ticket_Handler,
		},
		{
			MethodName: "DeletePool2Ticket",
			Handler:    _Msg_DeletePool2Ticket_Handler,
		},
		{
			MethodName: "CreatePool1Ticket",
			Handler:    _Msg_CreatePool1Ticket_Handler,
		},
		{
			MethodName: "UpdatePool1Ticket",
			Handler:    _Msg_UpdatePool1Ticket_Handler,
		},
		{
			MethodName: "DeletePool1Ticket",
			Handler:    _Msg_DeletePool1Ticket_Handler,
		},
		{
			MethodName: "CreatePool0Ticket",
			Handler:    _Msg_CreatePool0Ticket_Handler,
		},
		{
			MethodName: "UpdatePool0Ticket",
			Handler:    _Msg_UpdatePool0Ticket_Handler,
		},
		{
			MethodName: "DeletePool0Ticket",
			Handler:    _Msg_DeletePool0Ticket_Handler,
		},
		{
			MethodName: "CreateJoinPoolAndStakeAsset",
			Handler:    _Msg_CreateJoinPoolAndStakeAsset_Handler,
		},
		{
			MethodName: "UpdateJoinPoolAndStakeAsset",
			Handler:    _Msg_UpdateJoinPoolAndStakeAsset_Handler,
		},
		{
			MethodName: "DeleteJoinPoolAndStakeAsset",
			Handler:    _Msg_DeleteJoinPoolAndStakeAsset_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shiaa3/tx.proto",
}

func (m *MsgCreateWinners) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateWinners) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateWinners) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Winnings) > 0 {
		i -= len(m.Winnings)
		copy(dAtA[i:], m.Winnings)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Winnings)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PoolNo) > 0 {
		i -= len(m.PoolNo)
		copy(dAtA[i:], m.PoolNo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PoolNo)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AddressString) > 0 {
		i -= len(m.AddressString)
		copy(dAtA[i:], m.AddressString)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AddressString)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateWinnersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateWinnersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateWinnersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateWinners) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateWinners) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateWinners) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Winnings) > 0 {
		i -= len(m.Winnings)
		copy(dAtA[i:], m.Winnings)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Winnings)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PoolNo) > 0 {
		i -= len(m.PoolNo)
		copy(dAtA[i:], m.PoolNo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PoolNo)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AddressString) > 0 {
		i -= len(m.AddressString)
		copy(dAtA[i:], m.AddressString)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AddressString)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateWinnersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateWinnersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateWinnersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteWinners) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteWinners) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteWinners) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteWinnersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteWinnersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteWinnersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateMembers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMembers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMembers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateMembersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMembersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMembersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMembers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMembers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMembers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMembersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMembersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMembersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteMembers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteMembers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteMembers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteMembersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteMembersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteMembersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreatePool4Ticket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePool4Ticket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePool4Ticket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LambdaValue) > 0 {
		i -= len(m.LambdaValue)
		copy(dAtA[i:], m.LambdaValue)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LambdaValue)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AddressString) > 0 {
		i -= len(m.AddressString)
		copy(dAtA[i:], m.AddressString)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AddressString)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePool4TicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePool4TicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePool4TicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePool4Ticket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePool4Ticket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePool4Ticket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LambdaValue) > 0 {
		i -= len(m.LambdaValue)
		copy(dAtA[i:], m.LambdaValue)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LambdaValue)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AddressString) > 0 {
		i -= len(m.AddressString)
		copy(dAtA[i:], m.AddressString)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AddressString)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePool4TicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePool4TicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePool4TicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeletePool4Ticket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePool4Ticket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePool4Ticket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePool4TicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePool4TicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePool4TicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreatePool3Ticket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePool3Ticket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePool3Ticket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LambdaValue) > 0 {
		i -= len(m.LambdaValue)
		copy(dAtA[i:], m.LambdaValue)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LambdaValue)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AddressString) > 0 {
		i -= len(m.AddressString)
		copy(dAtA[i:], m.AddressString)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AddressString)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePool3TicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePool3TicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePool3TicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePool3Ticket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePool3Ticket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePool3Ticket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LambdaValue) > 0 {
		i -= len(m.LambdaValue)
		copy(dAtA[i:], m.LambdaValue)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LambdaValue)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AddressString) > 0 {
		i -= len(m.AddressString)
		copy(dAtA[i:], m.AddressString)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AddressString)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePool3TicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePool3TicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePool3TicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeletePool3Ticket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePool3Ticket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePool3Ticket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePool3TicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePool3TicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePool3TicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreatePool2Ticket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePool2Ticket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePool2Ticket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LambdaValue) > 0 {
		i -= len(m.LambdaValue)
		copy(dAtA[i:], m.LambdaValue)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LambdaValue)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AddressString) > 0 {
		i -= len(m.AddressString)
		copy(dAtA[i:], m.AddressString)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AddressString)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePool2TicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePool2TicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePool2TicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePool2Ticket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePool2Ticket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePool2Ticket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LambdaValue) > 0 {
		i -= len(m.LambdaValue)
		copy(dAtA[i:], m.LambdaValue)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LambdaValue)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AddressString) > 0 {
		i -= len(m.AddressString)
		copy(dAtA[i:], m.AddressString)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AddressString)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePool2TicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePool2TicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePool2TicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeletePool2Ticket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePool2Ticket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePool2Ticket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePool2TicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePool2TicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePool2TicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreatePool1Ticket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePool1Ticket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePool1Ticket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LambdaValue) > 0 {
		i -= len(m.LambdaValue)
		copy(dAtA[i:], m.LambdaValue)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LambdaValue)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AddressString) > 0 {
		i -= len(m.AddressString)
		copy(dAtA[i:], m.AddressString)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AddressString)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePool1TicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePool1TicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePool1TicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePool1Ticket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePool1Ticket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePool1Ticket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LambdaValue) > 0 {
		i -= len(m.LambdaValue)
		copy(dAtA[i:], m.LambdaValue)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LambdaValue)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AddressString) > 0 {
		i -= len(m.AddressString)
		copy(dAtA[i:], m.AddressString)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AddressString)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePool1TicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePool1TicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePool1TicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeletePool1Ticket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePool1Ticket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePool1Ticket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePool1TicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePool1TicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePool1TicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreatePool0Ticket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePool0Ticket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePool0Ticket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LambdaValue) > 0 {
		i -= len(m.LambdaValue)
		copy(dAtA[i:], m.LambdaValue)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LambdaValue)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AddressString) > 0 {
		i -= len(m.AddressString)
		copy(dAtA[i:], m.AddressString)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AddressString)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePool0TicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePool0TicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePool0TicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePool0Ticket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePool0Ticket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePool0Ticket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LambdaValue) > 0 {
		i -= len(m.LambdaValue)
		copy(dAtA[i:], m.LambdaValue)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LambdaValue)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AddressString) > 0 {
		i -= len(m.AddressString)
		copy(dAtA[i:], m.AddressString)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AddressString)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePool0TicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePool0TicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePool0TicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeletePool0Ticket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePool0Ticket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePool0Ticket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePool0TicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePool0TicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePool0TicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateJoinPoolAndStakeAsset) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateJoinPoolAndStakeAsset) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateJoinPoolAndStakeAsset) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AssetSerial) > 0 {
		i -= len(m.AssetSerial)
		copy(dAtA[i:], m.AssetSerial)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AssetSerial)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PoolNo) > 0 {
		i -= len(m.PoolNo)
		copy(dAtA[i:], m.PoolNo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PoolNo)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateJoinPoolAndStakeAssetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateJoinPoolAndStakeAssetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateJoinPoolAndStakeAssetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateJoinPoolAndStakeAsset) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateJoinPoolAndStakeAsset) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateJoinPoolAndStakeAsset) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AssetSerial) > 0 {
		i -= len(m.AssetSerial)
		copy(dAtA[i:], m.AssetSerial)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AssetSerial)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PoolNo) > 0 {
		i -= len(m.PoolNo)
		copy(dAtA[i:], m.PoolNo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PoolNo)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateJoinPoolAndStakeAssetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateJoinPoolAndStakeAssetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateJoinPoolAndStakeAssetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteJoinPoolAndStakeAsset) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteJoinPoolAndStakeAsset) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteJoinPoolAndStakeAsset) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteJoinPoolAndStakeAssetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteJoinPoolAndStakeAssetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteJoinPoolAndStakeAssetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateWinners) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AddressString)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PoolNo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Winnings)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateWinnersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateWinners) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.AddressString)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PoolNo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Winnings)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateWinnersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteWinners) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteWinnersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateMembers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateMembersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateMembers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateMembersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteMembers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteMembersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreatePool4Ticket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AddressString)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LambdaValue)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatePool4TicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdatePool4Ticket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.AddressString)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LambdaValue)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdatePool4TicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeletePool4Ticket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeletePool4TicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreatePool3Ticket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AddressString)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LambdaValue)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatePool3TicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdatePool3Ticket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.AddressString)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LambdaValue)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdatePool3TicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeletePool3Ticket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeletePool3TicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreatePool2Ticket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AddressString)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LambdaValue)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatePool2TicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdatePool2Ticket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.AddressString)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LambdaValue)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdatePool2TicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeletePool2Ticket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeletePool2TicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreatePool1Ticket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AddressString)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LambdaValue)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatePool1TicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdatePool1Ticket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.AddressString)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LambdaValue)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdatePool1TicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeletePool1Ticket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeletePool1TicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreatePool0Ticket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AddressString)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LambdaValue)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatePool0TicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdatePool0Ticket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.AddressString)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LambdaValue)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdatePool0TicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeletePool0Ticket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeletePool0TicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateJoinPoolAndStakeAsset) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PoolNo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AssetSerial)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateJoinPoolAndStakeAssetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateJoinPoolAndStakeAsset) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.PoolNo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AssetSerial)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateJoinPoolAndStakeAssetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteJoinPoolAndStakeAsset) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteJoinPoolAndStakeAssetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateWinners) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateWinners: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateWinners: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddressString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolNo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolNo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Winnings", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Winnings = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateWinnersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateWinnersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateWinnersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateWinners) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateWinners: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateWinners: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddressString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolNo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolNo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Winnings", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Winnings = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateWinnersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateWinnersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateWinnersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteWinners) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteWinners: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteWinners: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteWinnersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteWinnersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteWinnersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMembers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMembers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMembers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMembersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMembersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMembersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMembers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMembers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMembers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMembersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMembersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMembersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteMembers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteMembers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteMembers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteMembersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteMembersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteMembersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePool4Ticket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePool4Ticket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePool4Ticket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddressString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LambdaValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LambdaValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePool4TicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePool4TicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePool4TicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePool4Ticket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePool4Ticket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePool4Ticket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddressString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LambdaValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LambdaValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePool4TicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePool4TicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePool4TicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePool4Ticket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePool4Ticket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePool4Ticket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePool4TicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePool4TicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePool4TicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePool3Ticket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePool3Ticket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePool3Ticket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddressString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LambdaValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LambdaValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePool3TicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePool3TicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePool3TicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePool3Ticket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePool3Ticket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePool3Ticket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddressString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LambdaValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LambdaValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePool3TicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePool3TicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePool3TicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePool3Ticket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePool3Ticket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePool3Ticket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePool3TicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePool3TicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePool3TicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePool2Ticket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePool2Ticket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePool2Ticket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddressString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LambdaValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LambdaValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePool2TicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePool2TicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePool2TicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePool2Ticket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePool2Ticket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePool2Ticket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddressString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LambdaValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LambdaValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePool2TicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePool2TicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePool2TicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePool2Ticket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePool2Ticket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePool2Ticket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePool2TicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePool2TicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePool2TicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePool1Ticket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePool1Ticket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePool1Ticket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddressString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LambdaValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LambdaValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePool1TicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePool1TicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePool1TicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePool1Ticket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePool1Ticket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePool1Ticket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddressString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LambdaValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LambdaValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePool1TicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePool1TicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePool1TicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePool1Ticket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePool1Ticket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePool1Ticket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePool1TicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePool1TicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePool1TicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePool0Ticket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePool0Ticket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePool0Ticket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddressString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LambdaValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LambdaValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePool0TicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePool0TicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePool0TicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePool0Ticket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePool0Ticket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePool0Ticket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddressString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LambdaValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LambdaValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePool0TicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePool0TicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePool0TicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePool0Ticket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePool0Ticket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePool0Ticket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePool0TicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePool0TicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePool0TicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateJoinPoolAndStakeAsset) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateJoinPoolAndStakeAsset: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateJoinPoolAndStakeAsset: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolNo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolNo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssetSerial", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AssetSerial = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateJoinPoolAndStakeAssetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateJoinPoolAndStakeAssetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateJoinPoolAndStakeAssetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateJoinPoolAndStakeAsset) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateJoinPoolAndStakeAsset: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateJoinPoolAndStakeAsset: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolNo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolNo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssetSerial", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AssetSerial = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateJoinPoolAndStakeAssetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateJoinPoolAndStakeAssetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateJoinPoolAndStakeAssetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteJoinPoolAndStakeAsset) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteJoinPoolAndStakeAsset: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteJoinPoolAndStakeAsset: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteJoinPoolAndStakeAssetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteJoinPoolAndStakeAssetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteJoinPoolAndStakeAssetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
