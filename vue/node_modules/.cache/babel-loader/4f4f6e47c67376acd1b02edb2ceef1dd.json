{"remainingRequest":"/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/babel-loader/lib/index.js!/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/eslint-loader/index.js??ref--13-0!/home/saptarsi/go/src/hackathon/shiaa3/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","dependencies":[{"path":"/home/saptarsi/go/src/hackathon/shiaa3/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","mtime":1616422839036},{"path":"/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/saptarsi/go/src/hackathon/shiaa3/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js"],"names":["Timestamp","Long","util","configure","Writer","Reader","Header","Any","Duration","Coin","protobufPackage","BondStatus","bondStatusFromJSON","object","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","UNRECOGNIZED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","encode","message","writer","create","header","undefined","uint32","fork","ldelim","valset","v","Validator","decode","input","length","reader","Uint8Array","end","len","pos","tag","push","skipType","fromJSON","e","toJSON","obj","map","fromPartial","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","string","String","baseCommission","Commission","commissionRates","updateTime","toTimestamp","fromTimestamp","fromJsonTimestamp","toISOString","baseDescription","moniker","identity","website","securityContact","details","Description","baseValidator","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","bool","int32","description","int64","unbondingTime","commission","longToNumber","Boolean","Number","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","globalThis","self","window","global","date","seconds","getTime","nanos","t","millis","Date","o","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Header } from \"../../../tendermint/types/types\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BOND_STATUS_UNSPECIFIED\":\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case \"BOND_STATUS_UNBONDED\":\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case \"BOND_STATUS_UNBONDING\":\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case \"BOND_STATUS_BONDED\":\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return \"BOND_STATUS_UNSPECIFIED\";\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return \"BOND_STATUS_UNBONDED\";\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return \"BOND_STATUS_UNBONDING\";\n        case BondStatus.BOND_STATUS_BONDED:\n            return \"BOND_STATUS_BONDED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommissionRates = {\n    rate: \"\",\n    maxRate: \"\",\n    maxChangeRate: \"\",\n};\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== \"\") {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== \"\") {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== \"\") {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseDescription = {\n    moniker: \"\",\n    identity: \"\",\n    website: \"\",\n    securityContact: \"\",\n    details: \"\",\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== \"\") {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== \"\") {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== \"\") {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== \"\") {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== \"\") {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidator = {\n    operatorAddress: \"\",\n    jailed: false,\n    status: 0,\n    tokens: \"\",\n    delegatorShares: \"\",\n    unbondingHeight: 0,\n    minSelfDelegation: \"\",\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== \"\") {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== \"\") {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== \"\") {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseValAddresses = { addresses: \"\" };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseDVPair = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDVVTriplet = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n    shares: \"\",\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== \"\") {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    balance: \"\",\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    sharesDst: \"\",\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== \"\") {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegation = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: \"\",\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== \"\") {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance\n                ? Coin.toJSON(message.balance)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntryResponse = { balance: \"\" };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePool = { notBondedTokens: \"\", bondedTokens: \"\" };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== \"\") {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== \"\") {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]}]}