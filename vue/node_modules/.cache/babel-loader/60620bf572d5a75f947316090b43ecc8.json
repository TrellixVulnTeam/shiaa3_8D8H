{"remainingRequest":"/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/babel-loader/lib/index.js!/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/eslint-loader/index.js??ref--13-0!/home/saptarsi/go/src/hackathon/shiaa3/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","dependencies":[{"path":"/home/saptarsi/go/src/hackathon/shiaa3/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","mtime":1616486558941},{"path":"/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/saptarsi/go/src/hackathon/shiaa3/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js"],"names":["V1Beta1ProposalStatus","V1Beta1VoteOption","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","data","contentFormatters","Json","input","JSON","stringify","FormData","Object","keys","reduce","key","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","get","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","path","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","r","error","ok","catch","e","assign","value","encodeURIComponent","Array","isArray","join","rawQuery","filter","map","addQueryParam","params1","params2","Api","arguments","queryParams","paramsType","method","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","depositor","queryTallyResult","queryVotes","queryVote","voter"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIA,qBAAJ;;AACP,CAAC,UAAUA,qBAAV,EAAiC;AAC9BA,EAAAA,qBAAqB,CAAC,6BAAD,CAArB,GAAuD,6BAAvD;AACAA,EAAAA,qBAAqB,CAAC,gCAAD,CAArB,GAA0D,gCAA1D;AACAA,EAAAA,qBAAqB,CAAC,+BAAD,CAArB,GAAyD,+BAAzD;AACAA,EAAAA,qBAAqB,CAAC,wBAAD,CAArB,GAAkD,wBAAlD;AACAA,EAAAA,qBAAqB,CAAC,0BAAD,CAArB,GAAoD,0BAApD;AACAA,EAAAA,qBAAqB,CAAC,wBAAD,CAArB,GAAkD,wBAAlD;AACH,CAPD,EAOGA,qBAAqB,KAAKA,qBAAqB,GAAG,EAA7B,CAPxB;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,IAAIC,iBAAJ;;AACP,CAAC,UAAUA,iBAAV,EAA6B;AAC1BA,EAAAA,iBAAiB,CAAC,yBAAD,CAAjB,GAA+C,yBAA/C;AACAA,EAAAA,iBAAiB,CAAC,iBAAD,CAAjB,GAAuC,iBAAvC;AACAA,EAAAA,iBAAiB,CAAC,qBAAD,CAAjB,GAA2C,qBAA3C;AACAA,EAAAA,iBAAiB,CAAC,gBAAD,CAAjB,GAAsC,gBAAtC;AACAA,EAAAA,iBAAiB,CAAC,0BAAD,CAAjB,GAAgD,0BAAhD;AACH,CAND,EAMGA,iBAAiB,KAAKA,iBAAiB,GAAG,EAAzB,CANpB;;AAOA,OAAO,IAAIC,WAAJ;;AACP,CAAC,UAAUA,WAAV,EAAuB;AACpBA,EAAAA,WAAW,CAAC,MAAD,CAAX,GAAsB,kBAAtB;AACAA,EAAAA,WAAW,CAAC,UAAD,CAAX,GAA0B,qBAA1B;AACAA,EAAAA,WAAW,CAAC,YAAD,CAAX,GAA4B,mCAA5B;AACH,CAJD,EAIGA,WAAW,KAAKA,WAAW,GAAG,EAAnB,CAJd;;AAKA,WAAaC,UAAb;AACI,wBAA4B;AAAA;AAAA;;AAAA,QAAhBC,SAAgB,uEAAJ,EAAI;;AAAA;;AACxB,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,YAAL,GAAoB,IAApB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,gBAAL,GAAwB,IAAIC,GAAJ,EAAxB;AACA,SAAKC,aAAL,GAAqB;AACjBC,MAAAA,WAAW,EAAE,aADI;AAEjBC,MAAAA,OAAO,EAAE,EAFQ;AAGjBC,MAAAA,QAAQ,EAAE,QAHO;AAIjBC,MAAAA,cAAc,EAAE;AAJC,KAArB;;AAMA,SAAKC,eAAL,GAAuB,UAACC,IAAD,EAAU;AAC7B,MAAA,KAAI,CAACV,YAAL,GAAoBU,IAApB;AACH,KAFD;;AAGA,SAAKC,iBAAL,uEACKf,WAAW,CAACgB,IADjB,EACwB,UAACC,KAAD;AAAA,aAAWA,KAAK,KAAK,IAAV,KAAmB,QAAOA,KAAP,MAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAAjE,IAA6EC,IAAI,CAACC,SAAL,CAAeF,KAAf,CAA7E,GAAqGA,KAAhH;AAAA,KADxB,0CAEKjB,WAAW,CAACoB,QAFjB,EAE4B,UAACH,KAAD;AAAA,aAAWI,MAAM,CAACC,IAAP,CAAYL,KAAK,IAAI,EAArB,EAAyBM,MAAzB,CAAgC,UAACT,IAAD,EAAOU,GAAP,EAAe;AAC9EV,QAAAA,IAAI,CAACW,MAAL,CAAYD,GAAZ,EAAiBP,KAAK,CAACO,GAAD,CAAtB;AACA,eAAOV,IAAP;AACH,OAHkC,EAGhC,IAAIM,QAAJ,EAHgC,CAAX;AAAA,KAF5B,0CAMKpB,WAAW,CAAC0B,UANjB,EAM8B,UAACT,KAAD;AAAA,aAAW,KAAI,CAACU,aAAL,CAAmBV,KAAnB,CAAX;AAAA,KAN9B;;AAQA,SAAKW,iBAAL,GAAyB,UAACC,WAAD,EAAiB;AACtC,UAAI,KAAI,CAACvB,gBAAL,CAAsBwB,GAAtB,CAA0BD,WAA1B,CAAJ,EAA4C;AACxC,YAAME,gBAAe,GAAG,KAAI,CAACzB,gBAAL,CAAsB0B,GAAtB,CAA0BH,WAA1B,CAAxB;;AACA,YAAIE,gBAAJ,EAAqB;AACjB,iBAAOA,gBAAe,CAACE,MAAvB;AACH;;AACD,eAAO,KAAK,CAAZ;AACH;;AACD,UAAMF,eAAe,GAAG,IAAIG,eAAJ,EAAxB;;AACA,MAAA,KAAI,CAAC5B,gBAAL,CAAsB6B,GAAtB,CAA0BN,WAA1B,EAAuCE,eAAvC;;AACA,aAAOA,eAAe,CAACE,MAAvB;AACH,KAXD;;AAYA,SAAKG,YAAL,GAAoB,UAACP,WAAD,EAAiB;AACjC,UAAME,eAAe,GAAG,KAAI,CAACzB,gBAAL,CAAsB0B,GAAtB,CAA0BH,WAA1B,CAAxB;;AACA,UAAIE,eAAJ,EAAqB;AACjBA,QAAAA,eAAe,CAACM,KAAhB;;AACA,QAAA,KAAI,CAAC/B,gBAAL,CAAsBgC,MAAtB,CAA6BT,WAA7B;AACH;AACJ,KAND;;AAOA,SAAKU,OAAL,GAAe,gBAA2F;AAAA,UAAxFC,IAAwF,QAAxFA,IAAwF;AAAA,UAAlFC,MAAkF,QAAlFA,MAAkF;AAAA,UAA1EC,IAA0E,QAA1EA,IAA0E;AAAA,UAApEC,IAAoE,QAApEA,IAAoE;AAAA,UAA9DC,KAA8D,QAA9DA,KAA8D;AAAA,6BAAvDC,MAAuD;AAAA,UAAvDA,MAAuD,4BAA9C,MAA8C;AAAA,UAAtC1C,OAAsC,QAAtCA,OAAsC;AAAA,UAA7B0B,WAA6B,QAA7BA,WAA6B;AAAA,UAAbiB,MAAa;;AACtG,UAAMC,YAAY,GAAIN,MAAM,IAAI,KAAI,CAACpC,cAAf,IAAiC,KAAI,CAACA,cAAL,CAAoB,KAAI,CAACD,YAAzB,CAAlC,IAA6E,EAAlG;;AACA,UAAM4C,aAAa,GAAG,KAAI,CAACC,kBAAL,CAAwBH,MAAxB,EAAgCC,YAAhC,CAAtB;;AACA,UAAMG,WAAW,GAAGN,KAAK,IAAI,KAAI,CAACjB,aAAL,CAAmBiB,KAAnB,CAA7B;;AACA,UAAMO,gBAAgB,GAAG,KAAI,CAACpC,iBAAL,CAAuB4B,IAAI,IAAI3C,WAAW,CAACgB,IAA3C,CAAzB;AACA,aAAOoC,KAAK,WAAIjD,OAAO,IAAI,KAAI,CAACA,OAAhB,IAA2B,EAA/B,SAAoCuC,IAApC,SAA2CQ,WAAW,cAAOA,WAAP,IAAuB,EAA7E,mCACLF,aADK;AAERtC,QAAAA,OAAO,kCACCiC,IAAI,IAAIA,IAAI,KAAK3C,WAAW,CAACoB,QAA7B,GAAwC;AAAE,0BAAgBuB;AAAlB,SAAxC,GAAmE,EADpE,GAECK,aAAa,CAACtC,OAAd,IAAyB,EAF1B,CAFC;AAMRuB,QAAAA,MAAM,EAAEJ,WAAW,GAAG,KAAI,CAACD,iBAAL,CAAuBC,WAAvB,CAAH,GAAyC,KAAK,CANzD;AAORW,QAAAA,IAAI,EAAE,OAAOA,IAAP,KAAgB,WAAhB,IAA+BA,IAAI,KAAK,IAAxC,GAA+C,IAA/C,GAAsDW,gBAAgB,CAACX,IAAD;AAPpE,SAAL,CAQJa,IARI;AAAA,4EAQC,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,kBAAAA,CADF,GACMD,QADN;AAEJC,kBAAAA,CAAC,CAACzC,IAAF,GAAS,IAAT;AACAyC,kBAAAA,CAAC,CAACC,KAAF,GAAU,IAAV;AAHI;AAAA,yBAIeF,QAAQ,CAACT,MAAD,CAAR,GACdQ,IADc,CACT,UAACvC,IAAD,EAAU;AAChB,wBAAIyC,CAAC,CAACE,EAAN,EAAU;AACNF,sBAAAA,CAAC,CAACzC,IAAF,GAASA,IAAT;AACH,qBAFD,MAGK;AACDyC,sBAAAA,CAAC,CAACC,KAAF,GAAU1C,IAAV;AACH;;AACD,2BAAOyC,CAAP;AACH,mBATkB,EAUdG,KAVc,CAUR,UAACC,CAAD,EAAO;AACdJ,oBAAAA,CAAC,CAACC,KAAF,GAAUG,CAAV;AACA,2BAAOJ,CAAP;AACH,mBAbkB,CAJf;;AAAA;AAIEzC,kBAAAA,IAJF;;AAkBJ,sBAAIe,WAAJ,EAAiB;AACb,oBAAA,KAAI,CAACvB,gBAAL,CAAsBgC,MAAtB,CAA6BT,WAA7B;AACH;;AApBG,sBAqBCyB,QAAQ,CAACG,EArBV;AAAA;AAAA;AAAA;;AAAA,wBAsBM3C,IAtBN;;AAAA;AAAA,mDAuBGA,IAvBH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARD;;AAAA;AAAA;AAAA;AAAA,UAAP;AAiCH,KAtCD;;AAuCAO,IAAAA,MAAM,CAACuC,MAAP,CAAc,IAAd,EAAoB1D,SAApB;AACH;;AAlFL;AAAA;AAAA,WAmFI,uBAAc0C,KAAd,EAAqBpB,GAArB,EAA0B;AACtB,UAAMqC,KAAK,GAAGjB,KAAK,CAACpB,GAAD,CAAnB;AACA,aAAQsC,kBAAkB,CAACtC,GAAD,CAAlB,GACJ,GADI,GAEJsC,kBAAkB,CAACC,KAAK,CAACC,OAAN,CAAcH,KAAd,IAAuBA,KAAK,CAACI,IAAN,CAAW,GAAX,CAAvB,GAAyC,OAAOJ,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,aAAuCA,KAAvC,CAA1C,CAFtB;AAGH;AAxFL;AAAA;AAAA,WAyFI,uBAAcK,QAAd,EAAwB;AAAA;;AACpB,UAAMtB,KAAK,GAAGsB,QAAQ,IAAI,EAA1B;AACA,UAAM5C,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYsB,KAAZ,EAAmBuB,MAAnB,CAA0B,UAAC3C,GAAD;AAAA,eAAS,gBAAgB,OAAOoB,KAAK,CAACpB,GAAD,CAArC;AAAA,OAA1B,CAAb;AACA,aAAOF,IAAI,CACN8C,GADE,CACE,UAAC5C,GAAD;AAAA,eAAS,QAAOoB,KAAK,CAACpB,GAAD,CAAZ,MAAsB,QAAtB,IAAkC,CAACuC,KAAK,CAACC,OAAN,CAAcpB,KAAK,CAACpB,GAAD,CAAnB,CAAnC,GACZ,MAAI,CAACG,aAAL,CAAmBiB,KAAK,CAACpB,GAAD,CAAxB,CADY,GAEZ,MAAI,CAAC6C,aAAL,CAAmBzB,KAAnB,EAA0BpB,GAA1B,CAFG;AAAA,OADF,EAIFyC,IAJE,CAIG,GAJH,CAAP;AAKH;AAjGL;AAAA;AAAA,WAkGI,wBAAeC,QAAf,EAAyB;AACrB,UAAMhB,WAAW,GAAG,KAAKvB,aAAL,CAAmBuC,QAAnB,CAApB;AACA,aAAOhB,WAAW,cAAOA,WAAP,IAAuB,EAAzC;AACH;AArGL;AAAA;AAAA,WAsGI,4BAAmBoB,OAAnB,EAA4BC,OAA5B,EAAqC;AACjC,yEACO,KAAK/D,aADZ,GAEO8D,OAFP,GAGQC,OAAO,IAAI,EAHnB;AAII7D,QAAAA,OAAO,gDACC,KAAKF,aAAL,CAAmBE,OAAnB,IAA8B,EAD/B,GAEC4D,OAAO,CAAC5D,OAAR,IAAmB,EAFpB,GAGE6D,OAAO,IAAIA,OAAO,CAAC7D,OAApB,IAAgC,EAHjC;AAJX;AAUH;AAjHL;;AAAA;AAAA;AAmHA;AACA;AACA;AACA;;AACA,WAAa8D,GAAb;AAAA;;AAAA;;AACI,iBAAc;AAAA;;AAAA;;AACV,gCAASC,SAAT;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,WAAKC,WAAL,GAAmB,UAACC,UAAD;AAAA,UAAa7B,MAAb,uEAAsB,EAAtB;AAAA,aAA6B,OAAKP,OAAL;AAC5CG,QAAAA,IAAI,uCAAgCiC,UAAhC,CADwC;AAE5CC,QAAAA,MAAM,EAAE,KAFoC;AAG5C/B,QAAAA,MAAM,EAAE;AAHoC,SAIzCC,MAJyC,EAA7B;AAAA,KAAnB;AAMA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ,WAAK+B,cAAL,GAAsB,UAACjC,KAAD;AAAA,UAAQE,MAAR,uEAAiB,EAAjB;AAAA,aAAwB,OAAKP,OAAL;AAC1CG,QAAAA,IAAI,iCADsC;AAE1CkC,QAAAA,MAAM,EAAE,KAFkC;AAG1ChC,QAAAA,KAAK,EAAEA,KAHmC;AAI1CC,QAAAA,MAAM,EAAE;AAJkC,SAKvCC,MALuC,EAAxB;AAAA,KAAtB;AAOA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ,WAAKgC,aAAL,GAAqB,UAACC,UAAD;AAAA,UAAajC,MAAb,uEAAsB,EAAtB;AAAA,aAA6B,OAAKP,OAAL;AAC9CG,QAAAA,IAAI,0CAAmCqC,UAAnC,CAD0C;AAE9CH,QAAAA,MAAM,EAAE,KAFsC;AAG9C/B,QAAAA,MAAM,EAAE;AAHsC,SAI3CC,MAJ2C,EAA7B;AAAA,KAArB;AAMA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ,WAAKkC,aAAL,GAAqB,UAACD,UAAD,EAAanC,KAAb;AAAA,UAAoBE,MAApB,uEAA6B,EAA7B;AAAA,aAAoC,OAAKP,OAAL;AACrDG,QAAAA,IAAI,0CAAmCqC,UAAnC,cADiD;AAErDH,QAAAA,MAAM,EAAE,KAF6C;AAGrDhC,QAAAA,KAAK,EAAEA,KAH8C;AAIrDC,QAAAA,MAAM,EAAE;AAJ6C,SAKlDC,MALkD,EAApC;AAAA,KAArB;AAOA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ,WAAKmC,YAAL,GAAoB,UAACF,UAAD,EAAaG,SAAb;AAAA,UAAwBpC,MAAxB,uEAAiC,EAAjC;AAAA,aAAwC,OAAKP,OAAL;AACxDG,QAAAA,IAAI,0CAAmCqC,UAAnC,uBAA0DG,SAA1D,CADoD;AAExDN,QAAAA,MAAM,EAAE,KAFgD;AAGxD/B,QAAAA,MAAM,EAAE;AAHgD,SAIrDC,MAJqD,EAAxC;AAAA,KAApB;AAMA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ,WAAKqC,gBAAL,GAAwB,UAACJ,UAAD;AAAA,UAAajC,MAAb,uEAAsB,EAAtB;AAAA,aAA6B,OAAKP,OAAL;AACjDG,QAAAA,IAAI,0CAAmCqC,UAAnC,WAD6C;AAEjDH,QAAAA,MAAM,EAAE,KAFyC;AAGjD/B,QAAAA,MAAM,EAAE;AAHyC,SAI9CC,MAJ8C,EAA7B;AAAA,KAAxB;AAMA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ,WAAKsC,UAAL,GAAkB,UAACL,UAAD,EAAanC,KAAb;AAAA,UAAoBE,MAApB,uEAA6B,EAA7B;AAAA,aAAoC,OAAKP,OAAL;AAClDG,QAAAA,IAAI,0CAAmCqC,UAAnC,WAD8C;AAElDH,QAAAA,MAAM,EAAE,KAF0C;AAGlDhC,QAAAA,KAAK,EAAEA,KAH2C;AAIlDC,QAAAA,MAAM,EAAE;AAJ0C,SAK/CC,MAL+C,EAApC;AAAA,KAAlB;AAOA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ,WAAKuC,SAAL,GAAiB,UAACN,UAAD,EAAaO,KAAb;AAAA,UAAoBxC,MAApB,uEAA6B,EAA7B;AAAA,aAAoC,OAAKP,OAAL;AACjDG,QAAAA,IAAI,0CAAmCqC,UAAnC,oBAAuDO,KAAvD,CAD6C;AAEjDV,QAAAA,MAAM,EAAE,KAFyC;AAGjD/B,QAAAA,MAAM,EAAE;AAHyC,SAI9CC,MAJ8C,EAApC;AAAA,KAAjB;;AA/GU;AAqHb;;AAtHL;AAAA,EAAyB7C,UAAzB","sourcesContent":["/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/gov.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n"]}]}