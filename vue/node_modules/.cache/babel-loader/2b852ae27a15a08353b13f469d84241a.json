{"remainingRequest":"/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/babel-loader/lib/index.js!/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/eslint-loader/index.js??ref--13-0!/home/saptarsi/go/src/hackathon/shiaa3/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","dependencies":[{"path":"/home/saptarsi/go/src/hackathon/shiaa3/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","mtime":1616422839048},{"path":"/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/saptarsi/go/src/hackathon/shiaa3/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js"],"names":["Long","util","configure","Writer","Reader","protobufPackage","baseProof","total","index","Proof","encode","message","writer","create","uint32","int64","leafHash","length","bytes","aunts","v","decode","input","reader","Uint8Array","end","undefined","len","pos","tag","longToNumber","push","skipType","fromJSON","object","Number","bytesFromBase64","e","toJSON","obj","base64FromBytes","map","fromPartial","baseValueOp","ValueOp","key","proof","fork","ldelim","baseDominoOp","output","DominoOp","string","String","baseProofOp","type","ProofOp","data","baseProofOps","ProofOps","ops","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byteLength","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]}]}