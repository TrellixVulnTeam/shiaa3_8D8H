{"remainingRequest":"/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/babel-loader/lib/index.js!/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/eslint-loader/index.js??ref--13-0!/home/saptarsi/go/src/hackathon/shiaa3/vue/src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","dependencies":[{"path":"/home/saptarsi/go/src/hackathon/shiaa3/vue/src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","mtime":1616486558937},{"path":"/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/saptarsi/go/src/hackathon/shiaa3/vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/saptarsi/go/src/hackathon/shiaa3/vue/src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js"],"names":["Reader","util","configure","Writer","Long","Counterparty","Version","Any","Height","protobufPackage","baseMsgConnectionOpenInit","clientId","delayPeriod","signer","MsgConnectionOpenInit","encode","message","writer","create","uint32","string","counterparty","undefined","fork","ldelim","version","uint64","decode","input","length","reader","Uint8Array","end","len","pos","tag","longToNumber","skipType","fromJSON","object","String","Number","toJSON","obj","fromPartial","baseMsgConnectionOpenInitResponse","MsgConnectionOpenInitResponse","_","baseMsgConnectionOpenTry","previousConnectionId","MsgConnectionOpenTry","clientState","counterpartyVersions","v","proofHeight","proofInit","bytes","proofClient","proofConsensus","consensusHeight","push","e","bytesFromBase64","map","base64FromBytes","baseMsgConnectionOpenTryResponse","MsgConnectionOpenTryResponse","baseMsgConnectionOpenAck","connectionId","counterpartyConnectionId","MsgConnectionOpenAck","proofTry","baseMsgConnectionOpenAckResponse","MsgConnectionOpenAckResponse","baseMsgConnectionOpenConfirm","MsgConnectionOpenConfirm","proofAck","baseMsgConnectionOpenConfirmResponse","MsgConnectionOpenConfirmResponse","MsgClientImpl","rpc","request","data","finish","promise","then","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byteLength","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Counterparty, Version, } from \"../../../../ibc/core/connection/v1/connection\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\nconst baseMsgConnectionOpenInit = {\n    clientId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== \"\") {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    signer: \"\",\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== \"\") {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: \"\", signer: \"\" };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]}]}