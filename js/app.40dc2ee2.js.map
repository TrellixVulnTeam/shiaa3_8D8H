{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/views/Game.vue?61d3","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/views/SendAsset.vue?6361","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.shiaa3/module/types/shiaa3/Pool4Ticket.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.shiaa3/module/types/shiaa3/Pool2Ticket.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.shiaa3/module/types/shiaa3/Pool3Ticket.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.shiaa3/module/types/shiaa3/Pool1Ticket.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/views/BuyAsset.vue?f846","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.assets/module/types/assets/Asset.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?6c77","webpack:///./src/App.vue?97f5","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.shiaa3/module/rest.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.shiaa3/module/index.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.shiaa3/index.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.assets/module/rest.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.assets/module/index.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.assets/module/types/assets/packet.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.assets/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?fae4","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?3246","webpack:///./src/views/BuyAsset.vue","webpack:///./src/views/BuyAsset.vue?9f62","webpack:///./src/views/ListAsset.vue","webpack:///./src/components/OwnerAssetList.vue","webpack:///./src/components/OwnerAssetList.vue?d527","webpack:///./src/views/ListAsset.vue?cda0","webpack:///./src/views/SendAsset.vue","webpack:///./src/views/SendAsset.vue?905a","webpack:///./src/views/PoolView.vue","webpack:///./src/views/PoolView.vue?ed23","webpack:///./src/views/Game.vue","webpack:///./src/views/Game.vue?7374","webpack:///./src/views/Winner.vue","webpack:///./src/views/Winner.vue?a2e1","webpack:///./src/views/Member.vue","webpack:///./src/views/Member.vue?481b","webpack:///./src/views/IbcSent.vue","webpack:///./src/views/IbcSent.vue?a0b1","webpack:///./src/views/IbcTimeout.vue","webpack:///./src/views/IbcTimeout.vue?1783","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?5d12","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.shiaa3/module/types/shiaa3/Winners.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.shiaa3/module/types/shiaa3/Pool0Ticket.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.shiaa3/module/types/shiaa3/Members.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/views/ListAsset.vue?2efb","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.assets/module/types/assets/TransferAsset.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.assets/module/types/assets/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.shiaa3/module/types/shiaa3/JoinPoolAndStakeAsset.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.shiaa3/module/types/shiaa3/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.assets/module/types/assets/TimedOutAsset.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/components/OwnerAssetList.vue?5455","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/sap200/shiaa3/sap200.shiaa3.assets/module/types/assets/SentAsset.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","String","fromCharCode","join","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","string","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","uint64","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","basePool4Ticket","creator","id","AddressString","LambdaValue","Pool4Ticket","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","basePool2Ticket","Pool2Ticket","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","basePool3Ticket","Pool3Ticket","basePool1Ticket","Pool1Ticket","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","baseAsset","Serial","Name","AssetType","Tokens","Owner","Asset","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","description","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","path","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryJoinPoolAndStakeAssetAll","method","queryJoinPoolAndStakeAsset","queryMembersAll","queryMembers","queryPool0TicketAll","queryPool0Ticket","queryPool1TicketAll","queryPool1Ticket","queryPool2TicketAll","queryPool2Ticket","queryPool3TicketAll","queryPool3Ticket","queryPool4TicketAll","queryPool4Ticket","queryWinnersAll","queryWinners","types","MsgCreatePool4Ticket","MsgDeletePool4Ticket","MsgUpdateMembers","MsgDeletePool0Ticket","MsgCreateJoinPoolAndStakeAsset","MsgCreatePool1Ticket","MsgUpdatePool1Ticket","MsgCreatePool0Ticket","MsgUpdatePool4Ticket","MsgUpdatePool3Ticket","MsgDeletePool3Ticket","MsgCreatePool2Ticket","MsgDeleteWinners","MsgUpdatePool0Ticket","MsgUpdateJoinPoolAndStakeAsset","MsgDeletePool1Ticket","MsgCreatePool3Ticket","MsgCreateMembers","MsgDeleteJoinPoolAndStakeAsset","MsgUpdateWinners","MsgDeletePool2Ticket","MsgDeleteMembers","MsgCreateWinners","MsgUpdatePool2Ticket","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgCreatePool4Ticket","msgDeletePool4Ticket","msgUpdateMembers","msgDeletePool0Ticket","msgCreateJoinPoolAndStakeAsset","msgCreatePool1Ticket","msgUpdatePool1Ticket","msgCreatePool0Ticket","msgUpdatePool4Ticket","msgUpdatePool3Ticket","msgDeletePool3Ticket","msgCreatePool2Ticket","msgDeleteWinners","msgUpdatePool0Ticket","msgUpdateJoinPoolAndStakeAsset","msgDeletePool1Ticket","msgCreatePool3Ticket","msgCreateMembers","msgDeleteJoinPoolAndStakeAsset","msgUpdateWinners","msgDeletePool2Ticket","msgDeleteMembers","msgCreateWinners","msgUpdatePool2Ticket","queryClient","initTxClient","vuexGetters","initQueryClient","getStructure","template","structure","fields","field","getDefaultState","Winners","WinnersAll","Members","MembersAll","Pool4TicketAll","Pool3TicketAll","Pool2TicketAll","Pool1TicketAll","Pool0Ticket","Pool0TicketAll","JoinPoolAndStakeAsset","JoinPoolAndStakeAssetAll","_Structure","_Subscriptions","Set","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getWinners","getWinnersAll","getMembers","getMembersAll","getPool4Ticket","getPool4TicketAll","getPool3Ticket","getPool3TicketAll","getPool2Ticket","getPool2TicketAll","getPool1Ticket","getPool1TicketAll","getPool0Ticket","getPool0TicketAll","getJoinPoolAndStakeAsset","getJoinPoolAndStakeAssetAll","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","QueryWinners","options","subscribe","all","SpVuexError","QueryWinnersAll","pagination","nextKey","next_values","prop","QueryMembers","QueryMembersAll","QueryPool4Ticket","QueryPool4TicketAll","QueryPool3Ticket","QueryPool3TicketAll","QueryPool2Ticket","QueryPool2TicketAll","QueryPool1Ticket","QueryPool1TicketAll","QueryPool0Ticket","QueryPool0TicketAll","QueryJoinPoolAndStakeAsset","QueryJoinPoolAndStakeAssetAll","sendMsgCreatePool4Ticket","msg","sendMsgDeletePool4Ticket","sendMsgUpdateMembers","sendMsgDeletePool0Ticket","sendMsgCreateJoinPoolAndStakeAsset","sendMsgCreatePool1Ticket","sendMsgUpdatePool1Ticket","sendMsgCreatePool0Ticket","sendMsgUpdatePool4Ticket","sendMsgUpdatePool3Ticket","sendMsgDeletePool3Ticket","sendMsgCreatePool2Ticket","sendMsgDeleteWinners","sendMsgUpdatePool0Ticket","sendMsgUpdateJoinPoolAndStakeAsset","sendMsgDeletePool1Ticket","sendMsgCreatePool3Ticket","sendMsgCreateMembers","sendMsgDeleteJoinPoolAndStakeAsset","sendMsgUpdateWinners","sendMsgDeletePool2Ticket","sendMsgDeleteMembers","sendMsgCreateWinners","sendMsgUpdatePool2Ticket","queryAssetAll","queryAsset","querySentAssetAll","querySentAsset","queryTimedOutAssetAll","queryTimedOutAsset","queryTransferAssetAll","queryTransferAsset","MsgDeleteTransferAsset","MsgDeleteTimedOutAsset","MsgDeleteSentAsset","MsgUpdateTransferAsset","MsgCreateAsset","MsgUpdateAsset","MsgUpdateSentAsset","MsgDeleteAsset","MsgCreateSentAsset","MsgSendIbcAsset","MsgCreateTransferAsset","MsgCreateTimedOutAsset","MsgUpdateTimedOutAsset","msgDeleteTransferAsset","msgDeleteTimedOutAsset","msgDeleteSentAsset","msgUpdateTransferAsset","msgCreateAsset","msgUpdateAsset","msgUpdateSentAsset","msgDeleteAsset","msgCreateSentAsset","msgSendIbcAsset","msgCreateTransferAsset","msgCreateTimedOutAsset","msgUpdateTimedOutAsset","baseAssetsPacketData","AssetsPacketData","noData","NoData","IbcAssetPacket","IbcAssetPacketData","baseNoData","_","baseIbcAssetPacketData","AssetSerial","Receiver","Creator","baseIbcAssetPacketAck","AssetId","IbcAssetPacketAck","TimedOutAsset","TimedOutAssetAll","SentAsset","SentAssetAll","TransferAsset","TransferAssetAll","AssetAll","getTimedOutAsset","getTimedOutAssetAll","getSentAsset","getSentAssetAll","getTransferAsset","getTransferAssetAll","getAsset","getAssetAll","QueryTimedOutAsset","QueryTimedOutAssetAll","QuerySentAsset","QuerySentAssetAll","QueryTransferAsset","QueryTransferAssetAll","QueryAsset","QueryAssetAll","sendMsgDeleteTransferAsset","sendMsgDeleteTimedOutAsset","sendMsgDeleteSentAsset","sendMsgUpdateTransferAsset","sendMsgCreateAsset","sendMsgUpdateAsset","sendMsgUpdateSentAsset","sendMsgDeleteAsset","sendMsgCreateSentAsset","sendMsgSendIbcAsset","sendMsgCreateTransferAsset","sendMsgCreateTimedOutAsset","sendMsgUpdateTimedOutAsset","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","queryParams","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","V1Order","V1State","SigningInfo","SigningInfos","ValidatorSigningInfo","ValidatorMissedBlocks","MissedBlock","getParams","getSigningInfo","getSigningInfos","QueryParams","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenInit","MsgTimeout","MsgChannelOpenAck","MsgChannelCloseInit","MsgChannelCloseConfirm","MsgChannelOpenConfirm","MsgChannelOpenTry","MsgRecvPacket","MsgTimeoutOnClose","MsgAcknowledgement","msgChannelOpenInit","msgTimeout","msgChannelOpenAck","msgChannelCloseInit","msgChannelCloseConfirm","msgChannelOpenConfirm","msgChannelOpenTry","msgRecvPacket","msgTimeoutOnClose","msgAcknowledgement","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","revision_number","revision_height","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenInit","sendMsgTimeout","sendMsgChannelOpenAck","sendMsgChannelCloseInit","sendMsgChannelCloseConfirm","sendMsgChannelOpenConfirm","sendMsgChannelOpenTry","sendMsgRecvPacket","sendMsgTimeoutOnClose","sendMsgAcknowledgement","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpgradeClient","msgUpdateClient","msgCreateClient","msgSubmitMisbehaviour","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","client_id","QueryClientStates","QueryConsensusState","QueryConsensusStates","QueryClientParams","sendMsgUpgradeClient","sendMsgUpdateClient","sendMsgCreateClient","sendMsgSubmitMisbehaviour","MsgCreateVestingAccount","msgCreateVestingAccount","V1Beta1BondStatus","sendMsgCreateVestingAccount","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidators","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgDelegate","msgEditValidator","msgCreateValidator","msgUndelegate","msgBeginRedelegate","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidators","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidators","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidators","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgDelegate","sendMsgEditValidator","sendMsgCreateValidator","sendMsgUndelegate","sendMsgBeginRedelegate","baseCoin","denom","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgFundCommunityPool","msgWithdrawValidatorCommission","msgWithdrawDelegatorReward","msgSetWithdrawAddress","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgFundCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgWithdrawDelegatorReward","sendMsgSetWithdrawAddress","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenAck","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenTry","msgConnectionOpenAck","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenTry","V1Beta1ProposalStatus","V1Beta1VoteOption","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenAck","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenTry","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgSubmitProposal","MsgDeposit","MsgVote","msgSubmitProposal","msgDeposit","msgVote","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgSubmitProposal","sendMsgDeposit","sendMsgVote","queryAllBalances","queryBalance","queryDenomsMetadata","queryDenomMetadata","queryTotalSupply","querySupplyOf","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgMultiSend","msgSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryDenomMetadata","QueryDenomsMetadata","sendMsgMultiSend","sendMsgSend","Sap200Shiaa3Sap200Shiaa3Shiaa3","load","Sap200Shiaa3Sap200Shiaa3Assets","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkIbcCoreConnectionV1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosBankV1Beta1","mod","fullns","store","fullnsLevels","split","registerModule","pop","mutation","root","values","generated","moduleInit","transfers","starport","blocks","env","createStore","modulePath","moduleType","src","alt","buy","prices","selectedAccount","_depsLoaded","methods","confirm","assetType","alert","rawLog","$emit","__scopeId","editOpen","deleteOpen","depsLoaded","toUpperCase","typeItems","item","fieldList","capitalize","moreOpen","deleteID","props","editID","items","res","beforeCreate","submod","str","charAt","OwnerAssetList","dataList","selectedValue","returnAllAsset","getAllAsset","new_res","placeholder","updateSerial","required","updateReceiver","sendAsset","updatePort","updateChannel","updateIBCSerial","updateIBCReceiver","sendAssetIBC","serial","receiver","ibcserial","ibcreceiver","ibcport","ibcchannel","ibctype","event","trim","port","channelID","mpool0","mpool1","mpool2","mpool3","mpool4","pool0","pool1","pool2","pool3","pool4","getPool0","getPool1","getPool2","getPool3","getPool4","poolNameList","selected","updatePoolName","joinAndStake","poolName","PoolNo","routerHistory","createWebHistory","routes","component","Index","Types","BuyAsset","ListAsset","SendAsset","PoolView","Game","Winner","Member","IbcSent","IbcTimeout","router","createRouter","history","app","createApp","App","config","globalProperties","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","baseWinners","Winnings","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","basePool0Ticket","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMembers","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseTransferAsset","baseMsgSendIbcAsset","baseMsgCreateTimedOutAsset","TargetChain","baseMsgUpdateTimedOutAsset","baseMsgDeleteTimedOutAsset","baseMsgCreateSentAsset","baseMsgUpdateSentAsset","baseMsgDeleteSentAsset","baseMsgCreateTransferAsset","baseMsgUpdateTransferAsset","baseMsgDeleteTransferAsset","baseMsgCreateAsset","baseMsgUpdateAsset","baseMsgDeleteAsset","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","baseJoinPoolAndStakeAsset","baseMsgCreateWinners","baseMsgUpdateWinners","baseMsgDeleteWinners","baseMsgCreateMembers","baseMsgUpdateMembers","baseMsgDeleteMembers","baseMsgCreatePool4Ticket","baseMsgUpdatePool4Ticket","baseMsgDeletePool4Ticket","baseMsgCreatePool3Ticket","baseMsgUpdatePool3Ticket","baseMsgDeletePool3Ticket","baseMsgCreatePool2Ticket","baseMsgUpdatePool2Ticket","baseMsgDeletePool2Ticket","baseMsgCreatePool1Ticket","baseMsgUpdatePool1Ticket","baseMsgDeletePool1Ticket","baseMsgCreatePool0Ticket","baseMsgUpdatePool0Ticket","baseMsgDeletePool0Ticket","baseMsgCreateJoinPoolAndStakeAsset","baseMsgUpdateJoinPoolAndStakeAsset","baseMsgDeleteJoinPoolAndStakeAsset","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseTimedOutAsset","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseSentAsset","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.40dc2ee2.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseMsgCreateClient = { signer: \"\" };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpdateClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpgradeClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviour = { clientId: \"\", signer: \"\" };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"CreateClient\", data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpdateClient\", data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpgradeClient\", data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"SubmitMisbehaviour\", data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { Header } from \"../../tendermint/types/types\";\nimport { ProofOps } from \"../../tendermint/crypto/proof\";\nimport { EvidenceParams, ValidatorParams, VersionParams, } from \"../../tendermint/types/params\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.abci\";\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NEW\":\n            return CheckTxType.NEW;\n        case 1:\n        case \"RECHECK\":\n            return CheckTxType.RECHECK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return \"NEW\";\n        case CheckTxType.RECHECK:\n            return \"RECHECK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case \"DUPLICATE_VOTE\":\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case \"LIGHT_CLIENT_ATTACK\":\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return \"UNKNOWN\";\n        case EvidenceType.DUPLICATE_VOTE:\n            return \"DUPLICATE_VOTE\";\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return \"LIGHT_CLIENT_ATTACK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case \"REJECT\":\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case \"REJECT_FORMAT\":\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case \"REJECT_SENDER\":\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseOfferSnapshot_Result.ABORT:\n            return \"ABORT\";\n        case ResponseOfferSnapshot_Result.REJECT:\n            return \"REJECT\";\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return \"REJECT_FORMAT\";\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return \"REJECT_SENDER\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case \"RETRY\":\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case \"RETRY_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case \"REJECT_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return \"ABORT\";\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return \"RETRY\";\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return \"RETRY_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return \"REJECT_SNAPSHOT\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseRequestEcho = { message: \"\" };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n};\nconst baseRequestInfo = { version: \"\", blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== \"\") {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestSetOption = { key: \"\", value: \"\" };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestInitChain = { chainId: \"\", initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestQuery = { path: \"\", height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== \"\") {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: \"\" };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseResponseException = { error: \"\" };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== \"\") {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEcho = { message: \"\" };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n};\nconst baseResponseInfo = {\n    data: \"\",\n    version: \"\",\n    appVersion: 0,\n    lastBlockHeight: 0,\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== \"\") {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseSetOption = { code: 0, log: \"\", info: \"\" };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: 0,\n    height: 0,\n    codespace: \"\",\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: \"\",\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => e ? VoteInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEvent = { type: \"\" };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Echo\", data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Flush\", data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Info\", data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"SetOption\", data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"DeliverTx\", data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"CheckTx\", data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Query\", data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Commit\", data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"InitChain\", data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"BeginBlock\", data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"EndBlock\", data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ListSnapshots\", data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"OfferSnapshot\", data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"LoadSnapshotChunk\", data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ApplySnapshotChunk\", data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Game.vue?vue&type=style&index=0&id=77302f59&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./SendAsset.vue?vue&type=style&index=0&id=29aae4e7&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../google/protobuf/duration\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorParams = { pubKeyTypes: \"\" };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined &&\n            (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"sap200.shiaa3.shiaa3\";\nconst basePool4Ticket = {\n    creator: \"\",\n    id: 0,\n    AddressString: \"\",\n    LambdaValue: \"\",\n};\nexport const Pool4Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(26).string(message.AddressString);\n        }\n        if (message.LambdaValue !== \"\") {\n            writer.uint32(34).string(message.LambdaValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool4Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AddressString = reader.string();\n                    break;\n                case 4:\n                    message.LambdaValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool4Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = String(object.LambdaValue);\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.LambdaValue !== undefined &&\n            (obj.LambdaValue = message.LambdaValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool4Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = object.LambdaValue;\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: \"\" };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== \"\") {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"sap200.shiaa3.shiaa3\";\nconst basePool2Ticket = {\n    creator: \"\",\n    id: 0,\n    AddressString: \"\",\n    LambdaValue: \"\",\n};\nexport const Pool2Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(26).string(message.AddressString);\n        }\n        if (message.LambdaValue !== \"\") {\n            writer.uint32(34).string(message.LambdaValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool2Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AddressString = reader.string();\n                    break;\n                case 4:\n                    message.LambdaValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool2Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = String(object.LambdaValue);\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.LambdaValue !== undefined &&\n            (obj.LambdaValue = message.LambdaValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool2Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = object.LambdaValue;\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { BaseAccount } from \"../../../cosmos/auth/v1beta1/auth\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"sap200.shiaa3.shiaa3\";\nconst basePool3Ticket = {\n    creator: \"\",\n    id: 0,\n    AddressString: \"\",\n    LambdaValue: \"\",\n};\nexport const Pool3Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(26).string(message.AddressString);\n        }\n        if (message.LambdaValue !== \"\") {\n            writer.uint32(34).string(message.LambdaValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool3Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AddressString = reader.string();\n                    break;\n                case 4:\n                    message.LambdaValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool3Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = String(object.LambdaValue);\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.LambdaValue !== undefined &&\n            (obj.LambdaValue = message.LambdaValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool3Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = object.LambdaValue;\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"sap200.shiaa3.shiaa3\";\nconst basePool1Ticket = {\n    creator: \"\",\n    id: 0,\n    AddressString: \"\",\n    LambdaValue: \"\",\n};\nexport const Pool1Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(26).string(message.AddressString);\n        }\n        if (message.LambdaValue !== \"\") {\n            writer.uint32(34).string(message.LambdaValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool1Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AddressString = reader.string();\n                    break;\n                case 4:\n                    message.LambdaValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool1Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = String(object.LambdaValue);\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.LambdaValue !== undefined &&\n            (obj.LambdaValue = message.LambdaValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool1Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = object.LambdaValue;\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case 4:\n        case \"STATE_CLOSED\":\n            return State.STATE_CLOSED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        case State.STATE_CLOSED:\n            return \"STATE_CLOSED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"ORDER_NONE_UNSPECIFIED\":\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case \"ORDER_UNORDERED\":\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case \"ORDER_ORDERED\":\n            return Order.ORDER_ORDERED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return \"ORDER_NONE_UNSPECIFIED\";\n        case Order.ORDER_UNORDERED:\n            return \"ORDER_UNORDERED\";\n        case Order.ORDER_ORDERED:\n            return \"ORDER_ORDERED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n    portId: \"\",\n    channelId: \"\",\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== \"\") {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { portId: \"\", channelId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    destinationPort: \"\",\n    destinationChannel: \"\",\n    timeoutTimestamp: 0,\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== \"\") {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== \"\") {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== \"\") {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst basePacketState = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./BuyAsset.vue?vue&type=style&index=0&id=06d88689&scoped=true&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"sap200.shiaa3.assets\";\nconst baseAsset = {\n    creator: \"\",\n    id: 0,\n    Serial: \"\",\n    Name: \"\",\n    AssetType: 0,\n    Tokens: 0,\n    Owner: \"\",\n};\nexport const Asset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.Serial !== \"\") {\n            writer.uint32(26).string(message.Serial);\n        }\n        if (message.Name !== \"\") {\n            writer.uint32(34).string(message.Name);\n        }\n        if (message.AssetType !== 0) {\n            writer.uint32(40).int32(message.AssetType);\n        }\n        if (message.Tokens !== 0) {\n            writer.uint32(48).int32(message.Tokens);\n        }\n        if (message.Owner !== \"\") {\n            writer.uint32(58).string(message.Owner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.Serial = reader.string();\n                    break;\n                case 4:\n                    message.Name = reader.string();\n                    break;\n                case 5:\n                    message.AssetType = reader.int32();\n                    break;\n                case 6:\n                    message.Tokens = reader.int32();\n                    break;\n                case 7:\n                    message.Owner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.Serial !== undefined && object.Serial !== null) {\n            message.Serial = String(object.Serial);\n        }\n        else {\n            message.Serial = \"\";\n        }\n        if (object.Name !== undefined && object.Name !== null) {\n            message.Name = String(object.Name);\n        }\n        else {\n            message.Name = \"\";\n        }\n        if (object.AssetType !== undefined && object.AssetType !== null) {\n            message.AssetType = Number(object.AssetType);\n        }\n        else {\n            message.AssetType = 0;\n        }\n        if (object.Tokens !== undefined && object.Tokens !== null) {\n            message.Tokens = Number(object.Tokens);\n        }\n        else {\n            message.Tokens = 0;\n        }\n        if (object.Owner !== undefined && object.Owner !== null) {\n            message.Owner = String(object.Owner);\n        }\n        else {\n            message.Owner = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.Serial !== undefined && (obj.Serial = message.Serial);\n        message.Name !== undefined && (obj.Name = message.Name);\n        message.AssetType !== undefined && (obj.AssetType = message.AssetType);\n        message.Tokens !== undefined && (obj.Tokens = message.Tokens);\n        message.Owner !== undefined && (obj.Owner = message.Owner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.Serial !== undefined && object.Serial !== null) {\n            message.Serial = object.Serial;\n        }\n        else {\n            message.Serial = \"\";\n        }\n        if (object.Name !== undefined && object.Name !== null) {\n            message.Name = object.Name;\n        }\n        else {\n            message.Name = \"\";\n        }\n        if (object.AssetType !== undefined && object.AssetType !== null) {\n            message.AssetType = object.AssetType;\n        }\n        else {\n            message.AssetType = 0;\n        }\n        if (object.Tokens !== undefined && object.Tokens !== null) {\n            message.Tokens = object.Tokens;\n        }\n        else {\n            message.Tokens = 0;\n        }\n        if (object.Owner !== undefined && object.Owner !== null) {\n            message.Owner = object.Owner;\n        }\n        else {\n            message.Owner = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Header } from \"../../../tendermint/types/types\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BOND_STATUS_UNSPECIFIED\":\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case \"BOND_STATUS_UNBONDED\":\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case \"BOND_STATUS_UNBONDING\":\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case \"BOND_STATUS_BONDED\":\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return \"BOND_STATUS_UNSPECIFIED\";\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return \"BOND_STATUS_UNBONDED\";\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return \"BOND_STATUS_UNBONDING\";\n        case BondStatus.BOND_STATUS_BONDED:\n            return \"BOND_STATUS_BONDED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommissionRates = {\n    rate: \"\",\n    maxRate: \"\",\n    maxChangeRate: \"\",\n};\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== \"\") {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== \"\") {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== \"\") {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseDescription = {\n    moniker: \"\",\n    identity: \"\",\n    website: \"\",\n    securityContact: \"\",\n    details: \"\",\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== \"\") {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== \"\") {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== \"\") {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== \"\") {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== \"\") {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidator = {\n    operatorAddress: \"\",\n    jailed: false,\n    status: 0,\n    tokens: \"\",\n    delegatorShares: \"\",\n    unbondingHeight: 0,\n    minSelfDelegation: \"\",\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== \"\") {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== \"\") {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== \"\") {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseValAddresses = { addresses: \"\" };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseDVPair = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDVVTriplet = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n    shares: \"\",\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== \"\") {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    balance: \"\",\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    sharesDst: \"\",\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== \"\") {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegation = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: \"\",\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== \"\") {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance\n                ? Coin.toJSON(message.balance)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntryResponse = { balance: \"\" };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePool = { notBondedTokens: \"\", bondedTokens: \"\" };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== \"\") {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== \"\") {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n  <SpSidebar\n\t\t\t\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\t\t\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t\t\t\t>\n\t\t\t\t\t<template v-slot:default>\n\t\t\t\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t\t\t\t<!-- <SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" /> -->\n\t\t\t\t\t\t<SpLinkIcon link=\"/buyasset\" text=\"MarketPlace\" icon=\"Form\"/> \n\t\t\t\t\t\t<SpLinkIcon link=\"/listasset\" text=\"My Collection\" icon=\"Docs\"/>\n\t\t\t\t\t\t<SpLinkIcon link=\"/sendmyasset\" text=\"Send Assets\" icon=\"Form\"/>\n\t\t\t\t\t\t<SpLinkIcon link=\"/poolview\" text=\"Club\" icon=\"Docs\"/>\n\t\t\t\t\t\t<SpLinkIcon link=\"/gamble\" text=\"Gamble\" icon=\"Form\"/>\n\t\t\t\t\t\t<SpLinkIcon link=\"/winners\" text=\"Winners Ledger\" icon=\"Docs\"/>\n\t\t\t\t\t\t<SpLinkIcon link=\"/members\" text=\"Members Ledger\" icon=\"Docs\"/>\n\t\t\t\t\t\t<SpLinkIcon link=\"/ibcsent\" text=\"IBC Sent Ledger\" icon=\"Docs\"/>\n\t\t\t\t\t\t<SpLinkIcon link=\"/ibctimedout\" text=\"IBC Timedout Ledger\" icon=\"Docs\"/>\n\t\t\t\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t\t\t\t<SpLinkIcon href=\"https://github.com/tendermint/starport\" target=\"_blank\" text=\"Documentation\" icon=\"Docs\" />\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-slot:footer>\n\t\t\t\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t\t\t\t</template>\n\t\t\t\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n  name: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=28caed88\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=5695b462\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title shiaa3/Pool3Ticket.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryJoinPoolAndStakeAssetAll\n         * @request GET:/sap200/shiaa3/shiaa3/JoinPoolAndStakeAsset\n         */\n        this.queryJoinPoolAndStakeAssetAll = (query, params = {}) => this.request({\n            path: `/sap200/shiaa3/shiaa3/JoinPoolAndStakeAsset`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryJoinPoolAndStakeAsset\n         * @request GET:/sap200/shiaa3/shiaa3/JoinPoolAndStakeAsset/{id}\n         */\n        this.queryJoinPoolAndStakeAsset = (id, params = {}) => this.request({\n            path: `/sap200/shiaa3/shiaa3/JoinPoolAndStakeAsset/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryMembersAll\n         * @request GET:/sap200/shiaa3/shiaa3/Members\n         */\n        this.queryMembersAll = (query, params = {}) => this.request({\n            path: `/sap200/shiaa3/shiaa3/Members`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryMembers\n         * @request GET:/sap200/shiaa3/shiaa3/Members/{id}\n         */\n        this.queryMembers = (id, params = {}) => this.request({\n            path: `/sap200/shiaa3/shiaa3/Members/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool0TicketAll\n         * @request GET:/sap200/shiaa3/shiaa3/Pool0Ticket\n         */\n        this.queryPool0TicketAll = (query, params = {}) => this.request({\n            path: `/sap200/shiaa3/shiaa3/Pool0Ticket`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool0Ticket\n         * @request GET:/sap200/shiaa3/shiaa3/Pool0Ticket/{id}\n         */\n        this.queryPool0Ticket = (id, params = {}) => this.request({\n            path: `/sap200/shiaa3/shiaa3/Pool0Ticket/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool1TicketAll\n         * @request GET:/sap200/shiaa3/shiaa3/Pool1Ticket\n         */\n        this.queryPool1TicketAll = (query, params = {}) => this.request({\n            path: `/sap200/shiaa3/shiaa3/Pool1Ticket`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool1Ticket\n         * @request GET:/sap200/shiaa3/shiaa3/Pool1Ticket/{id}\n         */\n        this.queryPool1Ticket = (id, params = {}) => this.request({\n            path: `/sap200/shiaa3/shiaa3/Pool1Ticket/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool2TicketAll\n         * @request GET:/sap200/shiaa3/shiaa3/Pool2Ticket\n         */\n        this.queryPool2TicketAll = (query, params = {}) => this.request({\n            path: `/sap200/shiaa3/shiaa3/Pool2Ticket`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool2Ticket\n         * @request GET:/sap200/shiaa3/shiaa3/Pool2Ticket/{id}\n         */\n        this.queryPool2Ticket = (id, params = {}) => this.request({\n            path: `/sap200/shiaa3/shiaa3/Pool2Ticket/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool3TicketAll\n         * @request GET:/sap200/shiaa3/shiaa3/Pool3Ticket\n         */\n        this.queryPool3TicketAll = (query, params = {}) => this.request({\n            path: `/sap200/shiaa3/shiaa3/Pool3Ticket`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool3Ticket\n         * @request GET:/sap200/shiaa3/shiaa3/Pool3Ticket/{id}\n         */\n        this.queryPool3Ticket = (id, params = {}) => this.request({\n            path: `/sap200/shiaa3/shiaa3/Pool3Ticket/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool4TicketAll\n         * @request GET:/sap200/shiaa3/shiaa3/Pool4Ticket\n         */\n        this.queryPool4TicketAll = (query, params = {}) => this.request({\n            path: `/sap200/shiaa3/shiaa3/Pool4Ticket`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool4Ticket\n         * @request GET:/sap200/shiaa3/shiaa3/Pool4Ticket/{id}\n         */\n        this.queryPool4Ticket = (id, params = {}) => this.request({\n            path: `/sap200/shiaa3/shiaa3/Pool4Ticket/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryWinnersAll\n         * @request GET:/sap200/shiaa3/shiaa3/Winners\n         */\n        this.queryWinnersAll = (query, params = {}) => this.request({\n            path: `/sap200/shiaa3/shiaa3/Winners`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryWinners\n         * @summary this line is used by starport scaffolding # 2\n         * @request GET:/sap200/shiaa3/shiaa3/Winners/{id}\n         */\n        this.queryWinners = (id, params = {}) => this.request({\n            path: `/sap200/shiaa3/shiaa3/Winners/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreatePool4Ticket } from \"./types/shiaa3/tx\";\nimport { MsgDeletePool4Ticket } from \"./types/shiaa3/tx\";\nimport { MsgUpdateMembers } from \"./types/shiaa3/tx\";\nimport { MsgDeletePool0Ticket } from \"./types/shiaa3/tx\";\nimport { MsgCreateJoinPoolAndStakeAsset } from \"./types/shiaa3/tx\";\nimport { MsgCreatePool1Ticket } from \"./types/shiaa3/tx\";\nimport { MsgUpdatePool1Ticket } from \"./types/shiaa3/tx\";\nimport { MsgCreatePool0Ticket } from \"./types/shiaa3/tx\";\nimport { MsgUpdatePool4Ticket } from \"./types/shiaa3/tx\";\nimport { MsgUpdatePool3Ticket } from \"./types/shiaa3/tx\";\nimport { MsgDeletePool3Ticket } from \"./types/shiaa3/tx\";\nimport { MsgCreatePool2Ticket } from \"./types/shiaa3/tx\";\nimport { MsgDeleteWinners } from \"./types/shiaa3/tx\";\nimport { MsgUpdatePool0Ticket } from \"./types/shiaa3/tx\";\nimport { MsgUpdateJoinPoolAndStakeAsset } from \"./types/shiaa3/tx\";\nimport { MsgDeletePool1Ticket } from \"./types/shiaa3/tx\";\nimport { MsgCreatePool3Ticket } from \"./types/shiaa3/tx\";\nimport { MsgCreateMembers } from \"./types/shiaa3/tx\";\nimport { MsgDeleteJoinPoolAndStakeAsset } from \"./types/shiaa3/tx\";\nimport { MsgUpdateWinners } from \"./types/shiaa3/tx\";\nimport { MsgDeletePool2Ticket } from \"./types/shiaa3/tx\";\nimport { MsgDeleteMembers } from \"./types/shiaa3/tx\";\nimport { MsgCreateWinners } from \"./types/shiaa3/tx\";\nimport { MsgUpdatePool2Ticket } from \"./types/shiaa3/tx\";\nconst types = [\n    [\"/sap200.shiaa3.shiaa3.MsgCreatePool4Ticket\", MsgCreatePool4Ticket],\n    [\"/sap200.shiaa3.shiaa3.MsgDeletePool4Ticket\", MsgDeletePool4Ticket],\n    [\"/sap200.shiaa3.shiaa3.MsgUpdateMembers\", MsgUpdateMembers],\n    [\"/sap200.shiaa3.shiaa3.MsgDeletePool0Ticket\", MsgDeletePool0Ticket],\n    [\"/sap200.shiaa3.shiaa3.MsgCreateJoinPoolAndStakeAsset\", MsgCreateJoinPoolAndStakeAsset],\n    [\"/sap200.shiaa3.shiaa3.MsgCreatePool1Ticket\", MsgCreatePool1Ticket],\n    [\"/sap200.shiaa3.shiaa3.MsgUpdatePool1Ticket\", MsgUpdatePool1Ticket],\n    [\"/sap200.shiaa3.shiaa3.MsgCreatePool0Ticket\", MsgCreatePool0Ticket],\n    [\"/sap200.shiaa3.shiaa3.MsgUpdatePool4Ticket\", MsgUpdatePool4Ticket],\n    [\"/sap200.shiaa3.shiaa3.MsgUpdatePool3Ticket\", MsgUpdatePool3Ticket],\n    [\"/sap200.shiaa3.shiaa3.MsgDeletePool3Ticket\", MsgDeletePool3Ticket],\n    [\"/sap200.shiaa3.shiaa3.MsgCreatePool2Ticket\", MsgCreatePool2Ticket],\n    [\"/sap200.shiaa3.shiaa3.MsgDeleteWinners\", MsgDeleteWinners],\n    [\"/sap200.shiaa3.shiaa3.MsgUpdatePool0Ticket\", MsgUpdatePool0Ticket],\n    [\"/sap200.shiaa3.shiaa3.MsgUpdateJoinPoolAndStakeAsset\", MsgUpdateJoinPoolAndStakeAsset],\n    [\"/sap200.shiaa3.shiaa3.MsgDeletePool1Ticket\", MsgDeletePool1Ticket],\n    [\"/sap200.shiaa3.shiaa3.MsgCreatePool3Ticket\", MsgCreatePool3Ticket],\n    [\"/sap200.shiaa3.shiaa3.MsgCreateMembers\", MsgCreateMembers],\n    [\"/sap200.shiaa3.shiaa3.MsgDeleteJoinPoolAndStakeAsset\", MsgDeleteJoinPoolAndStakeAsset],\n    [\"/sap200.shiaa3.shiaa3.MsgUpdateWinners\", MsgUpdateWinners],\n    [\"/sap200.shiaa3.shiaa3.MsgDeletePool2Ticket\", MsgDeletePool2Ticket],\n    [\"/sap200.shiaa3.shiaa3.MsgDeleteMembers\", MsgDeleteMembers],\n    [\"/sap200.shiaa3.shiaa3.MsgCreateWinners\", MsgCreateWinners],\n    [\"/sap200.shiaa3.shiaa3.MsgUpdatePool2Ticket\", MsgUpdatePool2Ticket],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgCreatePool4Ticket: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgCreatePool4Ticket\", value: data }),\n        msgDeletePool4Ticket: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgDeletePool4Ticket\", value: data }),\n        msgUpdateMembers: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgUpdateMembers\", value: data }),\n        msgDeletePool0Ticket: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgDeletePool0Ticket\", value: data }),\n        msgCreateJoinPoolAndStakeAsset: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgCreateJoinPoolAndStakeAsset\", value: data }),\n        msgCreatePool1Ticket: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgCreatePool1Ticket\", value: data }),\n        msgUpdatePool1Ticket: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgUpdatePool1Ticket\", value: data }),\n        msgCreatePool0Ticket: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgCreatePool0Ticket\", value: data }),\n        msgUpdatePool4Ticket: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgUpdatePool4Ticket\", value: data }),\n        msgUpdatePool3Ticket: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgUpdatePool3Ticket\", value: data }),\n        msgDeletePool3Ticket: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgDeletePool3Ticket\", value: data }),\n        msgCreatePool2Ticket: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgCreatePool2Ticket\", value: data }),\n        msgDeleteWinners: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgDeleteWinners\", value: data }),\n        msgUpdatePool0Ticket: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgUpdatePool0Ticket\", value: data }),\n        msgUpdateJoinPoolAndStakeAsset: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgUpdateJoinPoolAndStakeAsset\", value: data }),\n        msgDeletePool1Ticket: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgDeletePool1Ticket\", value: data }),\n        msgCreatePool3Ticket: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgCreatePool3Ticket\", value: data }),\n        msgCreateMembers: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgCreateMembers\", value: data }),\n        msgDeleteJoinPoolAndStakeAsset: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgDeleteJoinPoolAndStakeAsset\", value: data }),\n        msgUpdateWinners: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgUpdateWinners\", value: data }),\n        msgDeletePool2Ticket: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgDeletePool2Ticket\", value: data }),\n        msgDeleteMembers: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgDeleteMembers\", value: data }),\n        msgCreateWinners: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgCreateWinners\", value: data }),\n        msgUpdatePool2Ticket: (data) => ({ typeUrl: \"/sap200.shiaa3.shiaa3.MsgUpdatePool2Ticket\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { JoinPoolAndStakeAsset } from \"./module/types/shiaa3/JoinPoolAndStakeAsset\";\nimport { Pool1Ticket } from \"./module/types/shiaa3/Pool1Ticket\";\nimport { Pool3Ticket } from \"./module/types/shiaa3/Pool3Ticket\";\nimport { Pool2Ticket } from \"./module/types/shiaa3/Pool2Ticket\";\nimport { Pool4Ticket } from \"./module/types/shiaa3/Pool4Ticket\";\nimport { Winners } from \"./module/types/shiaa3/Winners\";\nimport { Pool0Ticket } from \"./module/types/shiaa3/Pool0Ticket\";\nimport { Members } from \"./module/types/shiaa3/Members\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Winners: {},\n        WinnersAll: {},\n        Members: {},\n        MembersAll: {},\n        Pool4Ticket: {},\n        Pool4TicketAll: {},\n        Pool3Ticket: {},\n        Pool3TicketAll: {},\n        Pool2Ticket: {},\n        Pool2TicketAll: {},\n        Pool1Ticket: {},\n        Pool1TicketAll: {},\n        Pool0Ticket: {},\n        Pool0TicketAll: {},\n        JoinPoolAndStakeAsset: {},\n        JoinPoolAndStakeAssetAll: {},\n        _Structure: {\n            JoinPoolAndStakeAsset: getStructure(JoinPoolAndStakeAsset.fromPartial({})),\n            Pool1Ticket: getStructure(Pool1Ticket.fromPartial({})),\n            Pool3Ticket: getStructure(Pool3Ticket.fromPartial({})),\n            Pool2Ticket: getStructure(Pool2Ticket.fromPartial({})),\n            Pool4Ticket: getStructure(Pool4Ticket.fromPartial({})),\n            Winners: getStructure(Winners.fromPartial({})),\n            Pool0Ticket: getStructure(Pool0Ticket.fromPartial({})),\n            Members: getStructure(Members.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getWinners: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Winners[JSON.stringify(params)] ?? {};\n        },\n        getWinnersAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.WinnersAll[JSON.stringify(params)] ?? {};\n        },\n        getMembers: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Members[JSON.stringify(params)] ?? {};\n        },\n        getMembersAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.MembersAll[JSON.stringify(params)] ?? {};\n        },\n        getPool4Ticket: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool4Ticket[JSON.stringify(params)] ?? {};\n        },\n        getPool4TicketAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool4TicketAll[JSON.stringify(params)] ?? {};\n        },\n        getPool3Ticket: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool3Ticket[JSON.stringify(params)] ?? {};\n        },\n        getPool3TicketAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool3TicketAll[JSON.stringify(params)] ?? {};\n        },\n        getPool2Ticket: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool2Ticket[JSON.stringify(params)] ?? {};\n        },\n        getPool2TicketAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool2TicketAll[JSON.stringify(params)] ?? {};\n        },\n        getPool1Ticket: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool1Ticket[JSON.stringify(params)] ?? {};\n        },\n        getPool1TicketAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool1TicketAll[JSON.stringify(params)] ?? {};\n        },\n        getPool0Ticket: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool0Ticket[JSON.stringify(params)] ?? {};\n        },\n        getPool0TicketAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool0TicketAll[JSON.stringify(params)] ?? {};\n        },\n        getJoinPoolAndStakeAsset: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.JoinPoolAndStakeAsset[JSON.stringify(params)] ?? {};\n        },\n        getJoinPoolAndStakeAssetAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.JoinPoolAndStakeAssetAll[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryWinners({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryWinners(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryWinners(key.id)).data;\n                commit('QUERY', { query: 'Winners', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryWinners', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getWinners']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryWinners', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryWinnersAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryWinnersAll(query)).data : (await (await initQueryClient(rootGetters)).queryWinnersAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryWinnersAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'WinnersAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryWinnersAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getWinnersAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryWinnersAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryMembers({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryMembers(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryMembers(key.id)).data;\n                commit('QUERY', { query: 'Members', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryMembers', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getMembers']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryMembers', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryMembersAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryMembersAll(query)).data : (await (await initQueryClient(rootGetters)).queryMembersAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryMembersAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'MembersAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryMembersAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getMembersAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryMembersAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool4Ticket({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool4Ticket(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryPool4Ticket(key.id)).data;\n                commit('QUERY', { query: 'Pool4Ticket', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool4Ticket', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool4Ticket']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool4Ticket', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool4TicketAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool4TicketAll(query)).data : (await (await initQueryClient(rootGetters)).queryPool4TicketAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPool4TicketAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Pool4TicketAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool4TicketAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool4TicketAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool4TicketAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool3Ticket({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool3Ticket(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryPool3Ticket(key.id)).data;\n                commit('QUERY', { query: 'Pool3Ticket', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool3Ticket', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool3Ticket']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool3Ticket', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool3TicketAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool3TicketAll(query)).data : (await (await initQueryClient(rootGetters)).queryPool3TicketAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPool3TicketAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Pool3TicketAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool3TicketAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool3TicketAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool3TicketAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool2Ticket({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool2Ticket(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryPool2Ticket(key.id)).data;\n                commit('QUERY', { query: 'Pool2Ticket', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool2Ticket', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool2Ticket']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool2Ticket', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool2TicketAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool2TicketAll(query)).data : (await (await initQueryClient(rootGetters)).queryPool2TicketAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPool2TicketAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Pool2TicketAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool2TicketAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool2TicketAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool2TicketAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool1Ticket({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool1Ticket(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryPool1Ticket(key.id)).data;\n                commit('QUERY', { query: 'Pool1Ticket', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool1Ticket', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool1Ticket']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool1Ticket', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool1TicketAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool1TicketAll(query)).data : (await (await initQueryClient(rootGetters)).queryPool1TicketAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPool1TicketAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Pool1TicketAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool1TicketAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool1TicketAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool1TicketAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool0Ticket({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool0Ticket(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryPool0Ticket(key.id)).data;\n                commit('QUERY', { query: 'Pool0Ticket', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool0Ticket', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool0Ticket']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool0Ticket', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool0TicketAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool0TicketAll(query)).data : (await (await initQueryClient(rootGetters)).queryPool0TicketAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPool0TicketAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Pool0TicketAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool0TicketAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool0TicketAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool0TicketAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryJoinPoolAndStakeAsset({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryJoinPoolAndStakeAsset(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryJoinPoolAndStakeAsset(key.id)).data;\n                commit('QUERY', { query: 'JoinPoolAndStakeAsset', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryJoinPoolAndStakeAsset', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getJoinPoolAndStakeAsset']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryJoinPoolAndStakeAsset', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryJoinPoolAndStakeAssetAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryJoinPoolAndStakeAssetAll(query)).data : (await (await initQueryClient(rootGetters)).queryJoinPoolAndStakeAssetAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryJoinPoolAndStakeAssetAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'JoinPoolAndStakeAssetAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryJoinPoolAndStakeAssetAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getJoinPoolAndStakeAssetAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryJoinPoolAndStakeAssetAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgCreatePool4Ticket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePool4Ticket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePool4Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePool4Ticket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeletePool4Ticket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePool4Ticket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePool4Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePool4Ticket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateMembers({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateMembers(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateMembers:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateMembers:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeletePool0Ticket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePool0Ticket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePool0Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePool0Ticket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateJoinPoolAndStakeAsset({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateJoinPoolAndStakeAsset(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateJoinPoolAndStakeAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateJoinPoolAndStakeAsset:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreatePool1Ticket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePool1Ticket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePool1Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePool1Ticket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdatePool1Ticket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePool1Ticket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePool1Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePool1Ticket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreatePool0Ticket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePool0Ticket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePool0Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePool0Ticket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdatePool4Ticket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePool4Ticket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePool4Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePool4Ticket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdatePool3Ticket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePool3Ticket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePool3Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePool3Ticket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeletePool3Ticket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePool3Ticket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePool3Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePool3Ticket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreatePool2Ticket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePool2Ticket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePool2Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePool2Ticket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteWinners({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteWinners(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteWinners:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteWinners:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdatePool0Ticket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePool0Ticket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePool0Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePool0Ticket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateJoinPoolAndStakeAsset({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateJoinPoolAndStakeAsset(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateJoinPoolAndStakeAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateJoinPoolAndStakeAsset:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeletePool1Ticket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePool1Ticket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePool1Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePool1Ticket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreatePool3Ticket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePool3Ticket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePool3Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePool3Ticket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateMembers({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateMembers(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateMembers:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateMembers:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteJoinPoolAndStakeAsset({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteJoinPoolAndStakeAsset(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteJoinPoolAndStakeAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteJoinPoolAndStakeAsset:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateWinners({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateWinners(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateWinners:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateWinners:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeletePool2Ticket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePool2Ticket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePool2Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePool2Ticket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteMembers({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteMembers(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteMembers:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteMembers:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateWinners({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateWinners(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateWinners:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateWinners:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdatePool2Ticket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePool2Ticket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePool2Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePool2Ticket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgCreatePool4Ticket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePool4Ticket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePool4Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePool4Ticket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeletePool4Ticket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePool4Ticket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePool4Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePool4Ticket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateMembers({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateMembers(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateMembers:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateMembers:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeletePool0Ticket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePool0Ticket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePool0Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePool0Ticket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateJoinPoolAndStakeAsset({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateJoinPoolAndStakeAsset(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateJoinPoolAndStakeAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateJoinPoolAndStakeAsset:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreatePool1Ticket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePool1Ticket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePool1Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePool1Ticket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdatePool1Ticket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePool1Ticket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePool1Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePool1Ticket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreatePool0Ticket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePool0Ticket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePool0Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePool0Ticket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdatePool4Ticket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePool4Ticket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePool4Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePool4Ticket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdatePool3Ticket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePool3Ticket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePool3Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePool3Ticket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeletePool3Ticket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePool3Ticket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePool3Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePool3Ticket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreatePool2Ticket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePool2Ticket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePool2Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePool2Ticket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteWinners({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteWinners(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteWinners:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteWinners:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdatePool0Ticket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePool0Ticket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePool0Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePool0Ticket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateJoinPoolAndStakeAsset({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateJoinPoolAndStakeAsset(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateJoinPoolAndStakeAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateJoinPoolAndStakeAsset:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeletePool1Ticket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePool1Ticket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePool1Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePool1Ticket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreatePool3Ticket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePool3Ticket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePool3Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePool3Ticket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateMembers({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateMembers(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateMembers:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateMembers:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteJoinPoolAndStakeAsset({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteJoinPoolAndStakeAsset(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteJoinPoolAndStakeAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteJoinPoolAndStakeAsset:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateWinners({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateWinners(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateWinners:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateWinners:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeletePool2Ticket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePool2Ticket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePool2Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePool2Ticket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteMembers({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteMembers(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteMembers:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteMembers:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateWinners({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateWinners(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateWinners:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateWinners:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdatePool2Ticket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePool2Ticket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePool2Ticket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePool2Ticket:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title assets/SentAsset.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAssetAll\n         * @request GET:/sap200/shiaa3/assets/Asset\n         */\n        this.queryAssetAll = (query, params = {}) => this.request({\n            path: `/sap200/shiaa3/assets/Asset`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAsset\n         * @request GET:/sap200/shiaa3/assets/Asset/{id}\n         */\n        this.queryAsset = (id, params = {}) => this.request({\n            path: `/sap200/shiaa3/assets/Asset/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySentAssetAll\n         * @request GET:/sap200/shiaa3/assets/SentAsset\n         */\n        this.querySentAssetAll = (query, params = {}) => this.request({\n            path: `/sap200/shiaa3/assets/SentAsset`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySentAsset\n         * @request GET:/sap200/shiaa3/assets/SentAsset/{id}\n         */\n        this.querySentAsset = (id, params = {}) => this.request({\n            path: `/sap200/shiaa3/assets/SentAsset/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTimedOutAssetAll\n         * @request GET:/sap200/shiaa3/assets/TimedOutAsset\n         */\n        this.queryTimedOutAssetAll = (query, params = {}) => this.request({\n            path: `/sap200/shiaa3/assets/TimedOutAsset`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTimedOutAsset\n         * @summary this line is used by starport scaffolding # 2\n         * @request GET:/sap200/shiaa3/assets/TimedOutAsset/{id}\n         */\n        this.queryTimedOutAsset = (id, params = {}) => this.request({\n            path: `/sap200/shiaa3/assets/TimedOutAsset/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTransferAssetAll\n         * @request GET:/sap200/shiaa3/assets/TransferAsset\n         */\n        this.queryTransferAssetAll = (query, params = {}) => this.request({\n            path: `/sap200/shiaa3/assets/TransferAsset`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTransferAsset\n         * @request GET:/sap200/shiaa3/assets/TransferAsset/{id}\n         */\n        this.queryTransferAsset = (id, params = {}) => this.request({\n            path: `/sap200/shiaa3/assets/TransferAsset/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDeleteTransferAsset } from \"./types/assets/tx\";\nimport { MsgDeleteTimedOutAsset } from \"./types/assets/tx\";\nimport { MsgDeleteSentAsset } from \"./types/assets/tx\";\nimport { MsgUpdateTransferAsset } from \"./types/assets/tx\";\nimport { MsgCreateAsset } from \"./types/assets/tx\";\nimport { MsgUpdateAsset } from \"./types/assets/tx\";\nimport { MsgUpdateSentAsset } from \"./types/assets/tx\";\nimport { MsgDeleteAsset } from \"./types/assets/tx\";\nimport { MsgCreateSentAsset } from \"./types/assets/tx\";\nimport { MsgSendIbcAsset } from \"./types/assets/tx\";\nimport { MsgCreateTransferAsset } from \"./types/assets/tx\";\nimport { MsgCreateTimedOutAsset } from \"./types/assets/tx\";\nimport { MsgUpdateTimedOutAsset } from \"./types/assets/tx\";\nconst types = [\n    [\"/sap200.shiaa3.assets.MsgDeleteTransferAsset\", MsgDeleteTransferAsset],\n    [\"/sap200.shiaa3.assets.MsgDeleteTimedOutAsset\", MsgDeleteTimedOutAsset],\n    [\"/sap200.shiaa3.assets.MsgDeleteSentAsset\", MsgDeleteSentAsset],\n    [\"/sap200.shiaa3.assets.MsgUpdateTransferAsset\", MsgUpdateTransferAsset],\n    [\"/sap200.shiaa3.assets.MsgCreateAsset\", MsgCreateAsset],\n    [\"/sap200.shiaa3.assets.MsgUpdateAsset\", MsgUpdateAsset],\n    [\"/sap200.shiaa3.assets.MsgUpdateSentAsset\", MsgUpdateSentAsset],\n    [\"/sap200.shiaa3.assets.MsgDeleteAsset\", MsgDeleteAsset],\n    [\"/sap200.shiaa3.assets.MsgCreateSentAsset\", MsgCreateSentAsset],\n    [\"/sap200.shiaa3.assets.MsgSendIbcAsset\", MsgSendIbcAsset],\n    [\"/sap200.shiaa3.assets.MsgCreateTransferAsset\", MsgCreateTransferAsset],\n    [\"/sap200.shiaa3.assets.MsgCreateTimedOutAsset\", MsgCreateTimedOutAsset],\n    [\"/sap200.shiaa3.assets.MsgUpdateTimedOutAsset\", MsgUpdateTimedOutAsset],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgDeleteTransferAsset: (data) => ({ typeUrl: \"/sap200.shiaa3.assets.MsgDeleteTransferAsset\", value: data }),\n        msgDeleteTimedOutAsset: (data) => ({ typeUrl: \"/sap200.shiaa3.assets.MsgDeleteTimedOutAsset\", value: data }),\n        msgDeleteSentAsset: (data) => ({ typeUrl: \"/sap200.shiaa3.assets.MsgDeleteSentAsset\", value: data }),\n        msgUpdateTransferAsset: (data) => ({ typeUrl: \"/sap200.shiaa3.assets.MsgUpdateTransferAsset\", value: data }),\n        msgCreateAsset: (data) => ({ typeUrl: \"/sap200.shiaa3.assets.MsgCreateAsset\", value: data }),\n        msgUpdateAsset: (data) => ({ typeUrl: \"/sap200.shiaa3.assets.MsgUpdateAsset\", value: data }),\n        msgUpdateSentAsset: (data) => ({ typeUrl: \"/sap200.shiaa3.assets.MsgUpdateSentAsset\", value: data }),\n        msgDeleteAsset: (data) => ({ typeUrl: \"/sap200.shiaa3.assets.MsgDeleteAsset\", value: data }),\n        msgCreateSentAsset: (data) => ({ typeUrl: \"/sap200.shiaa3.assets.MsgCreateSentAsset\", value: data }),\n        msgSendIbcAsset: (data) => ({ typeUrl: \"/sap200.shiaa3.assets.MsgSendIbcAsset\", value: data }),\n        msgCreateTransferAsset: (data) => ({ typeUrl: \"/sap200.shiaa3.assets.MsgCreateTransferAsset\", value: data }),\n        msgCreateTimedOutAsset: (data) => ({ typeUrl: \"/sap200.shiaa3.assets.MsgCreateTimedOutAsset\", value: data }),\n        msgUpdateTimedOutAsset: (data) => ({ typeUrl: \"/sap200.shiaa3.assets.MsgUpdateTimedOutAsset\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"sap200.shiaa3.assets\";\nconst baseAssetsPacketData = {};\nexport const AssetsPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.noData !== undefined) {\n            NoData.encode(message.noData, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.IbcAssetPacket !== undefined) {\n            IbcAssetPacketData.encode(message.IbcAssetPacket, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAssetsPacketData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.noData = NoData.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.IbcAssetPacket = IbcAssetPacketData.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAssetsPacketData };\n        if (object.noData !== undefined && object.noData !== null) {\n            message.noData = NoData.fromJSON(object.noData);\n        }\n        else {\n            message.noData = undefined;\n        }\n        if (object.IbcAssetPacket !== undefined && object.IbcAssetPacket !== null) {\n            message.IbcAssetPacket = IbcAssetPacketData.fromJSON(object.IbcAssetPacket);\n        }\n        else {\n            message.IbcAssetPacket = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.noData !== undefined &&\n            (obj.noData = message.noData ? NoData.toJSON(message.noData) : undefined);\n        message.IbcAssetPacket !== undefined &&\n            (obj.IbcAssetPacket = message.IbcAssetPacket\n                ? IbcAssetPacketData.toJSON(message.IbcAssetPacket)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAssetsPacketData };\n        if (object.noData !== undefined && object.noData !== null) {\n            message.noData = NoData.fromPartial(object.noData);\n        }\n        else {\n            message.noData = undefined;\n        }\n        if (object.IbcAssetPacket !== undefined && object.IbcAssetPacket !== null) {\n            message.IbcAssetPacket = IbcAssetPacketData.fromPartial(object.IbcAssetPacket);\n        }\n        else {\n            message.IbcAssetPacket = undefined;\n        }\n        return message;\n    },\n};\nconst baseNoData = {};\nexport const NoData = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNoData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseNoData };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseNoData };\n        return message;\n    },\n};\nconst baseIbcAssetPacketData = {\n    AssetSerial: \"\",\n    Receiver: \"\",\n    Creator: \"\",\n};\nexport const IbcAssetPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.AssetSerial !== \"\") {\n            writer.uint32(10).string(message.AssetSerial);\n        }\n        if (message.Receiver !== \"\") {\n            writer.uint32(18).string(message.Receiver);\n        }\n        if (message.Creator !== \"\") {\n            writer.uint32(26).string(message.Creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIbcAssetPacketData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.AssetSerial = reader.string();\n                    break;\n                case 2:\n                    message.Receiver = reader.string();\n                    break;\n                case 3:\n                    message.Creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIbcAssetPacketData };\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = String(object.AssetSerial);\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = String(object.Receiver);\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        if (object.Creator !== undefined && object.Creator !== null) {\n            message.Creator = String(object.Creator);\n        }\n        else {\n            message.Creator = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.AssetSerial !== undefined &&\n            (obj.AssetSerial = message.AssetSerial);\n        message.Receiver !== undefined && (obj.Receiver = message.Receiver);\n        message.Creator !== undefined && (obj.Creator = message.Creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIbcAssetPacketData };\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = object.AssetSerial;\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = object.Receiver;\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        if (object.Creator !== undefined && object.Creator !== null) {\n            message.Creator = object.Creator;\n        }\n        else {\n            message.Creator = \"\";\n        }\n        return message;\n    },\n};\nconst baseIbcAssetPacketAck = { AssetId: \"\" };\nexport const IbcAssetPacketAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.AssetId !== \"\") {\n            writer.uint32(10).string(message.AssetId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIbcAssetPacketAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.AssetId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIbcAssetPacketAck };\n        if (object.AssetId !== undefined && object.AssetId !== null) {\n            message.AssetId = String(object.AssetId);\n        }\n        else {\n            message.AssetId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.AssetId !== undefined && (obj.AssetId = message.AssetId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIbcAssetPacketAck };\n        if (object.AssetId !== undefined && object.AssetId !== null) {\n            message.AssetId = object.AssetId;\n        }\n        else {\n            message.AssetId = \"\";\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SentAsset } from \"./module/types/assets/SentAsset\";\nimport { TransferAsset } from \"./module/types/assets/TransferAsset\";\nimport { Asset } from \"./module/types/assets/Asset\";\nimport { AssetsPacketData } from \"./module/types/assets/packet\";\nimport { NoData } from \"./module/types/assets/packet\";\nimport { IbcAssetPacketData } from \"./module/types/assets/packet\";\nimport { IbcAssetPacketAck } from \"./module/types/assets/packet\";\nimport { TimedOutAsset } from \"./module/types/assets/TimedOutAsset\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        TimedOutAsset: {},\n        TimedOutAssetAll: {},\n        SentAsset: {},\n        SentAssetAll: {},\n        TransferAsset: {},\n        TransferAssetAll: {},\n        Asset: {},\n        AssetAll: {},\n        _Structure: {\n            SentAsset: getStructure(SentAsset.fromPartial({})),\n            TransferAsset: getStructure(TransferAsset.fromPartial({})),\n            Asset: getStructure(Asset.fromPartial({})),\n            AssetsPacketData: getStructure(AssetsPacketData.fromPartial({})),\n            NoData: getStructure(NoData.fromPartial({})),\n            IbcAssetPacketData: getStructure(IbcAssetPacketData.fromPartial({})),\n            IbcAssetPacketAck: getStructure(IbcAssetPacketAck.fromPartial({})),\n            TimedOutAsset: getStructure(TimedOutAsset.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTimedOutAsset: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TimedOutAsset[JSON.stringify(params)] ?? {};\n        },\n        getTimedOutAssetAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TimedOutAssetAll[JSON.stringify(params)] ?? {};\n        },\n        getSentAsset: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SentAsset[JSON.stringify(params)] ?? {};\n        },\n        getSentAssetAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SentAssetAll[JSON.stringify(params)] ?? {};\n        },\n        getTransferAsset: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TransferAsset[JSON.stringify(params)] ?? {};\n        },\n        getTransferAssetAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TransferAssetAll[JSON.stringify(params)] ?? {};\n        },\n        getAsset: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Asset[JSON.stringify(params)] ?? {};\n        },\n        getAssetAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AssetAll[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryTimedOutAsset({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTimedOutAsset(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryTimedOutAsset(key.id)).data;\n                commit('QUERY', { query: 'TimedOutAsset', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTimedOutAsset', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTimedOutAsset']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTimedOutAsset', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTimedOutAssetAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTimedOutAssetAll(query)).data : (await (await initQueryClient(rootGetters)).queryTimedOutAssetAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryTimedOutAssetAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'TimedOutAssetAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTimedOutAssetAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTimedOutAssetAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTimedOutAssetAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySentAsset({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySentAsset(key.id, query)).data : (await (await initQueryClient(rootGetters)).querySentAsset(key.id)).data;\n                commit('QUERY', { query: 'SentAsset', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySentAsset', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSentAsset']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySentAsset', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySentAssetAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySentAssetAll(query)).data : (await (await initQueryClient(rootGetters)).querySentAssetAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).querySentAssetAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'SentAssetAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySentAssetAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSentAssetAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySentAssetAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTransferAsset({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTransferAsset(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryTransferAsset(key.id)).data;\n                commit('QUERY', { query: 'TransferAsset', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTransferAsset', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTransferAsset']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTransferAsset', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTransferAssetAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTransferAssetAll(query)).data : (await (await initQueryClient(rootGetters)).queryTransferAssetAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryTransferAssetAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'TransferAssetAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTransferAssetAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTransferAssetAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTransferAssetAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAsset({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAsset(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryAsset(key.id)).data;\n                commit('QUERY', { query: 'Asset', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAsset', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAsset']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAsset', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAssetAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAssetAll(query)).data : (await (await initQueryClient(rootGetters)).queryAssetAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAssetAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AssetAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAssetAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAssetAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAssetAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgDeleteTransferAsset({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteTransferAsset(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteTransferAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteTransferAsset:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteTimedOutAsset({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteTimedOutAsset(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteTimedOutAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteTimedOutAsset:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteSentAsset({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteSentAsset(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteSentAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteSentAsset:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateTransferAsset({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateTransferAsset(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateTransferAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateTransferAsset:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateAsset({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateAsset(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateAsset:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateAsset({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateAsset(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateAsset:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateSentAsset({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateSentAsset(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateSentAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateSentAsset:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteAsset({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteAsset(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteAsset:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateSentAsset({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateSentAsset(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateSentAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateSentAsset:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSendIbcAsset({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSendIbcAsset(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSendIbcAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSendIbcAsset:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateTransferAsset({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateTransferAsset(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateTransferAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateTransferAsset:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateTimedOutAsset({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateTimedOutAsset(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateTimedOutAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateTimedOutAsset:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateTimedOutAsset({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateTimedOutAsset(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateTimedOutAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateTimedOutAsset:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgDeleteTransferAsset({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteTransferAsset(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteTransferAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteTransferAsset:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteTimedOutAsset({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteTimedOutAsset(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteTimedOutAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteTimedOutAsset:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteSentAsset({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteSentAsset(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteSentAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteSentAsset:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateTransferAsset({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateTransferAsset(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateTransferAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateTransferAsset:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateAsset({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateAsset(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateAsset:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateAsset({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateAsset(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateAsset:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateSentAsset({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateSentAsset(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateSentAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateSentAsset:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteAsset({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteAsset(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteAsset:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateSentAsset({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateSentAsset(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateSentAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateSentAsset:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSendIbcAsset({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSendIbcAsset(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSendIbcAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSendIbcAsset:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateTransferAsset({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateTransferAsset(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateTransferAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateTransferAsset:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateTimedOutAsset({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateTimedOutAsset(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateTimedOutAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateTimedOutAsset:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateTimedOutAsset({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateTimedOutAsset(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateTimedOutAsset:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateTimedOutAsset:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash, query)).data : (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllEvidence(query)).data : (await (await initQueryClient(rootGetters)).queryAllEvidence()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/slashing.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseMsgUnjail = { validatorAddr: \"\" };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.slashing.v1beta1.Msg\", \"Unjail\", data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address, query)).data : (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfos(query)).data : (await (await initQueryClient(rootGetters)).querySigningInfos()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannels(query)).data : (await (await initQueryClient(rootGetters)).queryChannels()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientState(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientStates(query)).data : (await (await initQueryClient(rootGetters)).queryClientStates()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientParams(query)).data : (await (await initQueryClient(rootGetters)).queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/vesting.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/staking.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport { Description, CommissionRates, } from \"../../../cosmos/staking/v1beta1/staking\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseMsgCreateValidator = {\n    minSelfDelegation: \"\",\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgEditValidator = {\n    validatorAddress: \"\",\n    commissionRate: \"\",\n    minSelfDelegation: \"\",\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== \"\") {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDelegate = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegate = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"CreateValidator\", data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"EditValidator\", data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Delegate\", data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"BeginRedelegate\", data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Undelegate\", data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidators(query)).data : (await (await initQueryClient(rootGetters)).queryValidators()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height, query)).data : (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool(query)).data : (await (await initQueryClient(rootGetters)).queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash, query)).data : (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTraces(query)).data : (await (await initQueryClient(rootGetters)).queryDenomTraces()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.crisis.v1beta1\";\nconst baseMsgVerifyInvariant = {\n    sender: \"\",\n    invariantModuleName: \"\",\n    invariantRoute: \"\",\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== \"\") {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== \"\") {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.crisis.v1beta1.Msg\", \"VerifyInvariant\", data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: \"\" };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgFundCommunityPool = { depositor: \"\" };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"SetWithdrawAddress\", data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawDelegatorReward\", data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawValidatorCommission\", data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"FundCommunityPool\", data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryCommunityPool(query)).data : (await (await initQueryClient(rootGetters)).queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnections(query)).data : (await (await initQueryClient(rootGetters)).queryConnections()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/gov.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposals(query)).data : (await (await initQueryClient(rootGetters)).queryProposals()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter, query)).data : (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(key.params_type, query)).data : (await (await initQueryClient(rootGetters)).queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor, query)).data : (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseSendEnabled = { denom: \"\", enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n};\nconst baseInput = { address: \"\" };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseOutput = { address: \"\" };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDenomUnit = { denom: \"\", exponent: 0, aliases: \"\" };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMetadata = { description: \"\", base: \"\", display: \"\" };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== \"\") {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== \"\") {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== \"\") {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Input, Output } from \"../../../cosmos/bank/v1beta1/bank\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseMsgSend = { fromAddress: \"\", toAddress: \"\" };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"Send\", data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"MultiSend\", data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from \"../../../cosmos/bank/v1beta1/bank\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBalance = { address: \"\" };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, query)).data : (await (await initQueryClient(rootGetters)).queryAllBalances(key.address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTotalSupply(query)).data : (await (await initQueryClient(rootGetters)).queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom, query)).data : (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomsMetadata(query)).data : (await (await initQueryClient(rootGetters)).queryDenomsMetadata()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport Sap200Shiaa3Sap200Shiaa3Shiaa3 from './sap200/shiaa3/sap200.shiaa3.shiaa3';\nimport Sap200Shiaa3Sap200Shiaa3Assets from './sap200/shiaa3/sap200.shiaa3.assets';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nexport default {\n    Sap200Shiaa3Sap200Shiaa3Shiaa3: load(Sap200Shiaa3Sap200Shiaa3Shiaa3, 'sap200.shiaa3.shiaa3'),\n    Sap200Shiaa3Sap200Shiaa3Assets: load(Sap200Shiaa3Sap200Shiaa3Assets, 'sap200.shiaa3.assets'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        const fullnsLevels = fullns.split('/');\n        for (let i = 1; i < fullnsLevels.length; i++) {\n            let ns = fullnsLevels.slice(0, i);\n            if (!store.hasModule(ns)) {\n                store.registerModule(ns, { namespaced: true });\n            }\n        }\n        if (store.hasModule(fullnsLevels)) {\n            throw new Error('Duplicate module name detected: ' + fullnsLevels.pop());\n        }\n        else {\n            store.registerModule(fullnsLevels, mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, starport, blocks, wallet,transfers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tstarport(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {},\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=e30ba36a\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Winners\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Members\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool4Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool3Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool2Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool1Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool0Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"JoinPoolAndStakeAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"TimedOutAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"SentAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"TransferAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"Asset\"  />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n\n","import { render } from \"./Types.vue?vue&type=template&id=e15f22c6\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<!-- <SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"Asset\"  /> -->\n        <SpCard class=\"assets\" @click.native=\"buy('Camel')\"><p class=\"price\">PRICE: {{ prices[0] }} Tokens</p><img src=\"https://image.freepik.com/free-vector/cartoon-camel-isolated-white_29190-5397.jpg\" alt=\"camel\"/><p>CAMEL</p></SpCard>\n        <SpCard class=\"assets\" @click.native=\"buy('House')\"><p class=\"price\">PRICE: {{ prices[1] }} Tokens</p><img src=\"https://thumbs.dreamstime.com/b/modern-villa-residence-expensive-mansion-palm-trees-luxury-cottage-house-exterior-blue-swimming-pool-cartoon-exotic-country-154443513.jpg\"/><p>HOUSE</p></SpCard>\n        <SpCard class=\"assets\" @click.native=\"buy('Fossil Necklace')\"><p class=\"price\">PRICE: {{ prices[2] }} Tokens</p><img src=\"https://i.ebayimg.com/images/g/-UYAAOSw8i9aV-al/s-l400.jpg\" alt=\"necklace\"/><p>FOSSIL NECKLACE</p> </SpCard>\n        <SpCard class=\"assets\" @click.native=\"buy('Ceramic Plate')\"><p class=\"price\">PRICE: {{ prices[3] }} Tokens</p><img src=\"https://sep.yimg.com/ay/yhst-36248216921031/white-fluted-plain-dinner-plate-19.png\" alt=\"ceramic_plate\"/><p>CERAMIC PLATE</p></SpCard>\n        <SpCard class=\"assets\" @click.native=\"buy('Teracotta Lamp')\"><p class=\"price\">PRICE: {{ prices[4] }} Tokens</p><img src=\"https://www.kathykuohome.com/Content/config/product/primary/large/product_64420.jpg\" alt=\"teracotta_lamp\"/><p>TERACOTTA LAMP</p></SpCard>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n    name: 'BuyAsset',\n\n    data() {\n        return {\n            prices: [50, 200, 100, 10, 5],\n            types: {\"Camel\": 0, \"House\": 1, \"Fossil Necklace\": 2, \"Ceramic Plate\": 3, \"Teracotta Lamp\": 4},\n            modulePath: \"sap200.shiaa3.assets\",\n            moduleType: \"Asset\",\n\n        }\n    },\n\n    computed: {\n        address() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n        },\n        \n        selectedAccount() {\n\t\t\tif (this._depsLoaded) {\n\t\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n        },\n        \n    },\n    \n    methods: {\n        async buy(value) {\n                \n                if (this.address != \"\") {\n                var r = confirm(\"You are about to purchase \" + value + \". Press ok to confirm !\");\n                console.log(r)\n                if (r == true) {\n                    console.log(\"confirmed...\")\n                    let assetType = this.types[value]\n                    console.log(\"Asset Type: \", assetType)\n                    // Submit the transaction\n                    let payload =  {\n                        AssetType: assetType, \n                        creator: this.selectedAccount, \n                        id: 0,\n                        Name: \"\",\n                        Tokens: 0, \n                        Owner: this.selectedAccount,\n                        Serial: \"\",\n                        }\n                    console.log(payload)\n                    // TODO\n                // Write code to dispatch thats all\n                let result = await this.$store.dispatch(\n                    this.modulePath + '/sendMsgCreate' + this.moduleType,\n                     {value: payload, fee: []},\n                )\n\n                console.log(result)\n                alert(result.rawLog)\n                \n                this.$emit('created')\n\n                } else {\n                    alert(\"cancelled\")\n                    console.log(\"cancelling...\")\n                    return\n                }\n            \n            } else {\n                alert(\"Please Log in with your wallet.\")\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n.assets {\n    background-color: white;\n    margin-left: 10px;\n    margin-right: 10px;\n    margin-bottom: 10px;\n    display: inline-block;\n    border-radius: 20px;\n}\np {\n    text-align: center;\n    color: fuchsia;\n}\n\n.price {\n    color: blue;\n}\n\nimg {\n    width: 300px;\n    height: 300px;\n}\n\n</style>\n\n","import { render } from \"./BuyAsset.vue?vue&type=template&id=06d88689&scoped=true\"\nimport script from \"./BuyAsset.vue?vue&type=script&lang=js\"\nexport * from \"./BuyAsset.vue?vue&type=script&lang=js\"\n\nimport \"./BuyAsset.vue?vue&type=style&index=0&id=06d88689&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-06d88689\"\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<!-- <SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Winners\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Members\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool4Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool3Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool2Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool1Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool0Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"JoinPoolAndStakeAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"TimedOutAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"SentAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"TransferAsset\"  /> -->\n\t\t<!-- <SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"Asset\"  /> -->\n        <!-- <p>{{ getAllAssets() }}</p> -->\n\n            <OwnerAssetList\n\t\t\t\t\t:modulePath=modulePath\n\t\t\t\t\t:moduleType=moduleType\n\t\t\t\t\tclass=\"sp-type__list\"\n                    editOpen=false\n                    deleteOpen=true\n\t\t\t\t/>\n\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport OwnerAssetList from \"../components/OwnerAssetList.vue\"\nexport default {\n    name: 'ListAsset', \n\n    components: {\n        OwnerAssetList\n    },\n\n    data() {\n        return {\n            modulePath: \"sap200.shiaa3.assets\",\n            moduleType: \"Asset\",\n            dataList: [],\n            selectedValue: \"\"\n        };\n    },\n\n    computed: {\n        \tselectedAccount() {\n\t\t\tif (this._depsLoaded) {\n\t\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n        }, \n\n        typeItems() {\n\t\t\tif (this._depsLoaded) {\n\t\t\t\tlet items = this.$store.getters[\n\t\t\t\t\tthis.modulePath + '/get' + this.moduleType + 'All'\n\t\t\t\t]({ params: {} })\n\t\t\t\treturn items.Asset\n\t\t\t} else {\n\t\t\t\treturn []\n\t\t\t}\n\t\t},\n\n        returnAllAsset() {\n            return this.$store.getters[this.modulePath + '/get' + this.moduleType + 'All']({params:{}})\n        }\n        \n    },\n    \n    methods: {\n        async getAllAsset() {\n            try {\n                let res =  await this.$store.dispatch(this.modulePath + '/Query' + this.moduleType + 'All', { options: {} } );\n                let new_res = res.Asset.filter(v => v.Owner == this.selectedAccount)\n                console.log(new_res)\n               this.dataList = new_res\n            } catch (e) {\n                console.log(e)\n                this.dataList = []\n            }\n        }, \n\n    }\n}\n</script>\n\n<style scoped>\n\n.list-items {\n    text-align: center; \n    color: fuchsia; \n    background-color: rgb(25, 216, 152);\n    font-size: 24px; \n    width: 600px;\n    padding: 5px;\n    background-color: white;\n}\n\n.selected {\n    color: black;\n}\n\n\n\n</style>\n\n","<template>\n\t<div class=\"sp-type-list\" v-if=\"depsLoaded\">\n\t\t<div class=\"sp-type-list__main sp-box\">\n\t\t\t<div class=\"sp-type-list__header sp-box-header\">\n\t\t\t\t{{ moduleType.toUpperCase() + 'S' }}\n\t\t\t</div>\n\t\t\t<div class=\"SpTypeListEmpty\" v-if=\"!typeItems || typeItems.length == 0\">\n\t\t\t\t<em>No items available</em>\n\t\t\t</div>\n\t\t\t<template v-else>\n\t\t\t\t<div v-for=\"(item, index) in typeItems\" v-bind:key=\"item.id\">\n\t\t\t\t\t<div class=\"sp-dashed-line\" v-if=\"index != 0\" />\n\t\t\t\t\t<div class=\"sp-type-list__item\">\n\t\t\t\t\t\t<div class=\"sp-type-list__item__icon\">\n\t\t\t\t\t\t\t<div class=\"sp-icon sp-icon-Docs\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"sp-type-list__item__details\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\"sp-type-list__item__details__field\"\n\t\t\t\t\t\t\t\tv-for=\"field in fieldList\"\n\t\t\t\t\t\t\t\tv-bind:key=\"field\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<strong> {{ capitalize(field.name) }} </strong><br />\n\t\t\t\t\t\t\t\t{{ item[field.name] }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\"sp-type-list__item__more\"\n\t\t\t\t\t\t\t:class=\"{ 'sp-type-list__item__more__open': moreOpen == index }\"\n\t\t\t\t\t\t\tv-if=\"address\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"sp-icon sp-icon-More\" v-on:click=\"moreOpen = index\" />\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\"sp-type-list__item__options sp-box\"\n\t\t\t\t\t\t\t\tv-if=\"moreOpen == index\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<!-- <div\n\t\t\t\t\t\t\t\t\tclass=\"sp-type-list__item__options__edit\"\n\t\t\t\t\t\t\t\t\tv-on:click=\";(editID = item['id']), (editOpen = false)\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tDo\n\t\t\t\t\t\t\t\t</div> -->\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclass=\"sp-type-list__item__options__delete\" id=\"bbutton\"\n\t\t\t\t\t\t\t\t\tv-on:click=\";(deleteID = item['id']), (deleteOpen = true)\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tBurn\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</div>\n\t\t<div class=\"sp-type-list__overlay\" v-if=\"deleteOpen\"/>\n\t\t<!-- <div class=\"sp-type-list__edit__form\" v-if=\"editID > 0\">\n\t\t\t<SpTypeForm\n\t\t\t\t:modulePath=\"modulePath\"\n\t\t\t\t:moduleType=\"moduleType\"\n\t\t\t\t:id=\"editID\"\n\t\t\t\taction=\"update\"\n\t\t\t\tv-on:cancel-update=\";(editID = -1), (editOpen = false)\"\n\t\t\t\tv-on:updated=\";(editID = -1), (editOpen = false)\"\n\t\t\t/>\n\t\t</div> -->\n\t\t<div class=\"sp-type-list__delete__form\" v-if=\"deleteID > 0\">\n\t\t\t<SpTypeForm\n\t\t\t\t:modulePath=\"modulePath\"\n\t\t\t\t:moduleType=\"moduleType\"\n\t\t\t\t:id=\"deleteID\"\n\t\t\t\taction=\"delete\"\n\t\t\t\tv-on:cancel-delete=\";(deleteID = -1), (deleteOpen = false)\"\n\t\t\t\tv-on:deleted=\";(deleteID = -1), (deleteOpen = false)\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n</template>\n<script>\nexport default {\n\tname: 'SpTypeList',\n\tprops: {\n\t\tmoduleType: {\n\t\t\ttype: String,\n\t\t\tdefault: ''\n\t\t},\n\t\tmodulePath: {\n\t\t\ttype: String,\n\t\t\tdefault: ''\n\t\t}\n\t},\n\tdata: function () {\n\t\treturn {\n\t\t\tfieldList: [],\n\t\t\tmoreOpen: -1,\n\t\t\teditOpen: false,\n\t\t\tdeleteOpen: false,\n\t\t\teditID: 0,\n\t\t\tdeleteID: 0\n\t\t}\n\t},\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t},\n\t\ttypeItems() {\n\t\t\tif (this._depsLoaded) {\n\t\t\t\tlet items = this.$store.getters[\n\t\t\t\t\tthis.modulePath + '/get' + this.moduleType + 'All'\n                ]({ params: {} })\n                \n                let res = items.Asset.filter(v => v.Owner == this.address)\n\t\t\t\treturn res \n\t\t\t} else {\n\t\t\t\treturn []\n\t\t\t}\n\t\t},\n\t\tdepsLoaded() {\n\t\t\treturn this._depsLoaded\n\t\t}\n\t},\n\tbeforeCreate() {\n\t\tconst module = [...this.modulePath.split('/')]\n\t\tfor (let i = 1; i <= module.length; i++) {\n\t\t\tlet submod = module.slice(0, i)\n\t\t\tif (!this.$store.hasModule(submod)) {\n\t\t\t\tconsole.log('Module ' + this.modulePath + ' has not been registered!')\n\t\t\t\tthis._depsLoaded = false\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t},\n\tasync created() {\n\t\tif (this._depsLoaded) {\n\t\t\tthis.fieldList = this.$store.getters[\n\t\t\t\tthis.modulePath + '/getTypeStructure'\n\t\t\t](this.moduleType)\n\t\t\tawait this.$store.dispatch(\n\t\t\t\tthis.modulePath + '/Query' + this.moduleType + 'All',\n\t\t\t\t{ options: { subscribe: true } }\n\t\t\t)\n\t\t}\n\t},\n\tmethods: {\n\t\tcapitalize(str) {\n\t\t\treturn str.charAt(0).toUpperCase() + str.slice(1)\n\t\t}\n\t}\n}\n</script>\n\n<style scoped>\n\t#bbutton {\n\t\tcolor:red;\n\t}\n</style>","import { render } from \"./OwnerAssetList.vue?vue&type=template&id=4da59ade&scoped=true\"\nimport script from \"./OwnerAssetList.vue?vue&type=script&lang=js\"\nexport * from \"./OwnerAssetList.vue?vue&type=script&lang=js\"\n\nimport \"./OwnerAssetList.vue?vue&type=style&index=0&id=4da59ade&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-4da59ade\"\n\nexport default script","import { render } from \"./ListAsset.vue?vue&type=template&id=36da2544&scoped=true\"\nimport script from \"./ListAsset.vue?vue&type=script&lang=js\"\nexport * from \"./ListAsset.vue?vue&type=script&lang=js\"\n\nimport \"./ListAsset.vue?vue&type=style&index=0&id=36da2544&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-36da2544\"\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \n\t\t<!-- <SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"TransferAsset\"  /> -->\n\t\t<!-- <SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"Asset\"  /> -->\n\t\t<div>\n\t\t\t<SpH3> In Chain Transfer Of Asset</SpH3> <br><br>\n\t\t\t\n\t\t\t<input type=\"text\" id=\"x1\" class=\"sp-input\" placeholder=\"Asset Serial\" v-on:keyup=\"updateSerial\" required/>\n\t\t\t<input type=\"text\" id=\"x2\" class=\"sp-input\" placeholder=\"Receiver Address\" v-on:keyup=\"updateReceiver\" required/><br>\n\t\t\t<SpButton @click.native=\"sendAsset\"> Send Asset </SpButton>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<SpH3> IBC Transfer Of Asset </SpH3>\n\t\t\t<input type=\"text\" id=\"x3\" class=\"sp-input\" placeholder=\"Port ID\" v-on:keyup=\"updatePort\" required/>\n\t\t\t<input type=\"text\" id=\"x4\" class=\"sp-input\" placeholder=\"Channel ID\" v-on:keyup=\"updateChannel\" required/><br>\n\t\t\t<input type=\"text\" id=\"x5\" class=\"sp-input\" placeholder=\"Asset Serial\" v-on:keyup=\"updateIBCSerial\" required/>\n\t\t\t<input type=\"text\" id=\"x6\" class=\"sp-input\" placeholder=\"Receiver Address\" v-on:keyup=\"updateIBCReceiver\" required/><br>\n\t\t\t<SpButton @click.native=\"sendAssetIBC\"> Send Asset </SpButton>\n\t\t</div>\n\n\n\n\n\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'SendAsset',\n\tdata() {\n\t\treturn {\n\t\t\tserial: \"\",\n\t\t\treceiver: \"\",\n\t\t\tmodulePath: \"sap200.shiaa3.assets\",\n\t\t\tmoduleType: \"TransferAsset\",\n\t\t\tibcserial: \"\",\n\t\t\tibcreceiver: \"\",\n\t\t\tibcport: \"\",\n\t\t\tibcchannel: \"\",\n\t\t\tibctype: \"SendIbcAsset\"\n\t\t}\n\t},\n\n\tcomputed: {\n\t\t    selectedAccount() {\n\t\t\tif (this._depsLoaded) {\n\t\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n        },\n\t},\n\n\tmethods: {\n\t\tupdateSerial(event) {\n\t\t\tthis.serial = event.target.value\n\t\t\tconsole.log(this.serial)\n\t\t}, \n\n\t\tupdateReceiver(event) {\n\t\t\tthis.receiver = event.target.value\n\t\t\tconsole.log(this.receiver)\n\t\t}, \n\n\t\tupdatePort(event) {\n\t\t\tthis.ibcport = event.target.value\n\t\t\tconsole.log(this.ibcport)\n\t\t}, \n\n\t\tupdateChannel(event) {\n\t\t\tthis.ibcchannel = event.target.value\n\t\t\tconsole.log(this.ibcchannel)\n\t\t}, \n\n\t\tupdateIBCReceiver(event) {\n\t\t\tthis.ibcreceiver = event.target.value\n\t\t\tconsole.log(this.ibcreceiver)\n\t\t}, \n\n\t\tupdateIBCSerial(event) {\n\t\t\tthis.ibcserial = event.target.value\n\t\t\tconsole.log(this.ibcserial)\n\t\t}, \n\n\t\tasync sendAsset(event) {\n\t\t\tif (this.selectedAccount != \"\") {\n\t\t\t\tif (this.serial !== \"\" && this.receiver !== \"\") {\n\t\t\t\t\tvar r = confirm(\"Confirm your IBC Transaction\\n\" + \"\\nAsset Serial: \" + this.serial + \"\\nReceiver: \" + this.receiver);\n\t\t\t\t\tconsole.log(r)\n\t\t\t\t\tif(r == true) {\n\t\t\t\t\t\tconsole.log(\"Sending...\")\n\t\t\t\t\t\tlet payload = {AssetSerial: this.serial.trim(), Receiver: this.receiver.trim(), creator: this.selectedAccount, id:0}\n\t\t\t\t\t\tconsole.log(payload)\n\n\t\t\t\t\t\t// Dispatch\n\t\t\t\t\t\tlet result = await this.$store.dispatch(\n\t\t\t\t\t\tthis.modulePath + '/sendMsgCreate' + this.moduleType,\n\t\t\t\t\t\t{value:payload, fee: []},\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\tconsole.log(result)\n\n\t\t\t\t\t\talert(result.rawLog)\n\n\t\t\t\t\t\tthis.serial = \"\"\n\t\t\t\t\t\tthis.receiver = \"\" \n\t\t\t\t\t\n\t\t\t\t\t\tthis.$emit('Transferred')\n\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Cancelled\")\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\talert(\"None of the fields can be empty\")\n\t\t\t\t}\n\t\t\t}\n\t\t}, \n\n\t\tasync sendAssetIBC(event) {\n\t\t\tif (this.selectedAccount != \"\") { \n\t\t\t\tconsole.log(\"IBC tx fired\")\n\t\t\t\tvar r = confirm(\"Confirm your Transaction\\nChannel ID: \" + this.ibcchannel + \"\\nPort ID: \" + this.ibcport + \"\\nAsset Serial: \" + this.ibcserial + \"\\nReceiver: \" + this.ibcreceiver);\n\t\t\t\tconsole.log(r)\n\t\t\t\tif(r == true) {\n\n\t\t\t\t\t\tconsole.log(\"Ibc sending...\")\n\n\t\t\t\t\t\t// TODO\n\t\t\t\t\t\tlet payload = {\n\t\t\t\t\t\t\tport: this.ibcport.trim(),\n\t\t\t\t\t\t\tchannelID: this.ibcchannel.trim(),\n\t\t\t\t\t\t\tsender: this.selectedAccount, \n\t\t\t\t\t\t\ttimeoutTimestamp: new Date() + 10000, \n\t\t\t\t\t\t\tAssetSerial: this.ibcserial.trim(),\n\t\t\t\t\t\t\tReceiver: this.ibcreceiver.trim(),\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconsole.log(payload)\n\t\t\t\t\t\t// Dispatch\n\t\t\t\t\t\tlet result = await this.$store.dispatch(\n\t\t\t\t\t\tthis.modulePath + '/sendMsg' + this.ibctype,\n\t\t\t\t\t\t{value:payload, fee: []},\n\t\t\t\t\t\t)\n\t\t\t\t\t\t// END\n\n\t\t\t\t\t\tconsole.log(result.rawLog)\n\t\t\t\t\t\tconsole.log(result)\n\t\t\t\t\t\talert(result.rawLog)\n\t\t\t\t\t\tthis.ibcserial = \"\"\n\t\t\t\t\t\tthis.ibcreceiver = \"\" \n\t\t\t\t\t\tthis.ibcchannel = \"\"\n\t\t\t\t\t\tthis.ibcport = \"\"\n\t\t\t\t\t\n\t\t\t\t\t\tthis.$emit(result)\n\n\t\t\t\t} else {\n\t\t\t\t\talert(\"cancelled\")\n\t\t\t\t}\n\n\n\t\t\t} else {\n\t\t\t\talert(\"Please login with your wallet.\")\n\t\t\t}\n\t\t}\n\t}\n}\n</script>\n\n<style>\n\t#x1 {\n\t\tmargin-bottom: 10px;\n\t\twidth: 600px;\n\t\tborder-radius: 10px;\n\t}\n\n\t#x2 {\n\t\tmargin-bottom: 10px;\n\t\twidth: 600px;\n\t\tborder-radius: 10px;\n\t}\n\n\t#x3 {\n\t\tmargin-bottom: 10px;\n\t\twidth: 600px;\n\t\tborder-radius: 10px;\n\t}\n\n\t#x4 {\n\t\tmargin-bottom: 10px;\n\t\twidth: 600px;\n\t\tborder-radius: 10px;\n\t}\n\n\t#x5 {\n\t\tmargin-bottom: 10px;\n\t\twidth: 600px;\n\t\tborder-radius: 10px;\n\t}\n\n\t#x6 {\n\t\tmargin-bottom: 10px;\n\t\twidth: 600px;\n\t\tborder-radius: 10px;\n\t}\n</style>\n\n","import { render } from \"./SendAsset.vue?vue&type=template&id=29aae4e7\"\nimport script from \"./SendAsset.vue?vue&type=script&lang=js\"\nexport * from \"./SendAsset.vue?vue&type=script&lang=js\"\n\nimport \"./SendAsset.vue?vue&type=style&index=0&id=29aae4e7&lang=css\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<!-- <SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Winners\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Members\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool4Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool3Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool2Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool1Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool0Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"JoinPoolAndStakeAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"TimedOutAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"SentAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"TransferAsset\"  /> -->\n\t\t<!-- <SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"Asset\"  /> -->\n        <div>\n            <SpH3> Pool-0 </SpH3>\n          \t<SpTypeList\n\t\t\t\t\t:modulePath=modulePath\n\t\t\t\t\t:moduleType=mpool0\n\t\t\t\t\tclass=\"sp-type__list\"\n                    editOpen=false\n                    deleteOpen=false\n\t\t\t\t/>\n        </div>\n\n          <div>\n            <SpH3> Pool-1 </SpH3>\n          \t<SpTypeList\n\t\t\t\t\t:modulePath=modulePath\n\t\t\t\t\t:moduleType=mpool1\n\t\t\t\t\tclass=\"sp-type__list\"\n                    editOpen=false\n                    deleteOpen=false\n\t\t\t\t/>\n        </div>\n\n        <div>\n            <SpH3> Pool-2 </SpH3>\n          \t<SpTypeList\n\t\t\t\t\t:modulePath=modulePath\n\t\t\t\t\t:moduleType=mpool2\n\t\t\t\t\tclass=\"sp-type__list\"\n                    editOpen=false\n                    deleteOpen=false\n\t\t\t\t/>\n        </div>\n\n        <div>\n            <SpH3> Pool-3 </SpH3>\n          \t<SpTypeList\n\t\t\t\t\t:modulePath=modulePath\n\t\t\t\t\t:moduleType=mpool3\n\t\t\t\t\tclass=\"sp-type__list\"\n                    editOpen=false\n                    deleteOpen=false\n\t\t\t\t/>\n        </div>\n\n        <div>\n            <SpH3> Pool-4 </SpH3>\n          \t<SpTypeList\n\t\t\t\t\t:modulePath=modulePath\n\t\t\t\t\t:moduleType=mpool4\n\t\t\t\t\tclass=\"sp-type__list\"\n                    editOpen=false\n                    deleteOpen=false\n\t\t\t\t/>\n        </div>\n\n\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n    name: 'PoolView',\n    \n    data() {\n        return {\n            pool0: [\"1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj\", \"2\", \"3\"],\n            pool1: [],\n            pool2: [],\n            pool3: [],\n            pool4: [],\n            modulePath: \"sap200.shiaa3.shiaa3\",\n            mpool0: \"Pool0Ticket\",\n            mpool1: \"Pool1Ticket\",\n            mpool2: \"Pool2Ticket\",\n            mpool3: \"Pool3Ticket\",\n            mpool4: \"Pool4Ticket\",\n        }\n    }, \n\n    methods: {\n        async getPool0() {\n              try {\n                let res =  await this.$store.dispatch(this.modulePath + '/Query' + this.mpool0 + 'All', { options: {} } );\n                console.log(res)\n                this.pool0 = res.Pool0Ticket\n            } catch (e) {\n                console.log(e)\n                this.pool0 = []\n            }\n        }, \n\n        async getPool1() {\n              try {\n                let res =  await this.$store.dispatch(this.modulePath + '/Query' + this.mpool1 + 'All', { options: {} } );\n                console.log(res)\n                this.pool1 = res.Pool1Ticket\n            } catch (e) {\n                console.log(e)\n                this.pool1 = []\n            }\n        }, \n\n        async getPool2() {\n              try {\n                let res =  await this.$store.dispatch(this.modulePath + '/Query' + this.mpool2 + 'All', { options: {} } );\n                console.log(res)\n                this.pool2 = res.Pool1Ticket\n            } catch (e) {\n                console.log(e)\n                this.pool2 = []\n            }\n        }, \n\n        async getPool3() {\n              try {\n                let res =  await this.$store.dispatch(this.modulePath + '/Query' + this.mpool3 + 'All', { options: {} } );\n                console.log(res)\n                this.pool3 = res.Pool3Ticket\n            } catch (e) {\n                console.log(e)\n                this.pool3 = []\n            }\n        }, \n\n        async getPool4() {\n              try {\n                let res =  await this.$store.dispatch(this.modulePath + '/Query' + this.mpool4 + 'All', { options: {} } );\n                console.log(res)\n                this.pool4 = res.Pool4Ticket\n            } catch (e) {\n                console.log(e)\n                this.pool4 = []\n            }\n        }, \n\n\n    }\n}\n</script>\n\n\n","import { render } from \"./PoolView.vue?vue&type=template&id=e90fbbf8\"\nimport script from \"./PoolView.vue?vue&type=script&lang=js\"\nexport * from \"./PoolView.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n        <dropdown :options=\"poolNameList\" :selected=\"object\" v-on:updateOption=\"updatePoolName\" id=\"x1\"></dropdown>\n\t\t<!-- <input type=\"text\" id=\"x1\" class=\"sp-input\" placeholder=\"Pool Name\" v-on:keyup=\"updateSerial\" required/> -->\n\t\t<input type=\"text\" id=\"x2\" class=\"sp-input\" placeholder=\"Asset Serial\" v-on:keyup=\"updateSerial\" required/><br>\n\t\t<SpButton @click.native=\"joinAndStake\"> Join And Stake </SpButton>\n\n\t\n\n\n\n\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport dropdown from 'vue-dropdowns';\nexport default {\n    name: 'Game', \n    \n    data() {\n\t\treturn {\n\t\t\tserial: \"\",\n\t\t\tpoolName: \"\",\n\t\t\tmodulePath: \"sap200.shiaa3.shiaa3\",\n            moduleType: \"JoinPoolAndStakeAsset\",\n            object: {\n              name: 'Pool Name',\n            },\n            poolNameList: [{name: \"pool-0\"}, {name: \"pool-1\"}, {name: \"pool-2\"}, {name: \"pool-3\"}, {name: \"pool-4\"}]\n\t\t}\n    },\n\n    components: {\n            'dropdown': dropdown,\n    },\n\n\n    computed: {\n        address() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n        },\n        \n        selectedAccount() {\n\t\t\tif (this._depsLoaded) {\n\t\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n        },\n        \n    },\n    \n    methods: {\n        updateSerial(event) {\n\t\t\tthis.serial = event.target.value.trim()\n\t\t\tconsole.log(this.serial)\n\t\t}, \n\n\t\tupdatePoolName(payload) {\n\t\t\tthis.object = payload\n\t\t\tconsole.log(this.object.name)\n        }, \n        \n        async joinAndStake() {\n            if (this.serial != \"\" && this.object.name != \"\") {\n                console.log(\"Joining and staking\")\n                if (this.address != \"\") {\n                    var r = confirm(\"You are about to stake in \" + this.object.name + \". Press ok to confirm !\");\n                    console.log(r)\n                    if (r == true) {\n                        let payload = {creator: this.selectedAccount, id: 0, PoolNo: this.object.name, AssetSerial: this.serial}\n                        // send\n                        console.log(payload)\n                        // TODO\n                        // Write code to dispatch thats all\n                    let result = await this.$store.dispatch(\n                        this.modulePath + '/sendMsgCreate' + this.moduleType,\n                        {value: payload, fee: []},\n                    )\n                    console.log(result)\n                    alert(result.rawLog)\n                    this.$emit('Joined Pool')\n                    this.serial = \"\"\n                    this.object = {name: \"Pool Name\"}\n\n                    } else {\n                        alert(\"Joining cancelled\")\n                          this.serial = \"\"\n                          this.object = {name: \"Pool Name\"}\n                    }\n\n                } else {\n                    alert(\"Please Sign in with your wallet\")\n                    this.serial = \"\"\n                    this.object = {name: \"Pool Name\"}\n                }\n            } else {\n                alert(\"All fields should be filled.\")\n            }\n            \n        }\n    }\n}\n</script>\n\n\n<style>\n\t#x1 {\n\t\tmargin-bottom: 10px;\n\t\twidth: 600px;\n\t\tborder-radius: 10px;\n        font-size: 18px;\n\t}\n\n\t#x2 {\n\t\tmargin-bottom: 10px;\n\t\twidth: 600px;\n\t\tborder-radius: 10px;\n\t}\n</style>\n\n\n","import { render } from \"./Game.vue?vue&type=template&id=77302f59\"\nimport script from \"./Game.vue?vue&type=script&lang=js\"\nexport * from \"./Game.vue?vue&type=script&lang=js\"\n\nimport \"./Game.vue?vue&type=style&index=0&id=77302f59&lang=css\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<!-- <SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Winners\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Members\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool4Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool3Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool2Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool1Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool0Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"JoinPoolAndStakeAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"TimedOutAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"SentAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"TransferAsset\"  /> -->\n\t\t<!-- <SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"Asset\"  /> -->\n        <div>\n         <SpH3> Winners Ledger </SpH3>\n          \t<SpTypeList\n\t\t\t\t\t:modulePath=modulePath\n\t\t\t\t\t:moduleType=moduleType\n\t\t\t\t\tclass=\"sp-type__list\"\n                    editOpen=false\n                    deleteOpen=false\n\t\t\t\t/>\n        </div>\n\n\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n    name: 'Winner', \n\n    data() {\n        return {\n            modulePath: \"sap200.shiaa3.shiaa3\",\n            moduleType: \"Winners\",\n        }\n\n    },\n}\n</script>\n\n","import { render } from \"./Winner.vue?vue&type=template&id=7e4c4d7a\"\nimport script from \"./Winner.vue?vue&type=script&lang=js\"\nexport * from \"./Winner.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<!-- <SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Winners\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Members\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool4Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool3Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool2Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool1Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool0Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"JoinPoolAndStakeAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"TimedOutAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"SentAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"TransferAsset\"  /> -->\n\t\t<!-- <SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"Asset\"  /> -->\n        <div>\n         <SpH3> Members Ledger </SpH3>\n          \t<SpTypeList\n\t\t\t\t\t:modulePath=modulePath\n\t\t\t\t\t:moduleType=moduleType\n\t\t\t\t\tclass=\"sp-type__list\"\n                    editOpen=false\n                    deleteOpen=false\n\t\t\t\t/>\n        </div>\n\n\n\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n    name: 'Member', \n    \n      data() {\n        return {\n            modulePath: \"sap200.shiaa3.shiaa3\",\n            moduleType: \"Members\",\n        }\n\n    },\n}\n</script>\n\n","import { render } from \"./Member.vue?vue&type=template&id=238e87c6\"\nimport script from \"./Member.vue?vue&type=script&lang=js\"\nexport * from \"./Member.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<!-- <SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Winners\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Members\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool4Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool3Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool2Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool1Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool0Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"JoinPoolAndStakeAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"TimedOutAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"SentAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"TransferAsset\"  /> -->\n\t\t<!-- <SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"Asset\"  /> -->\n          <div>\n         <SpH3> IBC Sent Packet Ledger </SpH3>\n          \t<SpTypeList\n\t\t\t\t\t:modulePath=modulePath\n\t\t\t\t\t:moduleType=moduleType\n\t\t\t\t\tclass=\"sp-type__list\"\n                    editOpen=false\n                    deleteOpen=false\n\t\t\t\t/>\n        </div>\n\n\n\n\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n    name: 'IbcSent', \n    \n    data() {\n        return {\n            modulePath: \"sap200.shiaa3.assets\",\n            moduleType: \"SentAsset\",\n        }\n\n    },\n}\n</script>\n\n","import { render } from \"./IbcSent.vue?vue&type=template&id=387d7b5a\"\nimport script from \"./IbcSent.vue?vue&type=script&lang=js\"\nexport * from \"./IbcSent.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<!-- <SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Winners\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Members\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool4Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool3Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool2Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool1Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"Pool0Ticket\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.shiaa3\" moduleType=\"JoinPoolAndStakeAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"TimedOutAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"SentAsset\"  />\n\t\t<SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"TransferAsset\"  /> -->\n\t\t<!-- <SpType modulePath=\"sap200.shiaa3.assets\" moduleType=\"Asset\"  /> -->\n          <div>\n         <SpH3> IBC Timedout Packet Ledger </SpH3>\n          \t<SpTypeList\n\t\t\t\t\t:modulePath=modulePath\n\t\t\t\t\t:moduleType=moduleType\n\t\t\t\t\tclass=\"sp-type__list\"\n                    editOpen=false\n                    deleteOpen=false\n\t\t\t\t/>\n        </div>\n\n\n\n\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n    name: 'IbcTimeout', \n    \n    data() {\n        return {\n            modulePath: \"sap200.shiaa3.assets\",\n            moduleType: \"TimedOutAsset\",\n        }\n\n    },\n}\n</script>\n\n","import { render } from \"./IbcTimeout.vue?vue&type=template&id=21371faa\"\nimport script from \"./IbcTimeout.vue?vue&type=script&lang=js\"\nexport * from \"./IbcTimeout.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport BuyAsset from '@/views/BuyAsset.vue'\nimport ListAsset from '@/views/ListAsset.vue'\nimport SendAsset from '@/views/SendAsset.vue'\nimport PoolView from '@/views/PoolView.vue'\nimport Game from '@/views/Game.vue'\nimport Winner from '@/views/Winner.vue'\nimport Member from '@/views/Member.vue'\nimport IbcSent from '@/views/IbcSent.vue'\nimport IbcTimeout from '@/views/IbcTimeout.vue'\n\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types }, \n\t{ path: '/buyasset', component: BuyAsset },\n\t{ path: '/listasset', component: ListAsset}, \n\t{ path: '/sendmyasset', component: SendAsset},\n\t{ path: '/poolview', component: PoolView},\n\t{ path: '/gamble', component: Game}, \n\t{ path: '/winners', component: Winner},\n\t{ path: '/members', component: Member}, \n\t{ path: '/ibcsent', component: IbcSent}, \n\t{ path: '/ibctimedout', component: IbcTimeout}\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedChannel, PacketState, } from \"../../../../ibc/core/channel/v1/channel\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n};\nconst basePacketSequence = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, ValidatorSigningInfo, } from \"../../../cosmos/slashing/v1beta1/slashing\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSigningInfo = { address: \"\" };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorMissedBlocks = { address: \"\" };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { MerklePrefix } from \"../../../../ibc/core/commitment/v1/commitment\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseConnectionEnd = { clientId: \"\", state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseIdentifiedConnection = {\n    id: \"\",\n    clientId: \"\",\n    state: 0,\n    delayPeriod: 0,\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { clientId: \"\", connectionId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== \"\") {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientPaths = { paths: \"\" };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConnectionPaths = { clientId: \"\", paths: \"\" };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersion = { identifier: \"\", features: \"\" };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== \"\") {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"sap200.shiaa3.shiaa3\";\nconst baseWinners = {\n    creator: \"\",\n    id: 0,\n    AddressString: \"\",\n    PoolNo: \"\",\n    Winnings: \"\",\n};\nexport const Winners = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(26).string(message.AddressString);\n        }\n        if (message.PoolNo !== \"\") {\n            writer.uint32(34).string(message.PoolNo);\n        }\n        if (message.Winnings !== \"\") {\n            writer.uint32(42).string(message.Winnings);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseWinners };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AddressString = reader.string();\n                    break;\n                case 4:\n                    message.PoolNo = reader.string();\n                    break;\n                case 5:\n                    message.Winnings = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseWinners };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.PoolNo !== undefined && object.PoolNo !== null) {\n            message.PoolNo = String(object.PoolNo);\n        }\n        else {\n            message.PoolNo = \"\";\n        }\n        if (object.Winnings !== undefined && object.Winnings !== null) {\n            message.Winnings = String(object.Winnings);\n        }\n        else {\n            message.Winnings = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.PoolNo !== undefined && (obj.PoolNo = message.PoolNo);\n        message.Winnings !== undefined && (obj.Winnings = message.Winnings);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseWinners };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.PoolNo !== undefined && object.PoolNo !== null) {\n            message.PoolNo = object.PoolNo;\n        }\n        else {\n            message.PoolNo = \"\";\n        }\n        if (object.Winnings !== undefined && object.Winnings !== null) {\n            message.Winnings = object.Winnings;\n        }\n        else {\n            message.Winnings = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin, Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseParams = {\n    communityTax: \"\",\n    baseProposerReward: \"\",\n    bonusProposerReward: \"\",\n    withdrawAddrEnabled: false,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== \"\") {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== \"\") {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== \"\") {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: \"\" };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== \"\") {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposal = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: \"\",\n    height: 0,\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== \"\") {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseDelegationDelegatorReward = { validatorAddress: \"\" };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: \"\",\n    deposit: \"\",\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== \"\") {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseValidatorSigningInfo = {\n    address: \"\",\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0,\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined &&\n            (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined &&\n            (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"sap200.shiaa3.shiaa3\";\nconst basePool0Ticket = {\n    creator: \"\",\n    id: 0,\n    AddressString: \"\",\n    LambdaValue: \"\",\n};\nexport const Pool0Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(26).string(message.AddressString);\n        }\n        if (message.LambdaValue !== \"\") {\n            writer.uint32(34).string(message.LambdaValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool0Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AddressString = reader.string();\n                    break;\n                case 4:\n                    message.LambdaValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool0Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = String(object.LambdaValue);\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.LambdaValue !== undefined &&\n            (obj.LambdaValue = message.LambdaValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool0Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = object.LambdaValue;\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseMsgSubmitEvidence = { submitter: \"\" };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== \"\") {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.evidence.v1beta1.Msg\", \"SubmitEvidence\", data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool, } from \"../../../cosmos/distribution/v1beta1/distribution\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: \"\",\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: \"\",\n    period: 0,\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: \"\",\n    height: 0,\n    period: 0,\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n};\nconst baseGenesisState = { previousProposer: \"\" };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== \"\") {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"sap200.shiaa3.shiaa3\";\nconst baseMembers = { creator: \"\", id: 0, address: \"\" };\nexport const Members = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.address !== \"\") {\n            writer.uint32(26).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMembers };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMembers };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMembers };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ListAsset.vue?vue&type=style&index=0&id=36da2544&scoped=true&lang=css\"","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseMsgCreateVestingAccount = {\n    fromAddress: \"\",\n    toAddress: \"\",\n    endTime: 0,\n    delayed: false,\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.vesting.v1beta1.Msg\", \"CreateVestingAccount\", data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Channel, Packet } from \"../../../../ibc/core/channel/v1/channel\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseMsgChannelOpenInit = { portId: \"\", signer: \"\" };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenTry = {\n    portId: \"\",\n    previousChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== \"\") {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenAck = {\n    portId: \"\",\n    channelId: \"\",\n    counterpartyChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== \"\") {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseInit = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgRecvPacket = { signer: \"\" };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgAcknowledgement = { signer: \"\" };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenInit\", data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenTry\", data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenAck\", data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenConfirm\", data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseInit\", data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseConfirm\", data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"RecvPacket\", data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Timeout\", data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"TimeoutOnClose\", data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Acknowledgement\", data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.auth.v1beta1\";\nconst baseBaseAccount = { address: \"\", accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nconst baseModuleAccount = { name: \"\", permissions: \"\" };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"VOTE_OPTION_UNSPECIFIED\":\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case \"VOTE_OPTION_YES\":\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case \"VOTE_OPTION_ABSTAIN\":\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case \"VOTE_OPTION_NO\":\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case \"VOTE_OPTION_NO_WITH_VETO\":\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return \"VOTE_OPTION_UNSPECIFIED\";\n        case VoteOption.VOTE_OPTION_YES:\n            return \"VOTE_OPTION_YES\";\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return \"VOTE_OPTION_ABSTAIN\";\n        case VoteOption.VOTE_OPTION_NO:\n            return \"VOTE_OPTION_NO\";\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return \"VOTE_OPTION_NO_WITH_VETO\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"PROPOSAL_STATUS_UNSPECIFIED\":\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case \"PROPOSAL_STATUS_PASSED\":\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case \"PROPOSAL_STATUS_REJECTED\":\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case \"PROPOSAL_STATUS_FAILED\":\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return \"PROPOSAL_STATUS_UNSPECIFIED\";\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return \"PROPOSAL_STATUS_VOTING_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return \"PROPOSAL_STATUS_PASSED\";\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return \"PROPOSAL_STATUS_REJECTED\";\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return \"PROPOSAL_STATUS_FAILED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseTextProposal = { title: \"\", description: \"\" };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseDeposit = { proposalId: 0, depositor: \"\" };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyResult = {\n    yes: \"\",\n    abstain: \"\",\n    no: \"\",\n    noWithVeto: \"\",\n};\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== \"\") {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== \"\") {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== \"\") {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== \"\") {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n};\nconst baseVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseFungibleTokenPacketData = {\n    denom: \"\",\n    amount: 0,\n    sender: \"\",\n    receiver: \"\",\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n};\nconst baseDenomTrace = { path: \"\", baseDenom: \"\" };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== \"\") {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== \"\") {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined &&\n            (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedClientState, ClientConsensusStates, Params, } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0,\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseIdentifiedGenesisMetadata = { clientId: \"\" };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"sap200.shiaa3.assets\";\nconst baseTransferAsset = {\n    creator: \"\",\n    id: 0,\n    AssetSerial: \"\",\n    Receiver: \"\",\n};\nexport const TransferAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AssetSerial !== \"\") {\n            writer.uint32(26).string(message.AssetSerial);\n        }\n        if (message.Receiver !== \"\") {\n            writer.uint32(34).string(message.Receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTransferAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AssetSerial = reader.string();\n                    break;\n                case 4:\n                    message.Receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTransferAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = String(object.AssetSerial);\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = String(object.Receiver);\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AssetSerial !== undefined &&\n            (obj.AssetSerial = message.AssetSerial);\n        message.Receiver !== undefined && (obj.Receiver = message.Receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTransferAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = object.AssetSerial;\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = object.Receiver;\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nexport const protobufPackage = \"sap200.shiaa3.assets\";\nconst baseMsgSendIbcAsset = {\n    sender: \"\",\n    port: \"\",\n    channelID: \"\",\n    timeoutTimestamp: 0,\n    AssetSerial: \"\",\n    Receiver: \"\",\n};\nexport const MsgSendIbcAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.port !== \"\") {\n            writer.uint32(18).string(message.port);\n        }\n        if (message.channelID !== \"\") {\n            writer.uint32(26).string(message.channelID);\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(32).uint64(message.timeoutTimestamp);\n        }\n        if (message.AssetSerial !== \"\") {\n            writer.uint32(42).string(message.AssetSerial);\n        }\n        if (message.Receiver !== \"\") {\n            writer.uint32(50).string(message.Receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendIbcAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.port = reader.string();\n                    break;\n                case 3:\n                    message.channelID = reader.string();\n                    break;\n                case 4:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.AssetSerial = reader.string();\n                    break;\n                case 6:\n                    message.Receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSendIbcAsset };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.port !== undefined && object.port !== null) {\n            message.port = String(object.port);\n        }\n        else {\n            message.port = \"\";\n        }\n        if (object.channelID !== undefined && object.channelID !== null) {\n            message.channelID = String(object.channelID);\n        }\n        else {\n            message.channelID = \"\";\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = String(object.AssetSerial);\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = String(object.Receiver);\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.port !== undefined && (obj.port = message.port);\n        message.channelID !== undefined && (obj.channelID = message.channelID);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        message.AssetSerial !== undefined &&\n            (obj.AssetSerial = message.AssetSerial);\n        message.Receiver !== undefined && (obj.Receiver = message.Receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSendIbcAsset };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.port !== undefined && object.port !== null) {\n            message.port = object.port;\n        }\n        else {\n            message.port = \"\";\n        }\n        if (object.channelID !== undefined && object.channelID !== null) {\n            message.channelID = object.channelID;\n        }\n        else {\n            message.channelID = \"\";\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = object.AssetSerial;\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = object.Receiver;\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSendIbcAssetResponse = {};\nexport const MsgSendIbcAssetResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSendIbcAssetResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSendIbcAssetResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSendIbcAssetResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreateTimedOutAsset = {\n    creator: \"\",\n    AssetSerial: \"\",\n    Receiver: \"\",\n    TargetChain: \"\",\n};\nexport const MsgCreateTimedOutAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.AssetSerial !== \"\") {\n            writer.uint32(18).string(message.AssetSerial);\n        }\n        if (message.Receiver !== \"\") {\n            writer.uint32(26).string(message.Receiver);\n        }\n        if (message.TargetChain !== \"\") {\n            writer.uint32(34).string(message.TargetChain);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateTimedOutAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.AssetSerial = reader.string();\n                    break;\n                case 3:\n                    message.Receiver = reader.string();\n                    break;\n                case 4:\n                    message.TargetChain = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateTimedOutAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = String(object.AssetSerial);\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = String(object.Receiver);\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        if (object.TargetChain !== undefined && object.TargetChain !== null) {\n            message.TargetChain = String(object.TargetChain);\n        }\n        else {\n            message.TargetChain = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.AssetSerial !== undefined &&\n            (obj.AssetSerial = message.AssetSerial);\n        message.Receiver !== undefined && (obj.Receiver = message.Receiver);\n        message.TargetChain !== undefined &&\n            (obj.TargetChain = message.TargetChain);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateTimedOutAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = object.AssetSerial;\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = object.Receiver;\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        if (object.TargetChain !== undefined && object.TargetChain !== null) {\n            message.TargetChain = object.TargetChain;\n        }\n        else {\n            message.TargetChain = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateTimedOutAssetResponse = { id: 0 };\nexport const MsgCreateTimedOutAssetResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateTimedOutAssetResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateTimedOutAssetResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateTimedOutAssetResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateTimedOutAsset = {\n    creator: \"\",\n    id: 0,\n    AssetSerial: \"\",\n    Receiver: \"\",\n    TargetChain: \"\",\n};\nexport const MsgUpdateTimedOutAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AssetSerial !== \"\") {\n            writer.uint32(26).string(message.AssetSerial);\n        }\n        if (message.Receiver !== \"\") {\n            writer.uint32(34).string(message.Receiver);\n        }\n        if (message.TargetChain !== \"\") {\n            writer.uint32(42).string(message.TargetChain);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateTimedOutAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AssetSerial = reader.string();\n                    break;\n                case 4:\n                    message.Receiver = reader.string();\n                    break;\n                case 5:\n                    message.TargetChain = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateTimedOutAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = String(object.AssetSerial);\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = String(object.Receiver);\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        if (object.TargetChain !== undefined && object.TargetChain !== null) {\n            message.TargetChain = String(object.TargetChain);\n        }\n        else {\n            message.TargetChain = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AssetSerial !== undefined &&\n            (obj.AssetSerial = message.AssetSerial);\n        message.Receiver !== undefined && (obj.Receiver = message.Receiver);\n        message.TargetChain !== undefined &&\n            (obj.TargetChain = message.TargetChain);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateTimedOutAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = object.AssetSerial;\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = object.Receiver;\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        if (object.TargetChain !== undefined && object.TargetChain !== null) {\n            message.TargetChain = object.TargetChain;\n        }\n        else {\n            message.TargetChain = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateTimedOutAssetResponse = {};\nexport const MsgUpdateTimedOutAssetResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateTimedOutAssetResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateTimedOutAssetResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateTimedOutAssetResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteTimedOutAsset = { creator: \"\", id: 0 };\nexport const MsgDeleteTimedOutAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteTimedOutAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteTimedOutAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteTimedOutAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteTimedOutAssetResponse = {};\nexport const MsgDeleteTimedOutAssetResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteTimedOutAssetResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeleteTimedOutAssetResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeleteTimedOutAssetResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreateSentAsset = {\n    creator: \"\",\n    AssetSerial: \"\",\n    Receiver: \"\",\n    TargetChain: \"\",\n};\nexport const MsgCreateSentAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.AssetSerial !== \"\") {\n            writer.uint32(18).string(message.AssetSerial);\n        }\n        if (message.Receiver !== \"\") {\n            writer.uint32(26).string(message.Receiver);\n        }\n        if (message.TargetChain !== \"\") {\n            writer.uint32(34).string(message.TargetChain);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateSentAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.AssetSerial = reader.string();\n                    break;\n                case 3:\n                    message.Receiver = reader.string();\n                    break;\n                case 4:\n                    message.TargetChain = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateSentAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = String(object.AssetSerial);\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = String(object.Receiver);\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        if (object.TargetChain !== undefined && object.TargetChain !== null) {\n            message.TargetChain = String(object.TargetChain);\n        }\n        else {\n            message.TargetChain = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.AssetSerial !== undefined &&\n            (obj.AssetSerial = message.AssetSerial);\n        message.Receiver !== undefined && (obj.Receiver = message.Receiver);\n        message.TargetChain !== undefined &&\n            (obj.TargetChain = message.TargetChain);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateSentAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = object.AssetSerial;\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = object.Receiver;\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        if (object.TargetChain !== undefined && object.TargetChain !== null) {\n            message.TargetChain = object.TargetChain;\n        }\n        else {\n            message.TargetChain = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateSentAssetResponse = { id: 0 };\nexport const MsgCreateSentAssetResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateSentAssetResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateSentAssetResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateSentAssetResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateSentAsset = {\n    creator: \"\",\n    id: 0,\n    AssetSerial: \"\",\n    Receiver: \"\",\n    TargetChain: \"\",\n};\nexport const MsgUpdateSentAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AssetSerial !== \"\") {\n            writer.uint32(26).string(message.AssetSerial);\n        }\n        if (message.Receiver !== \"\") {\n            writer.uint32(34).string(message.Receiver);\n        }\n        if (message.TargetChain !== \"\") {\n            writer.uint32(42).string(message.TargetChain);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateSentAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AssetSerial = reader.string();\n                    break;\n                case 4:\n                    message.Receiver = reader.string();\n                    break;\n                case 5:\n                    message.TargetChain = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateSentAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = String(object.AssetSerial);\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = String(object.Receiver);\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        if (object.TargetChain !== undefined && object.TargetChain !== null) {\n            message.TargetChain = String(object.TargetChain);\n        }\n        else {\n            message.TargetChain = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AssetSerial !== undefined &&\n            (obj.AssetSerial = message.AssetSerial);\n        message.Receiver !== undefined && (obj.Receiver = message.Receiver);\n        message.TargetChain !== undefined &&\n            (obj.TargetChain = message.TargetChain);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateSentAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = object.AssetSerial;\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = object.Receiver;\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        if (object.TargetChain !== undefined && object.TargetChain !== null) {\n            message.TargetChain = object.TargetChain;\n        }\n        else {\n            message.TargetChain = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateSentAssetResponse = {};\nexport const MsgUpdateSentAssetResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateSentAssetResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateSentAssetResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateSentAssetResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteSentAsset = { creator: \"\", id: 0 };\nexport const MsgDeleteSentAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteSentAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteSentAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteSentAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteSentAssetResponse = {};\nexport const MsgDeleteSentAssetResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteSentAssetResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeleteSentAssetResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeleteSentAssetResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreateTransferAsset = {\n    creator: \"\",\n    AssetSerial: \"\",\n    Receiver: \"\",\n};\nexport const MsgCreateTransferAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.AssetSerial !== \"\") {\n            writer.uint32(18).string(message.AssetSerial);\n        }\n        if (message.Receiver !== \"\") {\n            writer.uint32(26).string(message.Receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateTransferAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.AssetSerial = reader.string();\n                    break;\n                case 3:\n                    message.Receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateTransferAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = String(object.AssetSerial);\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = String(object.Receiver);\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.AssetSerial !== undefined &&\n            (obj.AssetSerial = message.AssetSerial);\n        message.Receiver !== undefined && (obj.Receiver = message.Receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateTransferAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = object.AssetSerial;\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = object.Receiver;\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateTransferAssetResponse = { id: 0 };\nexport const MsgCreateTransferAssetResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateTransferAssetResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateTransferAssetResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateTransferAssetResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateTransferAsset = {\n    creator: \"\",\n    id: 0,\n    AssetSerial: \"\",\n    Receiver: \"\",\n};\nexport const MsgUpdateTransferAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AssetSerial !== \"\") {\n            writer.uint32(26).string(message.AssetSerial);\n        }\n        if (message.Receiver !== \"\") {\n            writer.uint32(34).string(message.Receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateTransferAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AssetSerial = reader.string();\n                    break;\n                case 4:\n                    message.Receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateTransferAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = String(object.AssetSerial);\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = String(object.Receiver);\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AssetSerial !== undefined &&\n            (obj.AssetSerial = message.AssetSerial);\n        message.Receiver !== undefined && (obj.Receiver = message.Receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateTransferAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = object.AssetSerial;\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = object.Receiver;\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateTransferAssetResponse = {};\nexport const MsgUpdateTransferAssetResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateTransferAssetResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateTransferAssetResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateTransferAssetResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteTransferAsset = { creator: \"\", id: 0 };\nexport const MsgDeleteTransferAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteTransferAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteTransferAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteTransferAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteTransferAssetResponse = {};\nexport const MsgDeleteTransferAssetResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteTransferAssetResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeleteTransferAssetResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeleteTransferAssetResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreateAsset = {\n    creator: \"\",\n    Serial: \"\",\n    Name: \"\",\n    AssetType: 0,\n    Tokens: 0,\n    Owner: \"\",\n};\nexport const MsgCreateAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.Serial !== \"\") {\n            writer.uint32(18).string(message.Serial);\n        }\n        if (message.Name !== \"\") {\n            writer.uint32(26).string(message.Name);\n        }\n        if (message.AssetType !== 0) {\n            writer.uint32(32).int32(message.AssetType);\n        }\n        if (message.Tokens !== 0) {\n            writer.uint32(40).int32(message.Tokens);\n        }\n        if (message.Owner !== \"\") {\n            writer.uint32(50).string(message.Owner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.Serial = reader.string();\n                    break;\n                case 3:\n                    message.Name = reader.string();\n                    break;\n                case 4:\n                    message.AssetType = reader.int32();\n                    break;\n                case 5:\n                    message.Tokens = reader.int32();\n                    break;\n                case 6:\n                    message.Owner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.Serial !== undefined && object.Serial !== null) {\n            message.Serial = String(object.Serial);\n        }\n        else {\n            message.Serial = \"\";\n        }\n        if (object.Name !== undefined && object.Name !== null) {\n            message.Name = String(object.Name);\n        }\n        else {\n            message.Name = \"\";\n        }\n        if (object.AssetType !== undefined && object.AssetType !== null) {\n            message.AssetType = Number(object.AssetType);\n        }\n        else {\n            message.AssetType = 0;\n        }\n        if (object.Tokens !== undefined && object.Tokens !== null) {\n            message.Tokens = Number(object.Tokens);\n        }\n        else {\n            message.Tokens = 0;\n        }\n        if (object.Owner !== undefined && object.Owner !== null) {\n            message.Owner = String(object.Owner);\n        }\n        else {\n            message.Owner = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.Serial !== undefined && (obj.Serial = message.Serial);\n        message.Name !== undefined && (obj.Name = message.Name);\n        message.AssetType !== undefined && (obj.AssetType = message.AssetType);\n        message.Tokens !== undefined && (obj.Tokens = message.Tokens);\n        message.Owner !== undefined && (obj.Owner = message.Owner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.Serial !== undefined && object.Serial !== null) {\n            message.Serial = object.Serial;\n        }\n        else {\n            message.Serial = \"\";\n        }\n        if (object.Name !== undefined && object.Name !== null) {\n            message.Name = object.Name;\n        }\n        else {\n            message.Name = \"\";\n        }\n        if (object.AssetType !== undefined && object.AssetType !== null) {\n            message.AssetType = object.AssetType;\n        }\n        else {\n            message.AssetType = 0;\n        }\n        if (object.Tokens !== undefined && object.Tokens !== null) {\n            message.Tokens = object.Tokens;\n        }\n        else {\n            message.Tokens = 0;\n        }\n        if (object.Owner !== undefined && object.Owner !== null) {\n            message.Owner = object.Owner;\n        }\n        else {\n            message.Owner = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateAssetResponse = { id: 0 };\nexport const MsgCreateAssetResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateAssetResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateAssetResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateAssetResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateAsset = {\n    creator: \"\",\n    id: 0,\n    Serial: \"\",\n    Name: \"\",\n    AssetType: 0,\n    Tokens: 0,\n    Owner: \"\",\n};\nexport const MsgUpdateAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.Serial !== \"\") {\n            writer.uint32(26).string(message.Serial);\n        }\n        if (message.Name !== \"\") {\n            writer.uint32(34).string(message.Name);\n        }\n        if (message.AssetType !== 0) {\n            writer.uint32(40).int32(message.AssetType);\n        }\n        if (message.Tokens !== 0) {\n            writer.uint32(48).int32(message.Tokens);\n        }\n        if (message.Owner !== \"\") {\n            writer.uint32(58).string(message.Owner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.Serial = reader.string();\n                    break;\n                case 4:\n                    message.Name = reader.string();\n                    break;\n                case 5:\n                    message.AssetType = reader.int32();\n                    break;\n                case 6:\n                    message.Tokens = reader.int32();\n                    break;\n                case 7:\n                    message.Owner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.Serial !== undefined && object.Serial !== null) {\n            message.Serial = String(object.Serial);\n        }\n        else {\n            message.Serial = \"\";\n        }\n        if (object.Name !== undefined && object.Name !== null) {\n            message.Name = String(object.Name);\n        }\n        else {\n            message.Name = \"\";\n        }\n        if (object.AssetType !== undefined && object.AssetType !== null) {\n            message.AssetType = Number(object.AssetType);\n        }\n        else {\n            message.AssetType = 0;\n        }\n        if (object.Tokens !== undefined && object.Tokens !== null) {\n            message.Tokens = Number(object.Tokens);\n        }\n        else {\n            message.Tokens = 0;\n        }\n        if (object.Owner !== undefined && object.Owner !== null) {\n            message.Owner = String(object.Owner);\n        }\n        else {\n            message.Owner = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.Serial !== undefined && (obj.Serial = message.Serial);\n        message.Name !== undefined && (obj.Name = message.Name);\n        message.AssetType !== undefined && (obj.AssetType = message.AssetType);\n        message.Tokens !== undefined && (obj.Tokens = message.Tokens);\n        message.Owner !== undefined && (obj.Owner = message.Owner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.Serial !== undefined && object.Serial !== null) {\n            message.Serial = object.Serial;\n        }\n        else {\n            message.Serial = \"\";\n        }\n        if (object.Name !== undefined && object.Name !== null) {\n            message.Name = object.Name;\n        }\n        else {\n            message.Name = \"\";\n        }\n        if (object.AssetType !== undefined && object.AssetType !== null) {\n            message.AssetType = object.AssetType;\n        }\n        else {\n            message.AssetType = 0;\n        }\n        if (object.Tokens !== undefined && object.Tokens !== null) {\n            message.Tokens = object.Tokens;\n        }\n        else {\n            message.Tokens = 0;\n        }\n        if (object.Owner !== undefined && object.Owner !== null) {\n            message.Owner = object.Owner;\n        }\n        else {\n            message.Owner = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateAssetResponse = {};\nexport const MsgUpdateAssetResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateAssetResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateAssetResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateAssetResponse };\n        return message;\n    },\n};\nconst baseMsgDeleteAsset = { creator: \"\", id: 0 };\nexport const MsgDeleteAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteAssetResponse = {};\nexport const MsgDeleteAssetResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteAssetResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteAssetResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteAssetResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SendIbcAsset(request) {\n        const data = MsgSendIbcAsset.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.assets.Msg\", \"SendIbcAsset\", data);\n        return promise.then((data) => MsgSendIbcAssetResponse.decode(new Reader(data)));\n    }\n    CreateTimedOutAsset(request) {\n        const data = MsgCreateTimedOutAsset.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.assets.Msg\", \"CreateTimedOutAsset\", data);\n        return promise.then((data) => MsgCreateTimedOutAssetResponse.decode(new Reader(data)));\n    }\n    UpdateTimedOutAsset(request) {\n        const data = MsgUpdateTimedOutAsset.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.assets.Msg\", \"UpdateTimedOutAsset\", data);\n        return promise.then((data) => MsgUpdateTimedOutAssetResponse.decode(new Reader(data)));\n    }\n    DeleteTimedOutAsset(request) {\n        const data = MsgDeleteTimedOutAsset.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.assets.Msg\", \"DeleteTimedOutAsset\", data);\n        return promise.then((data) => MsgDeleteTimedOutAssetResponse.decode(new Reader(data)));\n    }\n    CreateSentAsset(request) {\n        const data = MsgCreateSentAsset.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.assets.Msg\", \"CreateSentAsset\", data);\n        return promise.then((data) => MsgCreateSentAssetResponse.decode(new Reader(data)));\n    }\n    UpdateSentAsset(request) {\n        const data = MsgUpdateSentAsset.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.assets.Msg\", \"UpdateSentAsset\", data);\n        return promise.then((data) => MsgUpdateSentAssetResponse.decode(new Reader(data)));\n    }\n    DeleteSentAsset(request) {\n        const data = MsgDeleteSentAsset.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.assets.Msg\", \"DeleteSentAsset\", data);\n        return promise.then((data) => MsgDeleteSentAssetResponse.decode(new Reader(data)));\n    }\n    CreateTransferAsset(request) {\n        const data = MsgCreateTransferAsset.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.assets.Msg\", \"CreateTransferAsset\", data);\n        return promise.then((data) => MsgCreateTransferAssetResponse.decode(new Reader(data)));\n    }\n    UpdateTransferAsset(request) {\n        const data = MsgUpdateTransferAsset.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.assets.Msg\", \"UpdateTransferAsset\", data);\n        return promise.then((data) => MsgUpdateTransferAssetResponse.decode(new Reader(data)));\n    }\n    DeleteTransferAsset(request) {\n        const data = MsgDeleteTransferAsset.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.assets.Msg\", \"DeleteTransferAsset\", data);\n        return promise.then((data) => MsgDeleteTransferAssetResponse.decode(new Reader(data)));\n    }\n    CreateAsset(request) {\n        const data = MsgCreateAsset.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.assets.Msg\", \"CreateAsset\", data);\n        return promise.then((data) => MsgCreateAssetResponse.decode(new Reader(data)));\n    }\n    UpdateAsset(request) {\n        const data = MsgUpdateAsset.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.assets.Msg\", \"UpdateAsset\", data);\n        return promise.then((data) => MsgUpdateAssetResponse.decode(new Reader(data)));\n    }\n    DeleteAsset(request) {\n        const data = MsgDeleteAsset.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.assets.Msg\", \"DeleteAsset\", data);\n        return promise.then((data) => MsgDeleteAssetResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Counterparty, Version, } from \"../../../../ibc/core/connection/v1/connection\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\nconst baseMsgConnectionOpenInit = {\n    clientId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== \"\") {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    signer: \"\",\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== \"\") {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: \"\", signer: \"\" };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation, } from \"../../../cosmos/staking/v1beta1/staking\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n};\nconst baseLastValidatorPower = { address: \"\", power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from \"../../../../confio/proofs\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.core.commitment.v1\";\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePath = { keyPath: \"\" };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ics23\";\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_HASH\":\n            return HashOp.NO_HASH;\n        case 1:\n        case \"SHA256\":\n            return HashOp.SHA256;\n        case 2:\n        case \"SHA512\":\n            return HashOp.SHA512;\n        case 3:\n        case \"KECCAK\":\n            return HashOp.KECCAK;\n        case 4:\n        case \"RIPEMD160\":\n            return HashOp.RIPEMD160;\n        case 5:\n        case \"BITCOIN\":\n            return HashOp.BITCOIN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return \"NO_HASH\";\n        case HashOp.SHA256:\n            return \"SHA256\";\n        case HashOp.SHA512:\n            return \"SHA512\";\n        case HashOp.KECCAK:\n            return \"KECCAK\";\n        case HashOp.RIPEMD160:\n            return \"RIPEMD160\";\n        case HashOp.BITCOIN:\n            return \"BITCOIN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_PREFIX\":\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case \"VAR_PROTO\":\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case \"VAR_RLP\":\n            return LengthOp.VAR_RLP;\n        case 3:\n        case \"FIXED32_BIG\":\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case \"FIXED32_LITTLE\":\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case \"FIXED64_BIG\":\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case \"FIXED64_LITTLE\":\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case \"REQUIRE_32_BYTES\":\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case \"REQUIRE_64_BYTES\":\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return \"NO_PREFIX\";\n        case LengthOp.VAR_PROTO:\n            return \"VAR_PROTO\";\n        case LengthOp.VAR_RLP:\n            return \"VAR_RLP\";\n        case LengthOp.FIXED32_BIG:\n            return \"FIXED32_BIG\";\n        case LengthOp.FIXED32_LITTLE:\n            return \"FIXED32_LITTLE\";\n        case LengthOp.FIXED64_BIG:\n            return \"FIXED64_BIG\";\n        case LengthOp.FIXED64_LITTLE:\n            return \"FIXED64_LITTLE\";\n        case LengthOp.REQUIRE_32_BYTES:\n            return \"REQUIRE_32_BYTES\";\n        case LengthOp.REQUIRE_64_BYTES:\n            return \"REQUIRE_64_BYTES\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch\n                ? BatchProof.toJSON(message.batch)\n                : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0,\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0,\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"sap200.shiaa3.shiaa3\";\nconst baseJoinPoolAndStakeAsset = {\n    creator: \"\",\n    id: 0,\n    PoolNo: \"\",\n    AssetSerial: \"\",\n};\nexport const JoinPoolAndStakeAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.PoolNo !== \"\") {\n            writer.uint32(26).string(message.PoolNo);\n        }\n        if (message.AssetSerial !== \"\") {\n            writer.uint32(34).string(message.AssetSerial);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseJoinPoolAndStakeAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.PoolNo = reader.string();\n                    break;\n                case 4:\n                    message.AssetSerial = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseJoinPoolAndStakeAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.PoolNo !== undefined && object.PoolNo !== null) {\n            message.PoolNo = String(object.PoolNo);\n        }\n        else {\n            message.PoolNo = \"\";\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = String(object.AssetSerial);\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.PoolNo !== undefined && (obj.PoolNo = message.PoolNo);\n        message.AssetSerial !== undefined &&\n            (obj.AssetSerial = message.AssetSerial);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseJoinPoolAndStakeAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.PoolNo !== undefined && object.PoolNo !== null) {\n            message.PoolNo = object.PoolNo;\n        }\n        else {\n            message.PoolNo = \"\";\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = object.AssetSerial;\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nexport const protobufPackage = \"sap200.shiaa3.shiaa3\";\nconst baseMsgCreateWinners = {\n    creator: \"\",\n    AddressString: \"\",\n    PoolNo: \"\",\n    Winnings: \"\",\n};\nexport const MsgCreateWinners = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(18).string(message.AddressString);\n        }\n        if (message.PoolNo !== \"\") {\n            writer.uint32(26).string(message.PoolNo);\n        }\n        if (message.Winnings !== \"\") {\n            writer.uint32(34).string(message.Winnings);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateWinners };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.AddressString = reader.string();\n                    break;\n                case 3:\n                    message.PoolNo = reader.string();\n                    break;\n                case 4:\n                    message.Winnings = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateWinners };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.PoolNo !== undefined && object.PoolNo !== null) {\n            message.PoolNo = String(object.PoolNo);\n        }\n        else {\n            message.PoolNo = \"\";\n        }\n        if (object.Winnings !== undefined && object.Winnings !== null) {\n            message.Winnings = String(object.Winnings);\n        }\n        else {\n            message.Winnings = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.PoolNo !== undefined && (obj.PoolNo = message.PoolNo);\n        message.Winnings !== undefined && (obj.Winnings = message.Winnings);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateWinners };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.PoolNo !== undefined && object.PoolNo !== null) {\n            message.PoolNo = object.PoolNo;\n        }\n        else {\n            message.PoolNo = \"\";\n        }\n        if (object.Winnings !== undefined && object.Winnings !== null) {\n            message.Winnings = object.Winnings;\n        }\n        else {\n            message.Winnings = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateWinnersResponse = { id: 0 };\nexport const MsgCreateWinnersResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateWinnersResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateWinnersResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateWinnersResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateWinners = {\n    creator: \"\",\n    id: 0,\n    AddressString: \"\",\n    PoolNo: \"\",\n    Winnings: \"\",\n};\nexport const MsgUpdateWinners = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(26).string(message.AddressString);\n        }\n        if (message.PoolNo !== \"\") {\n            writer.uint32(34).string(message.PoolNo);\n        }\n        if (message.Winnings !== \"\") {\n            writer.uint32(42).string(message.Winnings);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateWinners };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AddressString = reader.string();\n                    break;\n                case 4:\n                    message.PoolNo = reader.string();\n                    break;\n                case 5:\n                    message.Winnings = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateWinners };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.PoolNo !== undefined && object.PoolNo !== null) {\n            message.PoolNo = String(object.PoolNo);\n        }\n        else {\n            message.PoolNo = \"\";\n        }\n        if (object.Winnings !== undefined && object.Winnings !== null) {\n            message.Winnings = String(object.Winnings);\n        }\n        else {\n            message.Winnings = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.PoolNo !== undefined && (obj.PoolNo = message.PoolNo);\n        message.Winnings !== undefined && (obj.Winnings = message.Winnings);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateWinners };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.PoolNo !== undefined && object.PoolNo !== null) {\n            message.PoolNo = object.PoolNo;\n        }\n        else {\n            message.PoolNo = \"\";\n        }\n        if (object.Winnings !== undefined && object.Winnings !== null) {\n            message.Winnings = object.Winnings;\n        }\n        else {\n            message.Winnings = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateWinnersResponse = {};\nexport const MsgUpdateWinnersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateWinnersResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateWinnersResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateWinnersResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteWinners = { creator: \"\", id: 0 };\nexport const MsgDeleteWinners = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteWinners };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteWinners };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteWinners };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteWinnersResponse = {};\nexport const MsgDeleteWinnersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteWinnersResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeleteWinnersResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeleteWinnersResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreateMembers = { creator: \"\", address: \"\" };\nexport const MsgCreateMembers = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.address !== \"\") {\n            writer.uint32(18).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateMembers };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateMembers };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateMembers };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateMembersResponse = { id: 0 };\nexport const MsgCreateMembersResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateMembersResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateMembersResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateMembersResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateMembers = { creator: \"\", id: 0, address: \"\" };\nexport const MsgUpdateMembers = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.address !== \"\") {\n            writer.uint32(26).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateMembers };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateMembers };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateMembers };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateMembersResponse = {};\nexport const MsgUpdateMembersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateMembersResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateMembersResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateMembersResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteMembers = { creator: \"\", id: 0 };\nexport const MsgDeleteMembers = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteMembers };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteMembers };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteMembers };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteMembersResponse = {};\nexport const MsgDeleteMembersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteMembersResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeleteMembersResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeleteMembersResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreatePool4Ticket = {\n    creator: \"\",\n    AddressString: \"\",\n    LambdaValue: \"\",\n};\nexport const MsgCreatePool4Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(18).string(message.AddressString);\n        }\n        if (message.LambdaValue !== \"\") {\n            writer.uint32(26).string(message.LambdaValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePool4Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.AddressString = reader.string();\n                    break;\n                case 3:\n                    message.LambdaValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePool4Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = String(object.LambdaValue);\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.LambdaValue !== undefined &&\n            (obj.LambdaValue = message.LambdaValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePool4Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = object.LambdaValue;\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreatePool4TicketResponse = { id: 0 };\nexport const MsgCreatePool4TicketResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreatePool4TicketResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreatePool4TicketResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreatePool4TicketResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePool4Ticket = {\n    creator: \"\",\n    id: 0,\n    AddressString: \"\",\n    LambdaValue: \"\",\n};\nexport const MsgUpdatePool4Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(26).string(message.AddressString);\n        }\n        if (message.LambdaValue !== \"\") {\n            writer.uint32(34).string(message.LambdaValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePool4Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AddressString = reader.string();\n                    break;\n                case 4:\n                    message.LambdaValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdatePool4Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = String(object.LambdaValue);\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.LambdaValue !== undefined &&\n            (obj.LambdaValue = message.LambdaValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdatePool4Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = object.LambdaValue;\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePool4TicketResponse = {};\nexport const MsgUpdatePool4TicketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdatePool4TicketResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdatePool4TicketResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdatePool4TicketResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeletePool4Ticket = { creator: \"\", id: 0 };\nexport const MsgDeletePool4Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePool4Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeletePool4Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeletePool4Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeletePool4TicketResponse = {};\nexport const MsgDeletePool4TicketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeletePool4TicketResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeletePool4TicketResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeletePool4TicketResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreatePool3Ticket = {\n    creator: \"\",\n    AddressString: \"\",\n    LambdaValue: \"\",\n};\nexport const MsgCreatePool3Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(18).string(message.AddressString);\n        }\n        if (message.LambdaValue !== \"\") {\n            writer.uint32(26).string(message.LambdaValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePool3Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.AddressString = reader.string();\n                    break;\n                case 3:\n                    message.LambdaValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePool3Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = String(object.LambdaValue);\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.LambdaValue !== undefined &&\n            (obj.LambdaValue = message.LambdaValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePool3Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = object.LambdaValue;\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreatePool3TicketResponse = { id: 0 };\nexport const MsgCreatePool3TicketResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreatePool3TicketResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreatePool3TicketResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreatePool3TicketResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePool3Ticket = {\n    creator: \"\",\n    id: 0,\n    AddressString: \"\",\n    LambdaValue: \"\",\n};\nexport const MsgUpdatePool3Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(26).string(message.AddressString);\n        }\n        if (message.LambdaValue !== \"\") {\n            writer.uint32(34).string(message.LambdaValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePool3Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AddressString = reader.string();\n                    break;\n                case 4:\n                    message.LambdaValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdatePool3Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = String(object.LambdaValue);\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.LambdaValue !== undefined &&\n            (obj.LambdaValue = message.LambdaValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdatePool3Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = object.LambdaValue;\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePool3TicketResponse = {};\nexport const MsgUpdatePool3TicketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdatePool3TicketResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdatePool3TicketResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdatePool3TicketResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeletePool3Ticket = { creator: \"\", id: 0 };\nexport const MsgDeletePool3Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePool3Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeletePool3Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeletePool3Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeletePool3TicketResponse = {};\nexport const MsgDeletePool3TicketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeletePool3TicketResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeletePool3TicketResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeletePool3TicketResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreatePool2Ticket = {\n    creator: \"\",\n    AddressString: \"\",\n    LambdaValue: \"\",\n};\nexport const MsgCreatePool2Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(18).string(message.AddressString);\n        }\n        if (message.LambdaValue !== \"\") {\n            writer.uint32(26).string(message.LambdaValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePool2Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.AddressString = reader.string();\n                    break;\n                case 3:\n                    message.LambdaValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePool2Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = String(object.LambdaValue);\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.LambdaValue !== undefined &&\n            (obj.LambdaValue = message.LambdaValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePool2Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = object.LambdaValue;\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreatePool2TicketResponse = { id: 0 };\nexport const MsgCreatePool2TicketResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreatePool2TicketResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreatePool2TicketResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreatePool2TicketResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePool2Ticket = {\n    creator: \"\",\n    id: 0,\n    AddressString: \"\",\n    LambdaValue: \"\",\n};\nexport const MsgUpdatePool2Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(26).string(message.AddressString);\n        }\n        if (message.LambdaValue !== \"\") {\n            writer.uint32(34).string(message.LambdaValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePool2Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AddressString = reader.string();\n                    break;\n                case 4:\n                    message.LambdaValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdatePool2Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = String(object.LambdaValue);\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.LambdaValue !== undefined &&\n            (obj.LambdaValue = message.LambdaValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdatePool2Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = object.LambdaValue;\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePool2TicketResponse = {};\nexport const MsgUpdatePool2TicketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdatePool2TicketResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdatePool2TicketResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdatePool2TicketResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeletePool2Ticket = { creator: \"\", id: 0 };\nexport const MsgDeletePool2Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePool2Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeletePool2Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeletePool2Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeletePool2TicketResponse = {};\nexport const MsgDeletePool2TicketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeletePool2TicketResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeletePool2TicketResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeletePool2TicketResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreatePool1Ticket = {\n    creator: \"\",\n    AddressString: \"\",\n    LambdaValue: \"\",\n};\nexport const MsgCreatePool1Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(18).string(message.AddressString);\n        }\n        if (message.LambdaValue !== \"\") {\n            writer.uint32(26).string(message.LambdaValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePool1Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.AddressString = reader.string();\n                    break;\n                case 3:\n                    message.LambdaValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePool1Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = String(object.LambdaValue);\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.LambdaValue !== undefined &&\n            (obj.LambdaValue = message.LambdaValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePool1Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = object.LambdaValue;\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreatePool1TicketResponse = { id: 0 };\nexport const MsgCreatePool1TicketResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreatePool1TicketResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreatePool1TicketResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreatePool1TicketResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePool1Ticket = {\n    creator: \"\",\n    id: 0,\n    AddressString: \"\",\n    LambdaValue: \"\",\n};\nexport const MsgUpdatePool1Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(26).string(message.AddressString);\n        }\n        if (message.LambdaValue !== \"\") {\n            writer.uint32(34).string(message.LambdaValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePool1Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AddressString = reader.string();\n                    break;\n                case 4:\n                    message.LambdaValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdatePool1Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = String(object.LambdaValue);\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.LambdaValue !== undefined &&\n            (obj.LambdaValue = message.LambdaValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdatePool1Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = object.LambdaValue;\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePool1TicketResponse = {};\nexport const MsgUpdatePool1TicketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdatePool1TicketResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdatePool1TicketResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdatePool1TicketResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeletePool1Ticket = { creator: \"\", id: 0 };\nexport const MsgDeletePool1Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePool1Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeletePool1Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeletePool1Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeletePool1TicketResponse = {};\nexport const MsgDeletePool1TicketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeletePool1TicketResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeletePool1TicketResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeletePool1TicketResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreatePool0Ticket = {\n    creator: \"\",\n    AddressString: \"\",\n    LambdaValue: \"\",\n};\nexport const MsgCreatePool0Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(18).string(message.AddressString);\n        }\n        if (message.LambdaValue !== \"\") {\n            writer.uint32(26).string(message.LambdaValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePool0Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.AddressString = reader.string();\n                    break;\n                case 3:\n                    message.LambdaValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePool0Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = String(object.LambdaValue);\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.LambdaValue !== undefined &&\n            (obj.LambdaValue = message.LambdaValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePool0Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = object.LambdaValue;\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreatePool0TicketResponse = { id: 0 };\nexport const MsgCreatePool0TicketResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreatePool0TicketResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreatePool0TicketResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreatePool0TicketResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePool0Ticket = {\n    creator: \"\",\n    id: 0,\n    AddressString: \"\",\n    LambdaValue: \"\",\n};\nexport const MsgUpdatePool0Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AddressString !== \"\") {\n            writer.uint32(26).string(message.AddressString);\n        }\n        if (message.LambdaValue !== \"\") {\n            writer.uint32(34).string(message.LambdaValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePool0Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AddressString = reader.string();\n                    break;\n                case 4:\n                    message.LambdaValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdatePool0Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = String(object.AddressString);\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = String(object.LambdaValue);\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AddressString !== undefined &&\n            (obj.AddressString = message.AddressString);\n        message.LambdaValue !== undefined &&\n            (obj.LambdaValue = message.LambdaValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdatePool0Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AddressString !== undefined && object.AddressString !== null) {\n            message.AddressString = object.AddressString;\n        }\n        else {\n            message.AddressString = \"\";\n        }\n        if (object.LambdaValue !== undefined && object.LambdaValue !== null) {\n            message.LambdaValue = object.LambdaValue;\n        }\n        else {\n            message.LambdaValue = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePool0TicketResponse = {};\nexport const MsgUpdatePool0TicketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdatePool0TicketResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdatePool0TicketResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdatePool0TicketResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeletePool0Ticket = { creator: \"\", id: 0 };\nexport const MsgDeletePool0Ticket = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePool0Ticket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeletePool0Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeletePool0Ticket };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeletePool0TicketResponse = {};\nexport const MsgDeletePool0TicketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeletePool0TicketResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeletePool0TicketResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeletePool0TicketResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreateJoinPoolAndStakeAsset = {\n    creator: \"\",\n    PoolNo: \"\",\n    AssetSerial: \"\",\n};\nexport const MsgCreateJoinPoolAndStakeAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.PoolNo !== \"\") {\n            writer.uint32(18).string(message.PoolNo);\n        }\n        if (message.AssetSerial !== \"\") {\n            writer.uint32(26).string(message.AssetSerial);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateJoinPoolAndStakeAsset,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.PoolNo = reader.string();\n                    break;\n                case 3:\n                    message.AssetSerial = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateJoinPoolAndStakeAsset,\n        };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.PoolNo !== undefined && object.PoolNo !== null) {\n            message.PoolNo = String(object.PoolNo);\n        }\n        else {\n            message.PoolNo = \"\";\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = String(object.AssetSerial);\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.PoolNo !== undefined && (obj.PoolNo = message.PoolNo);\n        message.AssetSerial !== undefined &&\n            (obj.AssetSerial = message.AssetSerial);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateJoinPoolAndStakeAsset,\n        };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.PoolNo !== undefined && object.PoolNo !== null) {\n            message.PoolNo = object.PoolNo;\n        }\n        else {\n            message.PoolNo = \"\";\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = object.AssetSerial;\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateJoinPoolAndStakeAssetResponse = { id: 0 };\nexport const MsgCreateJoinPoolAndStakeAssetResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateJoinPoolAndStakeAssetResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateJoinPoolAndStakeAssetResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateJoinPoolAndStakeAssetResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateJoinPoolAndStakeAsset = {\n    creator: \"\",\n    id: 0,\n    PoolNo: \"\",\n    AssetSerial: \"\",\n};\nexport const MsgUpdateJoinPoolAndStakeAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.PoolNo !== \"\") {\n            writer.uint32(26).string(message.PoolNo);\n        }\n        if (message.AssetSerial !== \"\") {\n            writer.uint32(34).string(message.AssetSerial);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateJoinPoolAndStakeAsset,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.PoolNo = reader.string();\n                    break;\n                case 4:\n                    message.AssetSerial = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgUpdateJoinPoolAndStakeAsset,\n        };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.PoolNo !== undefined && object.PoolNo !== null) {\n            message.PoolNo = String(object.PoolNo);\n        }\n        else {\n            message.PoolNo = \"\";\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = String(object.AssetSerial);\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.PoolNo !== undefined && (obj.PoolNo = message.PoolNo);\n        message.AssetSerial !== undefined &&\n            (obj.AssetSerial = message.AssetSerial);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgUpdateJoinPoolAndStakeAsset,\n        };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.PoolNo !== undefined && object.PoolNo !== null) {\n            message.PoolNo = object.PoolNo;\n        }\n        else {\n            message.PoolNo = \"\";\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = object.AssetSerial;\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateJoinPoolAndStakeAssetResponse = {};\nexport const MsgUpdateJoinPoolAndStakeAssetResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateJoinPoolAndStakeAssetResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateJoinPoolAndStakeAssetResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateJoinPoolAndStakeAssetResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteJoinPoolAndStakeAsset = { creator: \"\", id: 0 };\nexport const MsgDeleteJoinPoolAndStakeAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteJoinPoolAndStakeAsset,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgDeleteJoinPoolAndStakeAsset,\n        };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgDeleteJoinPoolAndStakeAsset,\n        };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteJoinPoolAndStakeAssetResponse = {};\nexport const MsgDeleteJoinPoolAndStakeAssetResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteJoinPoolAndStakeAssetResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeleteJoinPoolAndStakeAssetResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeleteJoinPoolAndStakeAssetResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateWinners(request) {\n        const data = MsgCreateWinners.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"CreateWinners\", data);\n        return promise.then((data) => MsgCreateWinnersResponse.decode(new Reader(data)));\n    }\n    UpdateWinners(request) {\n        const data = MsgUpdateWinners.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"UpdateWinners\", data);\n        return promise.then((data) => MsgUpdateWinnersResponse.decode(new Reader(data)));\n    }\n    DeleteWinners(request) {\n        const data = MsgDeleteWinners.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"DeleteWinners\", data);\n        return promise.then((data) => MsgDeleteWinnersResponse.decode(new Reader(data)));\n    }\n    CreateMembers(request) {\n        const data = MsgCreateMembers.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"CreateMembers\", data);\n        return promise.then((data) => MsgCreateMembersResponse.decode(new Reader(data)));\n    }\n    UpdateMembers(request) {\n        const data = MsgUpdateMembers.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"UpdateMembers\", data);\n        return promise.then((data) => MsgUpdateMembersResponse.decode(new Reader(data)));\n    }\n    DeleteMembers(request) {\n        const data = MsgDeleteMembers.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"DeleteMembers\", data);\n        return promise.then((data) => MsgDeleteMembersResponse.decode(new Reader(data)));\n    }\n    CreatePool4Ticket(request) {\n        const data = MsgCreatePool4Ticket.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"CreatePool4Ticket\", data);\n        return promise.then((data) => MsgCreatePool4TicketResponse.decode(new Reader(data)));\n    }\n    UpdatePool4Ticket(request) {\n        const data = MsgUpdatePool4Ticket.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"UpdatePool4Ticket\", data);\n        return promise.then((data) => MsgUpdatePool4TicketResponse.decode(new Reader(data)));\n    }\n    DeletePool4Ticket(request) {\n        const data = MsgDeletePool4Ticket.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"DeletePool4Ticket\", data);\n        return promise.then((data) => MsgDeletePool4TicketResponse.decode(new Reader(data)));\n    }\n    CreatePool3Ticket(request) {\n        const data = MsgCreatePool3Ticket.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"CreatePool3Ticket\", data);\n        return promise.then((data) => MsgCreatePool3TicketResponse.decode(new Reader(data)));\n    }\n    UpdatePool3Ticket(request) {\n        const data = MsgUpdatePool3Ticket.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"UpdatePool3Ticket\", data);\n        return promise.then((data) => MsgUpdatePool3TicketResponse.decode(new Reader(data)));\n    }\n    DeletePool3Ticket(request) {\n        const data = MsgDeletePool3Ticket.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"DeletePool3Ticket\", data);\n        return promise.then((data) => MsgDeletePool3TicketResponse.decode(new Reader(data)));\n    }\n    CreatePool2Ticket(request) {\n        const data = MsgCreatePool2Ticket.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"CreatePool2Ticket\", data);\n        return promise.then((data) => MsgCreatePool2TicketResponse.decode(new Reader(data)));\n    }\n    UpdatePool2Ticket(request) {\n        const data = MsgUpdatePool2Ticket.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"UpdatePool2Ticket\", data);\n        return promise.then((data) => MsgUpdatePool2TicketResponse.decode(new Reader(data)));\n    }\n    DeletePool2Ticket(request) {\n        const data = MsgDeletePool2Ticket.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"DeletePool2Ticket\", data);\n        return promise.then((data) => MsgDeletePool2TicketResponse.decode(new Reader(data)));\n    }\n    CreatePool1Ticket(request) {\n        const data = MsgCreatePool1Ticket.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"CreatePool1Ticket\", data);\n        return promise.then((data) => MsgCreatePool1TicketResponse.decode(new Reader(data)));\n    }\n    UpdatePool1Ticket(request) {\n        const data = MsgUpdatePool1Ticket.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"UpdatePool1Ticket\", data);\n        return promise.then((data) => MsgUpdatePool1TicketResponse.decode(new Reader(data)));\n    }\n    DeletePool1Ticket(request) {\n        const data = MsgDeletePool1Ticket.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"DeletePool1Ticket\", data);\n        return promise.then((data) => MsgDeletePool1TicketResponse.decode(new Reader(data)));\n    }\n    CreatePool0Ticket(request) {\n        const data = MsgCreatePool0Ticket.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"CreatePool0Ticket\", data);\n        return promise.then((data) => MsgCreatePool0TicketResponse.decode(new Reader(data)));\n    }\n    UpdatePool0Ticket(request) {\n        const data = MsgUpdatePool0Ticket.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"UpdatePool0Ticket\", data);\n        return promise.then((data) => MsgUpdatePool0TicketResponse.decode(new Reader(data)));\n    }\n    DeletePool0Ticket(request) {\n        const data = MsgDeletePool0Ticket.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"DeletePool0Ticket\", data);\n        return promise.then((data) => MsgDeletePool0TicketResponse.decode(new Reader(data)));\n    }\n    CreateJoinPoolAndStakeAsset(request) {\n        const data = MsgCreateJoinPoolAndStakeAsset.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"CreateJoinPoolAndStakeAsset\", data);\n        return promise.then((data) => MsgCreateJoinPoolAndStakeAssetResponse.decode(new Reader(data)));\n    }\n    UpdateJoinPoolAndStakeAsset(request) {\n        const data = MsgUpdateJoinPoolAndStakeAsset.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"UpdateJoinPoolAndStakeAsset\", data);\n        return promise.then((data) => MsgUpdateJoinPoolAndStakeAssetResponse.decode(new Reader(data)));\n    }\n    DeleteJoinPoolAndStakeAsset(request) {\n        const data = MsgDeleteJoinPoolAndStakeAsset.encode(request).finish();\n        const promise = this.rpc.request(\"sap200.shiaa3.shiaa3.Msg\", \"DeleteJoinPoolAndStakeAsset\", data);\n        return promise.then((data) => MsgDeleteJoinPoolAndStakeAssetResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Event } from \"../../../../tendermint/abci/types\";\nexport const protobufPackage = \"cosmos.base.abci.v1beta1\";\nconst baseTxResponse = {\n    height: 0,\n    txhash: \"\",\n    codespace: \"\",\n    code: 0,\n    data: \"\",\n    rawLog: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: \"\",\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== \"\") {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== \"\") {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== \"\") {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== \"\") {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== \"\") {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: \"\" };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseStringEvent = { type: \"\" };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseAttribute = { key: \"\", value: \"\" };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n};\nconst baseResult = { log: \"\" };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgData = { msgType: \"\" };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== \"\") {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0,\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"sap200.shiaa3.assets\";\nconst baseTimedOutAsset = {\n    creator: \"\",\n    id: 0,\n    AssetSerial: \"\",\n    Receiver: \"\",\n    TargetChain: \"\",\n};\nexport const TimedOutAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AssetSerial !== \"\") {\n            writer.uint32(26).string(message.AssetSerial);\n        }\n        if (message.Receiver !== \"\") {\n            writer.uint32(34).string(message.Receiver);\n        }\n        if (message.TargetChain !== \"\") {\n            writer.uint32(42).string(message.TargetChain);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimedOutAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AssetSerial = reader.string();\n                    break;\n                case 4:\n                    message.Receiver = reader.string();\n                    break;\n                case 5:\n                    message.TargetChain = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimedOutAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = String(object.AssetSerial);\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = String(object.Receiver);\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        if (object.TargetChain !== undefined && object.TargetChain !== null) {\n            message.TargetChain = String(object.TargetChain);\n        }\n        else {\n            message.TargetChain = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AssetSerial !== undefined &&\n            (obj.AssetSerial = message.AssetSerial);\n        message.Receiver !== undefined && (obj.Receiver = message.Receiver);\n        message.TargetChain !== undefined &&\n            (obj.TargetChain = message.TargetChain);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimedOutAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = object.AssetSerial;\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = object.Receiver;\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        if (object.TargetChain !== undefined && object.TargetChain !== null) {\n            message.TargetChain = object.TargetChain;\n        }\n        else {\n            message.TargetChain = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./OwnerAssetList.vue?vue&type=style&index=0&id=4da59ade&scoped=true&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../../cosmos/base/v1beta1/coin\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseMsgTransfer = {\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    sender: \"\",\n    receiver: \"\",\n    timeoutTimestamp: 0,\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== \"\") {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Msg\", \"Transfer\", data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"sap200.shiaa3.assets\";\nconst baseSentAsset = {\n    creator: \"\",\n    id: 0,\n    AssetSerial: \"\",\n    Receiver: \"\",\n    TargetChain: \"\",\n};\nexport const SentAsset = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.AssetSerial !== \"\") {\n            writer.uint32(26).string(message.AssetSerial);\n        }\n        if (message.Receiver !== \"\") {\n            writer.uint32(34).string(message.Receiver);\n        }\n        if (message.TargetChain !== \"\") {\n            writer.uint32(42).string(message.TargetChain);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSentAsset };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.AssetSerial = reader.string();\n                    break;\n                case 4:\n                    message.Receiver = reader.string();\n                    break;\n                case 5:\n                    message.TargetChain = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSentAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = String(object.AssetSerial);\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = String(object.Receiver);\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        if (object.TargetChain !== undefined && object.TargetChain !== null) {\n            message.TargetChain = String(object.TargetChain);\n        }\n        else {\n            message.TargetChain = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.AssetSerial !== undefined &&\n            (obj.AssetSerial = message.AssetSerial);\n        message.Receiver !== undefined && (obj.Receiver = message.Receiver);\n        message.TargetChain !== undefined &&\n            (obj.TargetChain = message.TargetChain);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSentAsset };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.AssetSerial !== undefined && object.AssetSerial !== null) {\n            message.AssetSerial = object.AssetSerial;\n        }\n        else {\n            message.AssetSerial = \"\";\n        }\n        if (object.Receiver !== undefined && object.Receiver !== null) {\n            message.Receiver = object.Receiver;\n        }\n        else {\n            message.Receiver = \"\";\n        }\n        if (object.TargetChain !== undefined && object.TargetChain !== null) {\n            message.TargetChain = object.TargetChain;\n        }\n        else {\n            message.TargetChain = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON, } from \"../../../cosmos/gov/v1beta1/gov\";\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\nconst baseMsgSubmitProposal = { proposer: \"\" };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: \"\" };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Vote\", data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Deposit\", data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"],"sourceRoot":""}